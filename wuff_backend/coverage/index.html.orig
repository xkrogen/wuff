<!DOCTYPE html>
<html xmlns='http://www.w3.org/1999/xhtml'>
  <head>
    <title>Code coverage for Wuff backend</title>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <script src='./assets/0.8.0/application.js' type='text/javascript'></script>    
    <link href='./assets/0.8.0/application.css' media='screen, projection, print' rel='stylesheet' type='text/css'>
    <link rel="shortcut icon" type="image/png" href="./assets/0.8.0/favicon_red.png" />
    <link rel="icon" type="image/png" href="./assets/0.8.0/favicon.png" />
  </head>
  
  <body>
    <div id="loading">
      <img src="./assets/0.8.0/loading.gif" alt="loading"/>
    </div>
    <div id="wrapper" style="display:none;">
<<<<<<< HEAD
      <div class="timestamp">Generated <abbr class="timeago" title="2014-04-27T18:46:35-07:00">2014-04-27T18:46:35-07:00</abbr></div>
=======
      <div class="timestamp">Generated <abbr class="timeago" title="2014-04-18T16:00:57-07:00">2014-04-18T16:00:57-07:00</abbr></div>
>>>>>>> master
      <ul class="group_tabs"></ul>

      <div id="content">
        <div class="file_list_container" id="AllFiles">
  <h2>
    <span class="group_name">All Files</span>
<<<<<<< HEAD
    (<span class="covered_percent"><span class="red">56.07%</span></span>
     covered at
     <span class="covered_strength">
       <span class="green">
         10.18
=======
    (<span class="covered_percent"><span class="green">96.09%</span></span>
     covered at
     <span class="covered_strength">
       <span class="green">
         15.4
>>>>>>> master
       </span>
    </span> hits/line)
  </h2>
  <a name="AllFiles"></a>
  <div>
<<<<<<< HEAD
    <b>30</b> files in total.
    <b>642</b> relevant lines. 
    <span class="green"><b>360</b> lines covered</span> and
    <span class="red"><b>282</b> lines missed </span>
=======
    <b>41</b> files in total.
    <b>2760</b> relevant lines. 
    <span class="green"><b>2652</b> lines covered</span> and
    <span class="red"><b>108</b> lines missed </span>
>>>>>>> master
  </div>
  <table class="file_list">
    <thead>
      <tr>
        <th>File</th>
        <th>% covered</th>
        <th>Lines</th>
        <th>Relevant Lines</th>
        <th>Lines covered</th>
        <th>Lines missed</th>
        <th>Avg. Hits / Line</th>
      </tr>
    </thead>
    <tbody>
      
      <tr>
        <td class="strong"><a href="#1796ce62bd22d96054060965bf08a8266bd5bb21" class="src_link" title="app/classes/Condition.rb">app/classes/Condition.rb</a></td>
<<<<<<< HEAD
        <td class="red strong">36.84 %</td>
        <td>51</td>
        <td>19</td>
        <td>7</td>
        <td>12</td>
        <td>0.4</td>
=======
        <td class="yellow strong">87.5 %</td>
        <td>57</td>
        <td>24</td>
        <td>21</td>
        <td>3</td>
        <td>34.7</td>
>>>>>>> master
      </tr>
      
      <tr>
        <td class="strong"><a href="#ffc7f6d407a9d7b4013091ded5f3fbe922a41780" class="src_link" title="app/classes/ConditionNotification.rb">app/classes/ConditionNotification.rb</a></td>
<<<<<<< HEAD
        <td class="red strong">46.15 %</td>
        <td>28</td>
        <td>13</td>
        <td>6</td>
        <td>7</td>
        <td>0.5</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#55f5403bd2dcc103122cbf5767cad254ad11afd0" class="src_link" title="app/classes/EventNotification.rb">app/classes/EventNotification.rb</a></td>
        <td class="red strong">73.68 %</td>
        <td>38</td>
        <td>19</td>
        <td>14</td>
=======
        <td class="green strong">92.31 %</td>
        <td>28</td>
        <td>13</td>
        <td>12</td>
        <td>1</td>
        <td>14.3</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#55f5403bd2dcc103122cbf5767cad254ad11afd0" class="src_link" title="app/classes/EventNotification.rb">app/classes/EventNotification.rb</a></td>
        <td class="red strong">76.47 %</td>
        <td>35</td>
        <td>17</td>
        <td>13</td>
        <td>4</td>
        <td>28.4</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#8036595fde447137b8debcc222811cddff255e43" class="src_link" title="app/classes/FriendNotification.rb">app/classes/FriendNotification.rb</a></td>
        <td class="yellow strong">90.0 %</td>
        <td>24</td>
        <td>10</td>
        <td>9</td>
        <td>1</td>
        <td>6.6</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#1891258a3af6f9e2f9931e6f132f5bef9093e6fc" class="src_link" title="app/classes/NoCondition.rb">app/classes/NoCondition.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>25</td>
        <td>10</td>
        <td>10</td>
        <td>0</td>
        <td>45.7</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#1cdca41fa4970a210677e6be30afa63f2e00bfb7" class="src_link" title="app/classes/Notification.rb">app/classes/Notification.rb</a></td>
        <td class="red strong">41.67 %</td>
        <td>31</td>
        <td>12</td>
        <td>5</td>
        <td>7</td>
        <td>11.2</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#2299fb8c6fd8e5d47c0c47a0a9084ead8acfc2fe" class="src_link" title="app/classes/NumberCondition.rb">app/classes/NumberCondition.rb</a></td>
        <td class="yellow strong">90.0 %</td>
        <td>28</td>
        <td>10</td>
        <td>9</td>
        <td>1</td>
        <td>13.9</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#590513bc154a8ae8599584df083f95f1eede256f" class="src_link" title="app/classes/UserCondition.rb">app/classes/UserCondition.rb</a></td>
        <td class="yellow strong">88.89 %</td>
        <td>34</td>
        <td>18</td>
        <td>16</td>
        <td>2</td>
        <td>37.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#feaa6b4660e08f2f1077026ff21c446d2a49c1c6" class="src_link" title="app/controllers/application_controller.rb">app/controllers/application_controller.rb</a></td>
        <td class="green strong">100.0 %</td>
>>>>>>> master
        <td>5</td>
        <td>8.4</td>
      </tr>
      
      <tr>
<<<<<<< HEAD
        <td class="strong"><a href="#8036595fde447137b8debcc222811cddff255e43" class="src_link" title="app/classes/FriendNotification.rb">app/classes/FriendNotification.rb</a></td>
        <td class="red strong">60.0 %</td>
        <td>24</td>
        <td>10</td>
        <td>6</td>
        <td>4</td>
        <td>0.6</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#1891258a3af6f9e2f9931e6f132f5bef9093e6fc" class="src_link" title="app/classes/NoCondition.rb">app/classes/NoCondition.rb</a></td>
        <td class="red strong">80.0 %</td>
        <td>25</td>
        <td>10</td>
        <td>8</td>
=======
        <td class="strong"><a href="#5cd1019bd35389a46649cd52011e6a39b1ce3d11" class="src_link" title="app/controllers/events_controller.rb">app/controllers/events_controller.rb</a></td>
        <td class="red strong">78.1 %</td>
        <td>261</td>
        <td>137</td>
        <td>107</td>
        <td>30</td>
        <td>5.1</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#e6f360291614a4953cbd1e766d2e9aee223dcdad" class="src_link" title="app/controllers/groups_controller.rb">app/controllers/groups_controller.rb</a></td>
        <td class="green strong">97.75 %</td>
        <td>181</td>
        <td>89</td>
        <td>87</td>
>>>>>>> master
        <td>2</td>
        <td>13.2</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#1cdca41fa4970a210677e6be30afa63f2e00bfb7" class="src_link" title="app/classes/Notification.rb">app/classes/Notification.rb</a></td>
        <td class="red strong">38.46 %</td>
        <td>32</td>
        <td>13</td>
        <td>5</td>
        <td>8</td>
        <td>2.6</td>
      </tr>
      
      <tr>
<<<<<<< HEAD
        <td class="strong"><a href="#aa206fc6eae7adc73c683826ee680a21c162f8c2" class="src_link" title="app/classes/NotifyHandler.rb">app/classes/NotifyHandler.rb</a></td>
        <td class="red strong">42.86 %</td>
        <td>28</td>
        <td>14</td>
        <td>6</td>
        <td>8</td>
        <td>0.4</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#feaa6b4660e08f2f1077026ff21c446d2a49c1c6" class="src_link" title="app/controllers/application_controller.rb">app/controllers/application_controller.rb</a></td>
=======
        <td class="strong"><a href="#9398d3adf6c532814b2d60e14f02fb0235d82e9b" class="src_link" title="app/controllers/users_controller.rb">app/controllers/users_controller.rb</a></td>
        <td class="yellow strong">82.97 %</td>
        <td>317</td>
        <td>182</td>
        <td>151</td>
        <td>31</td>
        <td>6.1</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#6246dc083506622a592868bab3c3d59dbc40f898" class="src_link" title="app/helpers/application_helper.rb">app/helpers/application_helper.rb</a></td>
>>>>>>> master
        <td class="green strong">100.0 %</td>
        <td>5</td>
        <td>1</td>
        <td>1</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
<<<<<<< HEAD
        <td class="strong"><a href="#5cd1019bd35389a46649cd52011e6a39b1ce3d11" class="src_link" title="app/controllers/events_controller.rb">app/controllers/events_controller.rb</a></td>
        <td class="red strong">27.63 %</td>
        <td>292</td>
        <td>152</td>
        <td>42</td>
        <td>110</td>
        <td>1.3</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#6246dc083506622a592868bab3c3d59dbc40f898" class="src_link" title="app/helpers/application_helper.rb">app/helpers/application_helper.rb</a></td>
=======
        <td class="strong"><a href="#31844e57e4fce977f6021e6d678ac92591f91c39" class="src_link" title="app/helpers/events_helper.rb">app/helpers/events_helper.rb</a></td>
>>>>>>> master
        <td class="green strong">100.0 %</td>
        <td>2</td>
        <td>1</td>
        <td>1</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
<<<<<<< HEAD
        <td class="strong"><a href="#31844e57e4fce977f6021e6d678ac92591f91c39" class="src_link" title="app/helpers/events_helper.rb">app/helpers/events_helper.rb</a></td>
=======
        <td class="strong"><a href="#829b93b262c07eeeae30b730012a7d282895cf4a" class="src_link" title="app/helpers/groups_helper.rb">app/helpers/groups_helper.rb</a></td>
>>>>>>> master
        <td class="green strong">100.0 %</td>
        <td>2</td>
        <td>1</td>
        <td>1</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
<<<<<<< HEAD
        <td class="strong"><a href="#829b93b262c07eeeae30b730012a7d282895cf4a" class="src_link" title="app/helpers/groups_helper.rb">app/helpers/groups_helper.rb</a></td>
=======
        <td class="strong"><a href="#42538fcec53438db8a6588ca5b276b0991cb66d8" class="src_link" title="app/helpers/users_helper.rb">app/helpers/users_helper.rb</a></td>
>>>>>>> master
        <td class="green strong">100.0 %</td>
        <td>2</td>
        <td>1</td>
        <td>1</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
<<<<<<< HEAD
        <td class="strong"><a href="#42538fcec53438db8a6588ca5b276b0991cb66d8" class="src_link" title="app/helpers/users_helper.rb">app/helpers/users_helper.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>2</td>
        <td>1</td>
        <td>1</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#dd04a3dbb19ebeb4e89007e549758a9632a68ce8" class="src_link" title="app/models/event.rb">app/models/event.rb</a></td>
        <td class="red strong">55.56 %</td>
        <td>384</td>
        <td>189</td>
        <td>105</td>
        <td>84</td>
        <td>17.5</td>
=======
        <td class="strong"><a href="#dd04a3dbb19ebeb4e89007e549758a9632a68ce8" class="src_link" title="app/models/event.rb">app/models/event.rb</a></td>
        <td class="green strong">94.05 %</td>
        <td>346</td>
        <td>168</td>
        <td>158</td>
        <td>10</td>
        <td>111.2</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#982e12b59f4bd6e424f1ce4667edb54003e05c00" class="src_link" title="app/models/group.rb">app/models/group.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>127</td>
        <td>59</td>
        <td>59</td>
        <td>0</td>
        <td>36.3</td>
>>>>>>> master
      </tr>
      
      <tr>
        <td class="strong"><a href="#f1fba9c8e71d8d07e5b92b181191fe7faa7f0572" class="src_link" title="app/models/user.rb">app/models/user.rb</a></td>
<<<<<<< HEAD
        <td class="red strong">61.11 %</td>
        <td>225</td>
        <td>108</td>
        <td>66</td>
        <td>42</td>
        <td>23.9</td>
=======
        <td class="yellow strong">88.89 %</td>
        <td>225</td>
        <td>108</td>
        <td>96</td>
        <td>12</td>
        <td>117.4</td>
>>>>>>> master
      </tr>
      
      <tr>
        <td class="strong"><a href="#cc6c6b538ff992e778ba8bca760950b8fb1e87fc" class="src_link" title="config/application.rb">config/application.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>33</td>
        <td>9</td>
        <td>9</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#bb789ee7477c134792e8e1ad1517c4cc012ddea4" class="src_link" title="config/boot.rb">config/boot.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>4</td>
        <td>2</td>
        <td>2</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#6d51b1599b346a386756e3e336ca92b9d3c937a8" class="src_link" title="config/environment.rb">config/environment.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>5</td>
        <td>2</td>
        <td>2</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#d4a1a6fd6d6a26d59a669fb30140d71bd4f988a5" class="src_link" title="config/environments/test.rb">config/environments/test.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>36</td>
        <td>11</td>
        <td>11</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#369a557d96ee71aff7fa64d909f1c00aed926f38" class="src_link" title="config/initializers/backtrace_silencers.rb">config/initializers/backtrace_silencers.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>7</td>
        <td>0</td>
        <td>0</td>
        <td>0</td>
        <td>0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#03cd13f62300d1960ff51c6ed2edae2b1d2a1d4d" class="src_link" title="config/initializers/facebook.rb">config/initializers/facebook.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>5</td>
        <td>2</td>
        <td>2</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#2a80c9a3a2feef2782a1d505914c9a3937981858" class="src_link" title="config/initializers/filter_parameter_logging.rb">config/initializers/filter_parameter_logging.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>4</td>
        <td>1</td>
        <td>1</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#4e93607b242eb9b8e6c06c9c7131aa3aeb179d5f" class="src_link" title="config/initializers/global_constants.rb">config/initializers/global_constants.rb</a></td>
        <td class="green strong">100.0 %</td>
<<<<<<< HEAD
        <td>51</td>
        <td>26</td>
        <td>26</td>
=======
        <td>50</td>
        <td>25</td>
        <td>25</td>
>>>>>>> master
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#88635b51e8839fd1f1325658d978acac27850feb" class="src_link" title="config/initializers/inflections.rb">config/initializers/inflections.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>16</td>
        <td>0</td>
        <td>0</td>
        <td>0</td>
        <td>0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#4eb9fee4984bb02e61950be5aaed8bff02134bc4" class="src_link" title="config/initializers/mime_types.rb">config/initializers/mime_types.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>5</td>
        <td>0</td>
        <td>0</td>
        <td>0</td>
        <td>0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#412f1199097bc9185ac7e5ef5496ce65a817a5be" class="src_link" title="config/initializers/push_setup.rb">config/initializers/push_setup.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>10</td>
        <td>2</td>
        <td>2</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#a408052bb2ff5b00b0cdf1d9cbff0d1f132f0fa1" class="src_link" title="config/initializers/secret_token.rb">config/initializers/secret_token.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>12</td>
        <td>1</td>
        <td>1</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#4c34c26ea384f12aaf3e1eeb71f21d3af8b2e657" class="src_link" title="config/initializers/session_store.rb">config/initializers/session_store.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>3</td>
        <td>1</td>
        <td>1</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#3fe2494a5a3cafca22ea7227bf85206c2aa46016" class="src_link" title="config/initializers/wrap_parameters.rb">config/initializers/wrap_parameters.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>14</td>
        <td>2</td>
        <td>2</td>
        <td>0</td>
        <td>1.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#679814302cc4026285b8e05c03333830819e2824" class="src_link" title="config/routes.rb">config/routes.rb</a></td>
        <td class="green strong">100.0 %</td>
<<<<<<< HEAD
        <td>35</td>
        <td>31</td>
        <td>31</td>
=======
        <td>34</td>
        <td>30</td>
        <td>30</td>
>>>>>>> master
        <td>0</td>
        <td>1.0</td>
      </tr>
      
<<<<<<< HEAD
=======
      <tr>
        <td class="strong"><a href="#087435c4762a9d30b060a1102147666bdb948a10" class="src_link" title="spec/classes/notification_spec.rb">spec/classes/notification_spec.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>51</td>
        <td>32</td>
        <td>32</td>
        <td>0</td>
        <td>1.1</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#3aead1a14cd70516a9265a56103a31397f9043d1" class="src_link" title="spec/controllers/events_controller_spec.rb">spec/controllers/events_controller_spec.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>526</td>
        <td>372</td>
        <td>372</td>
        <td>0</td>
        <td>1.9</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#474b13d70b0f68357d4d042a2685ca400a9a79da" class="src_link" title="spec/controllers/groups_controller_spec.rb">spec/controllers/groups_controller_spec.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>488</td>
        <td>343</td>
        <td>343</td>
        <td>0</td>
        <td>2.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#875787c2ee5540cb68a15eb05b7c9c81aa32c834" class="src_link" title="spec/controllers/users_controller_spec.rb">spec/controllers/users_controller_spec.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>604</td>
        <td>411</td>
        <td>411</td>
        <td>0</td>
        <td>2.0</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#cbbbe93cb58e9314f44d6a1f700189bb024eaf48" class="src_link" title="spec/models/event_spec.rb">spec/models/event_spec.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>521</td>
        <td>385</td>
        <td>385</td>
        <td>0</td>
        <td>2.1</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#94d1cb6e381e702c98c7a36cd02a0e2823c8107c" class="src_link" title="spec/models/group_spec.rb">spec/models/group_spec.rb</a></td>
        <td class="green strong">100.0 %</td>
        <td>116</td>
        <td>77</td>
        <td>77</td>
        <td>0</td>
        <td>1.9</td>
      </tr>
      
      <tr>
        <td class="strong"><a href="#a870d1a9199bc2c98f24ed5b27c3cfdf1bdd367f" class="src_link" title="spec/models/user_spec.rb">spec/models/user_spec.rb</a></td>
        <td class="green strong">97.89 %</td>
        <td>309</td>
        <td>190</td>
        <td>186</td>
        <td>4</td>
        <td>1.2</td>
      </tr>
      
>>>>>>> master
    </tbody>
  </table>
</div>


        
      </div>
    
      <div id="footer">
        Generated by <a href="http://github.com/colszowka/simplecov">simplecov</a> v0.8.2 
        and simplecov-html v0.8.0<br/>
        using RSpec
      </div>
    
      <div class="source_files">
      
        <div class="source_table" id="1796ce62bd22d96054060965bf08a8266bd5bb21">
  <div class="header">
    <h3>app/classes/Condition.rb</h3>
<<<<<<< HEAD
    <h4><span class="red">36.84 %</span> covered</h4>
    <div>
      <b>19</b> relevant lines. 
      <span class="green"><b>7</b> lines covered</span> and
      <span class="red"><b>12</b> lines missed.</span>
=======
    <h4><span class="yellow">87.5 %</span> covered</h4>
    <div>
      <b>24</b> relevant lines. 
      <span class="green"><b>21</b> lines covered</span> and
      <span class="red"><b>3</b> lines missed.</span>
>>>>>>> master
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"># Class to store a Condition. Superclass for the specific types of </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># Conditions; shouldn&#39;t be initialized directly.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">class Condition</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">	</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby">	# Method to create a condition object from a hash that was created</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby">	# using condition.get_hash. Used to recreate Condition objects </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby">	# extracted from the database in hash format. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	# Returns nil if the hash is malformed. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="11">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.create_from_hash(hash)</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="12">
          
=======
        <li class="covered" data-hits="94" data-linenumber="12">
          <span class="hits">94</span>
>>>>>>> master
          
          <code class="ruby">		return nil if not (hash.has_key?(:cond_type) &amp;&amp; hash.has_key?(:cond_met))</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="13">
          
=======
        <li class="covered" data-hits="94" data-linenumber="13">
          <span class="hits">94</span>
>>>>>>> master
          
          <code class="ruby">		case hash[:cond_type]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby">		when COND_NONE</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="15">
          
          
=======
        <li class="covered" data-hits="1" data-linenumber="15">
          <span class="hits">1</span>
          
>>>>>>> master
          <code class="ruby">			return NoCondition.new</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby">		when COND_NUM_ATTENDING</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="17">
          
=======
        <li class="covered" data-hits="34" data-linenumber="17">
          <span class="hits">34</span>
>>>>>>> master
          
          <code class="ruby">			return nil if not (hash.has_key?(:num_users))</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="18">
          
          
=======
        <li class="covered" data-hits="34" data-linenumber="18">
          <span class="hits">34</span>
          
>>>>>>> master
          <code class="ruby">			return NumberCondition.new(hash[:num_users])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">		when COND_USER_ATTENDING_ANY, COND_USER_ATTENDING_ALL</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="20">
          
          
          <code class="ruby">			return nil if not (hash.has_key?(:id_list))</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="21">
=======
        <li class="covered" data-hits="59" data-linenumber="20">
          <span class="hits">59</span>
          
          <code class="ruby">			return nil if not (hash.has_key?(:user_list) &amp;&amp; hash[:user_list].has_key?(:user_count))</code>
        </li>
      
        <li class="covered" data-hits="59" data-linenumber="21">
          <span class="hits">59</span>
>>>>>>> master
          
          <code class="ruby">			cond_user_list = []</code>
        </li>
      
        <li class="covered" data-hits="59" data-linenumber="22">
          <span class="hits">59</span>
          
<<<<<<< HEAD
          <code class="ruby">			return UserCondition.new(hash[:cond_type], hash[:id_list])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
=======
          <code class="ruby">			for user_num in 1..hash[:user_list][:user_count]</code>
        </li>
      
        <li class="covered" data-hits="99" data-linenumber="23">
          <span class="hits">99</span>
          
          <code class="ruby">				user = User.find_by(email: hash[:user_list][user_num][:email])</code>
        </li>
      
        <li class="covered" data-hits="99" data-linenumber="24">
          <span class="hits">99</span>
          
          <code class="ruby">				return nil if user == nil</code>
        </li>
      
        <li class="covered" data-hits="99" data-linenumber="25">
          <span class="hits">99</span>
          
          <code class="ruby">				cond_user_list |= [ user.id ]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
>>>>>>> master
          
          
          <code class="ruby">			end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="25">
=======
        <li class="covered" data-hits="59" data-linenumber="27">
          <span class="hits">59</span>
>>>>>>> master
          
          <code class="ruby">			return UserCondition.new(hash[:cond_type], cond_user_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
<<<<<<< HEAD
          <code class="ruby">	# Dummy method. Shouldn&#39;t try to get the hash of a Condition.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="26">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="27">
          
          
          <code class="ruby">		{}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
=======
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="30">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby">	# Return the type of Condition.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="31">
          <span class="hits">1</span>
          
          <code class="ruby">	def type</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="32">
          
          
          <code class="ruby">		@cond_type</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
=======
        <li class="never" data-hits="" data-linenumber="31">
          
          
          <code class="ruby">	# Dummy method. Shouldn&#39;t try to get the hash of a Condition.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="32">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="33">
          
          
          <code class="ruby">		{}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="34">
=======
        <li class="never" data-hits="" data-linenumber="35">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="35">
          
          
          <code class="ruby">	# Mark this condition as met.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="36">
          <span class="hits">1</span>
          
          <code class="ruby">	def met</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="37">
          
          
          <code class="ruby">		@cond_met = COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="38">
=======
        <li class="never" data-hits="" data-linenumber="36">
          
          
          <code class="ruby">	# Return the type of Condition.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="37">
          <span class="hits">1</span>
          
          <code class="ruby">	def type</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="38">
          
          
          <code class="ruby">		@cond_type</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="39">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="39">
=======
        <li class="never" data-hits="" data-linenumber="40">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="40">
=======
        <li class="never" data-hits="" data-linenumber="41">
          
          
          <code class="ruby">	# Mark this condition as met.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="42">
          <span class="hits">1</span>
          
          <code class="ruby">	def met</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="43">
          <span class="hits">30</span>
          
          <code class="ruby">		@cond_met = COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="44">
>>>>>>> master
          
          
          <code class="ruby">	# Mark this condition as not met. </code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="41">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="45">
          
>>>>>>> master
          
          <code class="ruby">	def unmet</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="42">
          
          
          <code class="ruby">		@cond_met = COND_NOT_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="43">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="44">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="45">
          
          
          <code class="ruby">	# Returns true if this condition is met. False otherwise. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="46">
          <span class="hits">1</span>
          
          <code class="ruby">	def met?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="47">
          
          
          <code class="ruby">		@cond_met == COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="48">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="49">
=======
        <li class="never" data-hits="" data-linenumber="46">
          
          
          <code class="ruby">	# Mark this condition as not met. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="47">
          <span class="hits">1</span>
          
          <code class="ruby">	def unmet</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="48">
          
          
          <code class="ruby">		@cond_met = COND_NOT_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="49">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="50">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="51">
          
          
          <code class="ruby">	# Returns true if this condition is met. False otherwise. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="52">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">	def met?</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="53">
          <span class="hits">6</span>
          
<<<<<<< HEAD
          <code class="ruby">end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="50">
=======
          <code class="ruby">		@cond_met == COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="54">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="55">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="51">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="56">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="57">
          
          
          <code class="ruby"></code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="ffc7f6d407a9d7b4013091ded5f3fbe922a41780">
  <div class="header">
    <h3>app/classes/ConditionNotification.rb</h3>
<<<<<<< HEAD
    <h4><span class="red">46.15 %</span> covered</h4>
    <div>
      <b>13</b> relevant lines. 
      <span class="green"><b>6</b> lines covered</span> and
      <span class="red"><b>7</b> lines missed.</span>
=======
    <h4><span class="green">92.31 %</span> covered</h4>
    <div>
      <b>13</b> relevant lines. 
      <span class="green"><b>12</b> lines covered</span> and
      <span class="red"><b>1</b> lines missed.</span>
>>>>>>> master
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;Notification&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">class ConditionNotification &lt; Notification</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">	# Conditional notification type</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">	NOTIF_COND_MET = 5</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="9">
          <span class="hits">1</span>
          
          <code class="ruby">	def initialize(notif_type, event, condition)	</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="10">
          
          
          <code class="ruby">		@type = notif_type</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="11">
          
          
          <code class="ruby">		@event = event</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="12">
          
          
          <code class="ruby">		@time = DateTime.current</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="13">
          
          
=======
        <li class="covered" data-hits="30" data-linenumber="10">
          <span class="hits">30</span>
          
          <code class="ruby">		@type = notif_type</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="11">
          <span class="hits">30</span>
          
          <code class="ruby">		@event = event</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="12">
          <span class="hits">30</span>
          
          <code class="ruby">		@time = DateTime.current</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="13">
          <span class="hits">30</span>
          
>>>>>>> master
          <code class="ruby">		@condition = condition</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="16">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="17">
          
          
=======
        <li class="covered" data-hits="30" data-linenumber="17">
          <span class="hits">30</span>
          
>>>>>>> master
          <code class="ruby">		admin = User.find(@event.admin)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">		return { notif_type: @type, notif_time: @time.to_i, event: @event.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">			name: @event.name, creator: admin.get_hash,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">			time: @event.time, location: @event.location , </code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="21">
          
          
=======
        <li class="covered" data-hits="30" data-linenumber="21">
          <span class="hits">30</span>
          
>>>>>>> master
          <code class="ruby">			condition: @condition.get_hash }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="24">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_push_message</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="25">
          
          
          <code class="ruby">		&quot;Conditions met for #{@event.name}. You are now attending!&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="55f5403bd2dcc103122cbf5767cad254ad11afd0">
  <div class="header">
    <h3>app/classes/EventNotification.rb</h3>
<<<<<<< HEAD
    <h4><span class="red">73.68 %</span> covered</h4>
    <div>
      <b>19</b> relevant lines. 
      <span class="green"><b>14</b> lines covered</span> and
      <span class="red"><b>5</b> lines missed.</span>
=======
    <h4><span class="red">76.47 %</span> covered</h4>
    <div>
      <b>17</b> relevant lines. 
      <span class="green"><b>13</b> lines covered</span> and
      <span class="red"><b>4</b> lines missed.</span>
>>>>>>> master
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;Notification&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">class EventNotification &lt; Notification</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">	# Event notification types</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">	NOTIF_NEW_EVENT = 1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="8">
          <span class="hits">1</span>
          
          <code class="ruby">	NOTIF_DELETE_EVENT = 2</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="9">
          <span class="hits">1</span>
<<<<<<< HEAD
          
          <code class="ruby">	NOTIF_EDIT_EVENT = 3</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="10">
          <span class="hits">1</span>
          
          <code class="ruby">	NOTIF_EVENT_STARTING = 6</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
=======
          
          <code class="ruby">	NOTIF_EDIT_EVENT = 3</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="12">
=======
        <li class="covered" data-hits="1" data-linenumber="11">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	def initialize(notif_type, event)	</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="30" data-linenumber="13">
          <span class="hits">30</span>
=======
        <li class="covered" data-hits="99" data-linenumber="12">
          <span class="hits">99</span>
>>>>>>> master
          
          <code class="ruby">		@type = notif_type</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="30" data-linenumber="14">
          <span class="hits">30</span>
=======
        <li class="covered" data-hits="99" data-linenumber="13">
          <span class="hits">99</span>
>>>>>>> master
          
          <code class="ruby">		@event = event</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="30" data-linenumber="15">
          <span class="hits">30</span>
=======
        <li class="covered" data-hits="99" data-linenumber="14">
          <span class="hits">99</span>
>>>>>>> master
          
          <code class="ruby">		@time = DateTime.current</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="16">
=======
        <li class="never" data-hits="" data-linenumber="15">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="17">
=======
        <li class="never" data-hits="" data-linenumber="16">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="18">
=======
        <li class="covered" data-hits="1" data-linenumber="17">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="30" data-linenumber="19">
          <span class="hits">30</span>
=======
        <li class="covered" data-hits="89" data-linenumber="18">
          <span class="hits">89</span>
>>>>>>> master
          
          <code class="ruby">		admin = User.find(@event.admin)</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">		return { notif_type: @type, notif_time: @time.to_i, event: @event.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="21">
          
          
          <code class="ruby">			name: @event.name, creator: { name: admin.name, email: admin.email },</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="22">
          <span class="hits">30</span>
          
          <code class="ruby">			time: @event.time, location: @event.location }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="25">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_push_message</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="26">
          
          
          <code class="ruby">		case @type</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby">		when NOTIF_NEW_EVENT</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="28">
          
          
          <code class="ruby">			return &quot;#{User.find(@event.admin).name} invited you to #{@event.name}&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby">		when NOTIF_DELETE_EVENT</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="30">
          
          
          <code class="ruby">			return &quot;#{@event.name} has been cancelled.&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="31">
          
          
          <code class="ruby">		when NOTIF_EDIT_EVENT</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="32">
          
          
          <code class="ruby">			return &quot;#{@event.name} has been updated!&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby">		when NOTIF_EVENT_STARTING</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="34">
=======
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">		return { notif_type: @type, notif_time: @time.to_i, event: @event.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">			name: @event.name, creator: { name: admin.name, email: admin.email },</code>
        </li>
      
        <li class="covered" data-hits="89" data-linenumber="21">
          <span class="hits">89</span>
          
          <code class="ruby">			time: @event.time, location: @event.location }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="24">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_push_message</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="25">
          
          
          <code class="ruby">		case @type</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby">		when NOTIF_NEW_EVENT</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="27">
          
          
          <code class="ruby">			return &quot;#{User.find(@event.admin).name} invited you to #{@event.name}&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby">		when NOTIF_DELETE_EVENT</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="29">
          
          
          <code class="ruby">			return &quot;#{@event.name} has been cancelled.&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby">		when NOTIF_EDIT_EVENT</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="31">
          
          
          <code class="ruby">			return &quot;#{@event.name} has been updated!&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="32">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="35">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="8036595fde447137b8debcc222811cddff255e43">
  <div class="header">
    <h3>app/classes/FriendNotification.rb</h3>
    <h4><span class="yellow">90.0 %</span> covered</h4>
    <div>
      <b>10</b> relevant lines. 
      <span class="green"><b>9</b> lines covered</span> and
      <span class="red"><b>1</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
>>>>>>> master
          
          
          <code class="ruby">			return &quot;#{@event.name} is starting in 5 minutes!&quot;</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="35">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="36">
=======
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;Notification&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="37">
          
=======
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">class FriendNotification &lt; Notification</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="38">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="8036595fde447137b8debcc222811cddff255e43">
  <div class="header">
    <h3>app/classes/FriendNotification.rb</h3>
    <h4><span class="red">60.0 %</span> covered</h4>
    <div>
      <b>10</b> relevant lines. 
      <span class="green"><b>6</b> lines covered</span> and
      <span class="red"><b>4</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;Notification&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
=======
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">	# Friend notification type</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">	NOTIF_FRIEND_ADD = 4</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">class FriendNotification &lt; Notification</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">	# Friend notification type</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">	NOTIF_FRIEND_ADD = 4</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="9">
          <span class="hits">1</span>
          
          <code class="ruby">	def initialize(friend_user)	</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="10">
          
          
          <code class="ruby">		@friend = friend_user</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="11">
          
          
          <code class="ruby">		@time = DateTime.current</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="12">
=======
        <li class="covered" data-hits="1" data-linenumber="9">
          <span class="hits">1</span>
          
          <code class="ruby">	def initialize(friend_user)	</code>
        </li>
      
        <li class="covered" data-hits="20" data-linenumber="10">
          <span class="hits">20</span>
          
          <code class="ruby">		@friend = friend_user</code>
        </li>
      
        <li class="covered" data-hits="20" data-linenumber="11">
          <span class="hits">20</span>
          
          <code class="ruby">		@time = DateTime.current</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="12">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="14">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby">		return { notif_type: NOTIF_FRIEND_ADD, notif_time: @time.to_i,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby">			friend_id: @friend.id, friend_name: @friend.name, </code>
        </li>
      
        <li class="covered" data-hits="20" data-linenumber="17">
          <span class="hits">20</span>
          
          <code class="ruby">			friend_email: @friend.email }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="13">
=======
        <li class="never" data-hits="" data-linenumber="19">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="14">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby">		return { notif_type: NOTIF_FRIEND_ADD, notif_time: @time.to_i,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby">			friend_id: @friend.id, friend_name: @friend.name, </code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="17">
=======
        <li class="covered" data-hits="1" data-linenumber="20">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_push_message</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="21">
          
          
          <code class="ruby">		return &quot;#{@friend.name} just added you as a friend!&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
>>>>>>> master
          
          
          <code class="ruby">			friend_email: @friend.email }</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="20">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_push_message</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="21">
          
          
          <code class="ruby">		return &quot;#{@friend.name} just added you as a friend!&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
=======
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="1891258a3af6f9e2f9931e6f132f5bef9093e6fc">
  <div class="header">
    <h3>app/classes/NoCondition.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>10</b> relevant lines. 
      <span class="green"><b>10</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Class for storing empty conditionals.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;Condition&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">class NoCondition &lt; Condition</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">	def initialize</code>
        </li>
      
        <li class="covered" data-hits="226" data-linenumber="7">
          <span class="hits">226</span>
          
          <code class="ruby">		@cond_met = COND_NOT_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
>>>>>>> master
          
          
          <code class="ruby">end</code>
        </li>
      
<<<<<<< HEAD
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="1891258a3af6f9e2f9931e6f132f5bef9093e6fc">
  <div class="header">
    <h3>app/classes/NoCondition.rb</h3>
    <h4><span class="red">80.0 %</span> covered</h4>
    <div>
      <b>10</b> relevant lines. 
      <span class="green"><b>8</b> lines covered</span> and
      <span class="red"><b>2</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
=======
        <li class="never" data-hits="" data-linenumber="9">
>>>>>>> master
          
          
          <code class="ruby"># Class for storing empty conditionals.</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;Condition&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
=======
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	# Overload Condition#met since a NoCondition can never be met.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="11">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">	def met</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
<<<<<<< HEAD
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">class NoCondition &lt; Condition</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
=======
          <code class="ruby">		raise &quot;Attempted to mark a NoCondition as met.&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">	def initialize</code>
        </li>
      
        <li class="covered" data-hits="63" data-linenumber="7">
          <span class="hits">63</span>
          
          <code class="ruby">		@cond_met = COND_NOT_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
=======
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby">	# Returns a hash representing this Condition.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="16">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="covered" data-hits="223" data-linenumber="17">
          <span class="hits">223</span>
          
          <code class="ruby">		{ cond_type: COND_NONE, cond_met: COND_NOT_MET }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	# Overload Condition#met since a NoCondition can never be met.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="11">
          <span class="hits">1</span>
          
          <code class="ruby">	def met</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="12">
          
          
          <code class="ruby">		raise &quot;Attempted to mark a NoCondition as met.&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
=======
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">	# Overload Condition#type since it will always be the same type.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">	def type</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="22">
          <span class="hits">1</span>
          
          <code class="ruby">		COND_NONE</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="14">
=======
        <li class="never" data-hits="" data-linenumber="24">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby">	# Returns a hash representing this Condition.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="16">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="1cdca41fa4970a210677e6be30afa63f2e00bfb7">
  <div class="header">
    <h3>app/classes/Notification.rb</h3>
    <h4><span class="red">41.67 %</span> covered</h4>
    <div>
      <b>12</b> relevant lines. 
      <span class="green"><b>5</b> lines covered</span> and
      <span class="red"><b>7</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
>>>>>>> master
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="covered" data-hits="63" data-linenumber="17">
          <span class="hits">63</span>
          
<<<<<<< HEAD
          <code class="ruby">		{ cond_type: COND_NONE, cond_met: COND_NOT_MET }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
=======
          <code class="ruby"># Superclass for EventNotification and FriendNotification. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"># Shouldn&#39;t be initialized.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">	# Overload Condition#type since it will always be the same type.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">	def type</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="22">
          
          
          <code class="ruby">		COND_NONE</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="1cdca41fa4970a210677e6be30afa63f2e00bfb7">
  <div class="header">
    <h3>app/classes/Notification.rb</h3>
    <h4><span class="red">38.46 %</span> covered</h4>
    <div>
      <b>13</b> relevant lines. 
      <span class="green"><b>5</b> lines covered</span> and
      <span class="red"><b>8</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Superclass for EventNotification and FriendNotification. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"># Shouldn&#39;t be initialized.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
=======
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">class Notification</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">	# Sends itself as a push notification to all of the user&#39;s</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby">	# associated device_tokens. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="8">
          <span class="hits">1</span>
          
          <code class="ruby">	def send_push(user)</code>
        </li>
      
        <li class="covered" data-hits="130" data-linenumber="9">
          <span class="hits">130</span>
          
          <code class="ruby">		return if Rails.env.test?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="10">
          
          
          <code class="ruby">		device_tokens = user.device_tokens</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="11">
          
          
          <code class="ruby">		notification_list = []</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="12">
          
          
          <code class="ruby">		device_tokens.each do |token|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="13">
          
          
          <code class="ruby">			notification_list &lt;&lt;= APNS::Notification.new(token, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby">				:alert =&gt; get_push_message, :badge =&gt; 1, :sound =&gt; &#39;default&#39;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="16">
>>>>>>> master
          
          
          <code class="ruby">		APNS.send_notifications(notification_list)</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">class Notification</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
=======
        <li class="never" data-hits="" data-linenumber="17">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">	# Sends itself as a push notification to all of the user&#39;s</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby">	# associated device_tokens. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="8">
          <span class="hits">1</span>
          
          <code class="ruby">	def send_push(user)</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="9">
          <span class="hits">30</span>
          
          <code class="ruby">		return if Rails.env.test?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="10">
          
          
          <code class="ruby">		device_tokens = user.device_tokens</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="11">
          
          
          <code class="ruby">		notification_list = []</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="12">
=======
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">	# Dummy method. Notifications should never be initialized or </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">	# their hashes attempted to be gotten.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="22">
          
          
          <code class="ruby">		{}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
>>>>>>> master
          
          
          <code class="ruby">		device_tokens.each do |token|</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="13">
          
          
          <code class="ruby">			notification_list &lt;&lt;= APNS::Notification.new(token, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby">				:alert =&gt; get_push_message, :badge =&gt; 1, :sound =&gt; &#39;default&#39;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="16">
          
          
          <code class="ruby">		APNS.send_notifications(notification_list) if not notification_list.empty?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="17">
          
          
          <code class="ruby">		puts &quot;Sending push notif to #{user.email} at #{device_tokens}. Notification message: \&quot;#{get_push_message}\&quot;&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
=======
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby">	# Dummy method. Notifications should never be initialized or </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby">	# their messages attempted to be gotten.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="27">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_push_message</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="28">
          
          
          <code class="ruby">		&quot;&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="19">
=======
        <li class="never" data-hits="" data-linenumber="30">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">	# Dummy method. Notifications should never be initialized or </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="21">
          
          
          <code class="ruby">	# their hashes attempted to be gotten.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="22">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="23">
          
          
          <code class="ruby">		{}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
=======
        <li class="never" data-hits="" data-linenumber="31">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="2299fb8c6fd8e5d47c0c47a0a9084ead8acfc2fe">
  <div class="header">
    <h3>app/classes/NumberCondition.rb</h3>
    <h4><span class="yellow">90.0 %</span> covered</h4>
    <div>
      <b>10</b> relevant lines. 
      <span class="green"><b>9</b> lines covered</span> and
      <span class="red"><b>1</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Class for storing number-type conditionals, i.e. COND_NUM_USERS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">class NumberCondition &lt; Condition</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby">	# Dummy method. Notifications should never be initialized or </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby">	# their messages attempted to be gotten.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="28">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">	def initialize(num_users) </code>
        </li>
      
        <li class="covered" data-hits="52" data-linenumber="6">
          <span class="hits">52</span>
          
          <code class="ruby">		@num_users = num_users</code>
        </li>
      
        <li class="covered" data-hits="52" data-linenumber="7">
          <span class="hits">52</span>
          
          <code class="ruby">		@cond_met = COND_NOT_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
>>>>>>> master
          
          <code class="ruby">	def get_push_message</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="29">
=======
        <li class="never" data-hits="" data-linenumber="9">
>>>>>>> master
          
          
          <code class="ruby">		&quot;&quot;</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="31">
          
=======
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	# Returns a hash representing this Condition.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="11">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">	def get_hash</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="32">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="aa206fc6eae7adc73c683826ee680a21c162f8c2">
  <div class="header">
    <h3>app/classes/NotifyHandler.rb</h3>
    <h4><span class="red">42.86 %</span> covered</h4>
    <div>
      <b>14</b> relevant lines. 
      <span class="green"><b>6</b> lines covered</span> and
      <span class="red"><b>8</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">class NotifyHandler</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">	@job_mapping = {}</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">	@task_scheduler = Rufus::Scheduler.new</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.task_scheduler</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="7">
          
          
          <code class="ruby">		@task_scheduler</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	# Callback for the task scheduler. Takes in a job, which it uses </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby">	# to find the corresponding event, which it then notifies. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.call(job)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="13">
          
          
          <code class="ruby">		begin </code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="14">
          
          
          <code class="ruby">			event = Event.find(@job_mapping[job.id])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
=======
        <li class="never" data-hits="" data-linenumber="12">
          
          
          <code class="ruby">		return { cond_type: COND_NUM_ATTENDING, </code>
        </li>
      
        <li class="covered" data-hits="29" data-linenumber="13">
          <span class="hits">29</span>
          
          <code class="ruby">			cond_met: @cond_met, num_users: @num_users }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby">	# Returns number of users threshold for condition</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="17">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_num</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="18">
          
          
          <code class="ruby">		return @num_users</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="21">
          
          
          <code class="ruby">	# Overload Condition#type since it will always be the same type.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="22">
          <span class="hits">1</span>
          
          <code class="ruby">	def type</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="23">
          <span class="hits">1</span>
          
          <code class="ruby">		COND_NUM_ATTENDING</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="16">
          
          
          <code class="ruby">			puts &quot;ERROR: Attempt to notify #{@job_mapping[job.id]} failed.&quot;</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="17">
          
          
          <code class="ruby">			return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="19">
          
          
          <code class="ruby">		puts &quot;Notifying #{event.id} (#{event.name}) of starting soon.&quot;</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="20">
          
          
          <code class="ruby">		event.notify_starting</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="21">
=======
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby">end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby">	# Adds a mapping from job_id to event_id, such that when job_id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby">	# is called, NotifyHandler will know to notify event_id.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="25">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.add_job_mapping(job_id, event_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="26">
          
          
          <code class="ruby">		@job_mapping[job_id] = event_id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="feaa6b4660e08f2f1077026ff21c446d2a49c1c6">
  <div class="header">
    <h3>app/controllers/application_controller.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
=======
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="590513bc154a8ae8599584df083f95f1eede256f">
  <div class="header">
    <h3>app/classes/UserCondition.rb</h3>
    <h4><span class="yellow">88.89 %</span> covered</h4>
    <div>
      <b>18</b> relevant lines. 
      <span class="green"><b>16</b> lines covered</span> and
      <span class="red"><b>2</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Class for storing User-type conditionals.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">class UserCondition &lt; Condition</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">	def initialize(cond_type, user_list) </code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="6">
          <span class="hits">79</span>
          
          <code class="ruby">		@cond_type = cond_type</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="7">
          <span class="hits">79</span>
          
          <code class="ruby">		@user_ids = user_list</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="8">
          <span class="hits">79</span>
          
          <code class="ruby">		@cond_met = COND_NOT_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby">	# Returns a hash representing this Condition. When computing the user list,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="12">
          
          
          <code class="ruby">	# ignores invalid user IDs.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="13">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="covered" data-hits="37" data-linenumber="14">
          <span class="hits">37</span>
          
          <code class="ruby">		user_list = {}</code>
        </li>
      
        <li class="covered" data-hits="37" data-linenumber="15">
          <span class="hits">37</span>
          
          <code class="ruby">		user_count = 0</code>
        </li>
      
        <li class="covered" data-hits="37" data-linenumber="16">
          <span class="hits">37</span>
          
          <code class="ruby">		@user_ids.each do |user_id|</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="17">
          <span class="hits">60</span>
          
          <code class="ruby">			begin</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="18">
          <span class="hits">60</span>
          
          <code class="ruby">				user = User.find(user_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">			rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="20">
          
          
          <code class="ruby">				next</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="21">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="22">
          <span class="hits">60</span>
          
          <code class="ruby">			user_count += 1</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="23">
          <span class="hits">60</span>
          
          <code class="ruby">			user_list[user_count] = { name: user.name, email: user.email }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="37" data-linenumber="25">
          <span class="hits">37</span>
          
          <code class="ruby">		user_list[:user_count] = user_count</code>
        </li>
      
        <li class="covered" data-hits="37" data-linenumber="26">
          <span class="hits">37</span>
          
          <code class="ruby">		return { cond_type: @cond_type, cond_met: @cond_met, user_list: user_list, id_list: @user_ids }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby">	# Return a list of users for condition literal</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="30">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_user_list</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="31">
          
          
          <code class="ruby">		return @user_id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="32">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="feaa6b4660e08f2f1077026ff21c446d2a49c1c6">
  <div class="header">
    <h3>app/controllers/application_controller.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
>>>>>>> master
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">class ApplicationController &lt; ActionController::Base</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby">  # Prevent CSRF attacks by raising an exception.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby">  # For APIs, you may want to use :null_session instead.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby">  # protect_from_forgery with: :exception</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="5cd1019bd35389a46649cd52011e6a39b1ce3d11">
  <div class="header">
    <h3>app/controllers/events_controller.rb</h3>
<<<<<<< HEAD
    <h4><span class="red">27.63 %</span> covered</h4>
    <div>
      <b>152</b> relevant lines. 
      <span class="green"><b>42</b> lines covered</span> and
      <span class="red"><b>110</b> lines missed.</span>
=======
    <h4><span class="red">78.1 %</span> covered</h4>
    <div>
      <b>137</b> relevant lines. 
      <span class="green"><b>107</b> lines covered</span> and
      <span class="red"><b>30</b> lines missed.</span>
>>>>>>> master
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;user&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">class EventsController &lt; ApplicationController</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby">	# POST /event/create_event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">	# Creates a new event and stores it in the db</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby">	# * On success, stores the event in the database</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby">	# * On success, adds the event to each invited user and notifies them</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby">	# * On success, returns JSON { err_code: SUCCESS, :event}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	# * On failure, returns JSON { :err_code }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="11">
          <span class="hits">1</span>
          
          <code class="ruby">	def create_event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="12">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="13">
          <span class="hits">10</span>
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="14">
          <span class="hits">9</span>
          
          <code class="ruby">		creator = current_user</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="16">
          <span class="hits">9</span>
          
          <code class="ruby">		if not params[:user_list].respond_to?(&#39;split&#39;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="17">
          <span class="hits">1</span>
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="18">
          <span class="hits">1</span>
          
          <code class="ruby">			return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="8" data-linenumber="21">
          <span class="hits">8</span>
          
          <code class="ruby">		user_list = params[:user_list].split(&quot;,&quot;).map do |email|</code>
        </li>
      
        <li class="covered" data-hits="12" data-linenumber="22">
          <span class="hits">12</span>
          
          <code class="ruby">			user = User.find_by(email: email.strip)</code>
        </li>
      
        <li class="covered" data-hits="12" data-linenumber="23">
          <span class="hits">12</span>
          
          <code class="ruby">			if user == nil</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="24">
          <span class="hits">2</span>
          
          <code class="ruby">				respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="25">
          <span class="hits">2</span>
          
          <code class="ruby">				return </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="27">
          <span class="hits">10</span>
          
          <code class="ruby">			user.id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="30">
          <span class="hits">6</span>
          
          <code class="ruby">		rval = Event.add_event(params[:title], creator.id, params[:time].to_i,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="31">
          
          
          <code class="ruby">			user_list, params[:description], params[:location])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="32">
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="3" data-linenumber="33">
          <span class="hits">3</span>
=======
        <li class="covered" data-hits="6" data-linenumber="33">
          <span class="hits">6</span>
>>>>>>> master
          
          <code class="ruby">		if rval &lt; 0</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="34">
          <span class="hits">3</span>
          
          <code class="ruby">  		respond(rval)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="35">
          
          
          <code class="ruby">  	else</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="36">
          
          
=======
        <li class="covered" data-hits="3" data-linenumber="36">
          <span class="hits">3</span>
          
>>>>>>> master
          <code class="ruby">  		respond(SUCCESS, { event: rval } )</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="37">
          
          
          <code class="ruby">  	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="38">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="39">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="40">
          
          
          <code class="ruby">	# POST /event/invite_users</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="41">
          
          
          <code class="ruby">	# Invites users to the event: adds them to the event&#39;s party_list,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="42">
          
          
          <code class="ruby">	# adds the event to their event_list, and notifies them.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="43">
          
          
          <code class="ruby">	# You must be signed in, and you must be the admin of the event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="44">
          
          
          <code class="ruby">	# for this call to succeed. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="45">
          
          
          <code class="ruby">	# Duplicate users (users already in the event) will be ignored.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="46">
          <span class="hits">1</span>
          
          <code class="ruby">	def invite_users</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="47">
          
=======
        <li class="covered" data-hits="5" data-linenumber="47">
          <span class="hits">5</span>
>>>>>>> master
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="48">
          
=======
        <li class="covered" data-hits="5" data-linenumber="48">
          <span class="hits">5</span>
>>>>>>> master
          
          <code class="ruby">		return if not get_event</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="49">
          
=======
        <li class="covered" data-hits="4" data-linenumber="49">
          <span class="hits">4</span>
>>>>>>> master
          
          <code class="ruby">		return if not user_admin</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="50">
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="51">
          
=======
        <li class="covered" data-hits="3" data-linenumber="51">
          <span class="hits">3</span>
>>>>>>> master
          
          <code class="ruby">		user_list = params[:user_list].split(&#39;,&#39;).map do |email|</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="52">
          
=======
        <li class="covered" data-hits="5" data-linenumber="52">
          <span class="hits">5</span>
>>>>>>> master
          
          <code class="ruby">			user = User.find_by(email: email)</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="53">
          
=======
        <li class="covered" data-hits="5" data-linenumber="53">
          <span class="hits">5</span>
>>>>>>> master
          
          <code class="ruby">			if not user</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="54">
          
=======
        <li class="covered" data-hits="1" data-linenumber="54">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">				respond(ERR_INVALID_FIELD)</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="55">
          
=======
        <li class="covered" data-hits="1" data-linenumber="55">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">				return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="56">
          
          
          <code class="ruby">			end</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="57">
          
=======
        <li class="covered" data-hits="4" data-linenumber="57">
          <span class="hits">4</span>
>>>>>>> master
          
          <code class="ruby">			user.id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="58">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="59">
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="60">
          
          
          <code class="ruby">		curr_party_list = @event.party_list</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="61">
=======
        <li class="covered" data-hits="2" data-linenumber="60">
          <span class="hits">2</span>
          
          <code class="ruby">		curr_party_list = @event.party_list</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="61">
          <span class="hits">6</span>
          
          <code class="ruby">		user_list.delete_if { |user_id| curr_party_list.has_key?(user_id) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="62">
>>>>>>> master
          
          
          <code class="ruby">		user_list.delete_if { |user_id| curr_party_list.has_key?(user_id) }</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="62">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="63">
=======
        <li class="covered" data-hits="2" data-linenumber="63">
          <span class="hits">2</span>
          
          <code class="ruby">		@event.add_user_list(user_list)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="64">
          <span class="hits">2</span>
          
          <code class="ruby">		@event.add_to_user_event_lists(user_list)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="65">
          <span class="hits">2</span>
          
          <code class="ruby">		@event.notify( EventNotification.new(NOTIF_NEW_EVENT, @event), user_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="66">
>>>>>>> master
          
          
          <code class="ruby">		@event.add_user_list(user_list)</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="64">
=======
        <li class="covered" data-hits="2" data-linenumber="67">
          <span class="hits">2</span>
>>>>>>> master
          
          
          <code class="ruby">		@event.add_to_user_event_lists(user_list)</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="65">
=======
        <li class="never" data-hits="" data-linenumber="68">
>>>>>>> master
          
          
          <code class="ruby">		@event.notify( EventNotification.new(NOTIF_NEW_EVENT, @event), user_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="69">
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="67">
          
          
          <code class="ruby">		respond(SUCCESS)</code>
=======
        <li class="never" data-hits="" data-linenumber="70">
          
          
          <code class="ruby">  # POST /event/update_user_status</code>
>>>>>>> master
        </li>
      
        <li class="never" data-hits="" data-linenumber="71">
          
          
<<<<<<< HEAD
          <code class="ruby">	end</code>
=======
          <code class="ruby">  # Updates the currently logged in user&#39;s status within this event.</code>
>>>>>>> master
        </li>
      
        <li class="never" data-hits="" data-linenumber="72">
          
          
<<<<<<< HEAD
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="70">
          
          
          <code class="ruby">	# POST /event/invite_group</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="71">
          
          
          <code class="ruby">	# Invites all of the members of the group to the event: </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="72">
          
          
          <code class="ruby">	# adds them to the event&#39;s party_list,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="73">
          
          
          <code class="ruby">	# adds the event to their event_list, and notifies them.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="74">
          
          
          <code class="ruby">	# You must be signed in, and you must be the admin of the event</code>
=======
          <code class="ruby">  # Does nothing when attempting to change status within an </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="73">
          
          
          <code class="ruby">  # event that the user is not a member of.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="74">
          <span class="hits">1</span>
          
          <code class="ruby">  def update_user_status</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="75">
          <span class="hits">4</span>
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="76">
          <span class="hits">3</span>
          
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="77">
          
          
          <code class="ruby">		</code>
>>>>>>> master
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="78">
          <span class="hits">2</span>
          
<<<<<<< HEAD
          <code class="ruby">	# for this call to succeed. </code>
=======
          <code class="ruby">		new_status = params[:status]</code>
>>>>>>> master
        </li>
      
        <li class="never" data-hits="" data-linenumber="79">
          
          
<<<<<<< HEAD
          <code class="ruby">	# Duplicate users (users already in the event) will be ignored.</code>
=======
          <code class="ruby">		if not [STATUS_NO_RESPONSE, STATUS_NOT_ATTENDING,</code>
>>>>>>> master
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="80">
          <span class="hits">2</span>
          
<<<<<<< HEAD
          <code class="ruby">	# Returns ERR_INVALID_FIELD if not a valid group or event.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="78">
          <span class="hits">1</span>
          
          <code class="ruby">	def invite_group</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="79">
          
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="80">
          
          
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="81">
          
          
          <code class="ruby">		return if not user_admin</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="82">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="83">
          
          
          <code class="ruby">		begin</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="84">
          
          
          <code class="ruby">			group = Group.find(params[:group])</code>
=======
          <code class="ruby">			STATUS_ATTENDING].include?(new_status)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="81">
          
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="82">
          
          
          <code class="ruby">			return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="83">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="84">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="85">
          <span class="hits">2</span>
          
          <code class="ruby">		@event.set_user_status(current_user.id, new_status)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="86">
          <span class="hits">2</span>
          
          <code class="ruby">		respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="87">
          
          
          <code class="ruby">  end</code>
>>>>>>> master
        </li>
      
        <li class="never" data-hits="" data-linenumber="88">
          
          
          <code class="ruby">		rescue ActiveRecord::RecordNotFound</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="86">
          
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="87">
          
          
          <code class="ruby">			return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="88">
          
          
          <code class="ruby">		end</code>
=======
        <li class="never" data-hits="" data-linenumber="89">
          
          
          <code class="ruby">  # POST /event/view</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="90">
          
          
          <code class="ruby">  # Returns relevant information about the given event. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="91">
          <span class="hits">1</span>
          
          <code class="ruby">  def view</code>
>>>>>>> master
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="92">
          <span class="hits">4</span>
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="93">
          <span class="hits">3</span>
          
<<<<<<< HEAD
          <code class="ruby"></code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="90">
=======
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="94">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">		return if not member_of_event</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="95">
          <span class="hits">1</span>
          
<<<<<<< HEAD
          <code class="ruby">		user_list = group.user_list</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="91">
          
          
          <code class="ruby">		curr_party_list = @event.party_list</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="92">
          
          
          <code class="ruby">		user_list.delete_if { |user_id| curr_party_list.has_key?(user_id) }</code>
=======
          <code class="ruby">		respond(SUCCESS, @event.get_hash)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="96">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="97">
          
          
          <code class="ruby"></code>
>>>>>>> master
        </li>
      
        <li class="never" data-hits="" data-linenumber="98">
          
          
<<<<<<< HEAD
          <code class="ruby"></code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="94">
          
          
          <code class="ruby">		@event.add_user_list(user_list)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="95">
          
          
          <code class="ruby">		@event.add_to_user_event_lists(user_list)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="96">
=======
          <code class="ruby">	# DELETE /event/cancel_event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="99">
          
          
          <code class="ruby">	# Deletes the given event. Removes it from all of the associated</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="100">
          
          
          <code class="ruby">	# user&#39;s event_lists, and removes it from the database.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="101">
          
          
          <code class="ruby">	# Will fail if not called by the admin.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="102">
          <span class="hits">1</span>
          
          <code class="ruby">	def cancel_event</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="103">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="104">
          <span class="hits">2</span>
          
<<<<<<< HEAD
          <code class="ruby">		@event.notify( EventNotification.new(NOTIF_NEW_EVENT, @event), user_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="97">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="98">
          
          
          <code class="ruby">		respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="99">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="100">
=======
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="105">
          <span class="hits">2</span>
          
          <code class="ruby">		return if not user_admin</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="106">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="107">
          <span class="hits">1</span>
          
          <code class="ruby">		@event.cancel_self</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="108">
          <span class="hits">1</span>
          
          <code class="ruby">		@event.destroy</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="109">
          <span class="hits">1</span>
          
          <code class="ruby">		respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="110">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="101">
=======
        <li class="never" data-hits="" data-linenumber="111">
>>>>>>> master
          
          
          <code class="ruby">  # POST /event/update_user_status</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="102">
          
          
          <code class="ruby">  # Updates the currently logged in user&#39;s status within this event.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="103">
          
          
          <code class="ruby">  # Does nothing when attempting to change status within an </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="104">
          
          
          <code class="ruby">  # event that the user is not a member of.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="105">
          <span class="hits">1</span>
          
          <code class="ruby">  def update_user_status</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="106">
          
=======
        <li class="never" data-hits="" data-linenumber="112">
          
          
          <code class="ruby">	# POST /event/edit_event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="113">
          
          
          <code class="ruby">	# Edits the given event to have new parameters as passed. Any </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="114">
          
          
          <code class="ruby">	# field not passed will remain unchanged. Must be admin.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="115">
          <span class="hits">1</span>
          
          <code class="ruby">	def edit_event</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="116">
          <span class="hits">7</span>
>>>>>>> master
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="107">
          
          
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="108">
=======
        <li class="covered" data-hits="7" data-linenumber="117">
          <span class="hits">7</span>
          
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="118">
          <span class="hits">7</span>
          
          <code class="ruby">		return if not user_admin</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="119">
>>>>>>> master
          
          
          <code class="ruby">		</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="109">
          
          
          <code class="ruby">		new_status = params[:status]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="110">
          
          
          <code class="ruby">		if not [STATUS_NO_RESPONSE, STATUS_NOT_ATTENDING,</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="111">
          
          
          <code class="ruby">			STATUS_ATTENDING].include?(new_status)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="112">
=======
        <li class="covered" data-hits="6" data-linenumber="120">
          <span class="hits">6</span>
          
          <code class="ruby">		event_info_hash = {}</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="121">
          <span class="hits">6</span>
          
          <code class="ruby">		event_info_hash[:name] = params[:title] if params.has_key?(:title)</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="122">
          <span class="hits">6</span>
          
          <code class="ruby">		event_info_hash[:location] = params[:location] if params[:location]</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="123">
          <span class="hits">6</span>
>>>>>>> master
          
          <code class="ruby">		event_info_hash[:description] = params[:description] if params[:description]</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="124">
          <span class="hits">6</span>
          
          <code class="ruby">		event_info_hash[:time] = params[:time].to_i if params[:time]</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="113">
=======
        <li class="covered" data-hits="6" data-linenumber="125">
          <span class="hits">6</span>
>>>>>>> master
          
          <code class="ruby">		rval = @event.edit_event(event_info_hash)</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="126">
          <span class="hits">6</span>
          
          <code class="ruby">		respond(rval)</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="114">
=======
        <li class="never" data-hits="" data-linenumber="127">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="115">
=======
        <li class="never" data-hits="" data-linenumber="128">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="116">
          
          
          <code class="ruby">		@event.set_user_status(current_user.id, new_status)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="117">
          
          
          <code class="ruby">		respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="118">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="119">
          
=======
        <li class="never" data-hits="" data-linenumber="129">
          
          
          <code class="ruby">	# DELETE /event/remove_user</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="130">
          
          
          <code class="ruby">	# Removes the given user from the event only if the currently</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="131">
          
          
          <code class="ruby">	# signed in user is the admin for the event. You cannot </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="132">
          
          
          <code class="ruby">	# remove the admin from the event.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="133">
          <span class="hits">1</span>
          
          <code class="ruby">	def remove_user</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="134">
          <span class="hits">3</span>
>>>>>>> master
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="120">
          
          
          <code class="ruby">  # POST /event/view</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="121">
          
          
          <code class="ruby">  # Returns relevant information about the given event. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="122">
          <span class="hits">1</span>
          
          <code class="ruby">  def view</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="123">
          
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="124">
          
          
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="125">
          
          
          <code class="ruby">		return if not member_of_event</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="126">
          
          
          <code class="ruby">		respond(SUCCESS, @event.get_hash)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="127">
=======
        <li class="covered" data-hits="3" data-linenumber="135">
          <span class="hits">3</span>
          
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="136">
          <span class="hits">3</span>
          
          <code class="ruby">		return if not user_admin</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="137">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="138">
          <span class="hits">3</span>
          
          <code class="ruby">		begin </code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="139">
          <span class="hits">3</span>
          
          <code class="ruby">			user_to_remove = User.find_by(email: params[:user_remove])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="140">
          
          
          <code class="ruby">		rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="141">
>>>>>>> master
          
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="128">
=======
        <li class="missed" data-hits="0" data-linenumber="142">
>>>>>>> master
          
          
          <code class="ruby">			return</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="129">
          
          
          <code class="ruby">	# DELETE /event/cancel_event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="130">
          
          
          <code class="ruby">	# Deletes the given event. Removes it from all of the associated</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="131">
          
          
          <code class="ruby">	# user&#39;s event_lists, and removes it from the database.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="132">
          
          
          <code class="ruby">	# Will fail if not called by the admin.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="133">
          <span class="hits">1</span>
          
          <code class="ruby">	def cancel_event</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="134">
          
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="135">
          
          
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="136">
          
          
          <code class="ruby">		return if not user_admin</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="137">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="138">
          
          
          <code class="ruby">		@event.cancel_self</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="139">
          
          
          <code class="ruby">		@event.destroy</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="140">
          
          
          <code class="ruby">		respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="141">
=======
        <li class="never" data-hits="" data-linenumber="143">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="144">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="145">
          <span class="hits">3</span>
          
          <code class="ruby">		if @event.is_admin?(user_to_remove.id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="146">
          <span class="hits">1</span>
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="147">
          <span class="hits">1</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="148">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="149">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="150">
          <span class="hits">2</span>
          
          <code class="ruby">		@event.remove_user(user_to_remove.id)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="151">
          <span class="hits">2</span>
          
          <code class="ruby">		user_to_remove.delete_event(@event.id)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="152">
          <span class="hits">2</span>
          
          <code class="ruby">		respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="153">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="142">
=======
        <li class="never" data-hits="" data-linenumber="154">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="143">
          
          
          <code class="ruby">	# POST /event/edit_event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="144">
          
          
          <code class="ruby">	# Edits the given event to have new parameters as passed. Any </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="145">
          
          
          <code class="ruby">	# field not passed will remain unchanged. Must be admin.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="146">
          <span class="hits">1</span>
          
          <code class="ruby">	def edit_event</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="147">
          
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="148">
          
          
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="149">
          
          
          <code class="ruby">		return if not user_admin</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="150">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="151">
          
          
          <code class="ruby">		event_info_hash = {}</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="152">
          
          
          <code class="ruby">		event_info_hash[:name] = params[:title] if params.has_key?(:title)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="153">
          
          
          <code class="ruby">		event_info_hash[:location] = params[:location] if params[:location]</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="154">
          
          
          <code class="ruby">		event_info_hash[:description] = params[:description] if params[:description]</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="155">
          
          
          <code class="ruby">		event_info_hash[:time] = params[:time].to_i if params[:time]</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="156">
          
          
          <code class="ruby">		rval = @event.edit_event(event_info_hash)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="157">
          
          
          <code class="ruby">		respond(rval)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="158">
=======
        <li class="never" data-hits="" data-linenumber="155">
          
          
          <code class="ruby">	# POST /event/add_conditional_acceptance</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="156">
          
          
          <code class="ruby">	# Adds a conditional acceptance for this user. A user’s status will automatically</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="157">
          
          
          <code class="ruby">	# be changed to STATUS_ATTENDING only if the specified condition is met. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="158">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_cond_acceptance</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="159">
          
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="160">
          
          
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="161">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="162">
          
          
          <code class="ruby">		if params[:condition_type] == COND_NUM_ATTENDING</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="163">
          
          
          <code class="ruby">			if params[:condition] &lt; 0</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="164">
          
          
          <code class="ruby">				respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="165">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="166">
          
          
          <code class="ruby">			@event.add_condition(current_user, NumberCondition.new(params[:condition]))</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="167">
          
          
          <code class="ruby">			respond(SUCCESS)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="168">
          
          
          <code class="ruby">		elsif params[:condition_type] == COND_USER_ATTENDING_ANY</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="169">
          
          
          <code class="ruby">			user_list = params[:condition].split(&quot;,&quot;).map do |email|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="170">
          
          
          <code class="ruby">				user = User.find_by(email: email.strip)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="171">
>>>>>>> master
          
          
          <code class="ruby">				if user == nil</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="159">
=======
        <li class="missed" data-hits="0" data-linenumber="172">
>>>>>>> master
          
          
          <code class="ruby">					respond(ERR_INVALID_FIELD)</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="160">
          
          
          <code class="ruby">	# DELETE /event/remove_user</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="161">
          
          
          <code class="ruby">	# Removes the given user from the event only if the currently</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="162">
          
          
          <code class="ruby">	# signed in user is the admin for the event. You cannot </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="163">
          
          
          <code class="ruby">	# remove the admin from the event.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="164">
          <span class="hits">1</span>
          
          <code class="ruby">	def remove_user</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="165">
          
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="166">
          
          
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="167">
          
          
          <code class="ruby">		return if not user_admin</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="168">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="169">
          
          
          <code class="ruby">		begin </code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="170">
          
          
          <code class="ruby">			user_to_remove = User.find_by(email: params[:user_remove])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="171">
          
          
          <code class="ruby">		rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="172">
          
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="173">
          
          
          <code class="ruby">			return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="174">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="175">
=======
        <li class="missed" data-hits="0" data-linenumber="173">
          
          
          <code class="ruby">					return </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="174">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="175">
          
          
          <code class="ruby">				user.id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="176">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="177">
          
          
          <code class="ruby">			@event.add_condition(current_user, NumberCondition.new(COND_USER_ATTENDING_ANY, params[:condition]))</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="178">
          
          
          <code class="ruby">			respond(SUCCESS)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="179">
          
          
          <code class="ruby">		elsif params[:condition_type] == COND_USER_ATTENDING_ALL</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="180">
          
          
          <code class="ruby">			user_list = params[:condition].split(&quot;,&quot;).map do |email|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="181">
          
          
          <code class="ruby">				user = User.find_by(email: email.strip)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="182">
          
          
          <code class="ruby">				if user == nil</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="183">
          
          
          <code class="ruby">					respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="184">
          
          
          <code class="ruby">					return </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="185">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="186">
          
          
          <code class="ruby">				user.id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="187">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="188">
          
          
          <code class="ruby">			@event.add_condition(current_user, NumberCondition.new(COND_USER_ATTENDING_ALL, params[:condition]))</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="189">
          
          
          <code class="ruby">			respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="190">
>>>>>>> master
          
          
          <code class="ruby">		else</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="176">
          
          
          <code class="ruby">		if @event.is_admin?(user_to_remove.id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="177">
          
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="178">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="179">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="180">
=======
        <li class="missed" data-hits="0" data-linenumber="191">
          
          
          <code class="ruby">			respond[ERR_UNSUCCESSFUL]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="192">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="193">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="194">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="195">
          <span class="hits">1</span>
          
          <code class="ruby">	private</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="196">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="181">
          
          
          <code class="ruby">		@event.remove_user(user_to_remove.id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="182">
          
          
          <code class="ruby">		user_to_remove.delete_event(@event.id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="183">
          
          
          <code class="ruby">		respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="184">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="185">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="186">
          
          
          <code class="ruby">	# POST /event/add_conditional_acceptance</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="187">
          
          
          <code class="ruby">	# Adds a conditional acceptance for this user. A user’s status will automatically</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="188">
          
          
          <code class="ruby">	# be changed to STATUS_ATTENDING only if the specified condition is met. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="189">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_cond_acceptance</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="190">
          
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="191">
          
          
          <code class="ruby">		return if not get_event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="192">
=======
        <li class="never" data-hits="" data-linenumber="197">
          
          
          <code class="ruby">	# Checks if there is a properly signed in user. If there is, returns</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="198">
          
          
          <code class="ruby">	# true. If not, responds with ERR_INVALID_SESSION and returns false.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="199">
          <span class="hits">1</span>
          
          <code class="ruby">	def signed_in_response</code>
        </li>
      
        <li class="covered" data-hits="35" data-linenumber="200">
          <span class="hits">35</span>
          
          <code class="ruby">		if !signed_in?</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="201">
          <span class="hits">3</span>
          
          <code class="ruby">			respond(ERR_INVALID_SESSION)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="202">
          <span class="hits">3</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="203">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="32" data-linenumber="204">
          <span class="hits">32</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="205">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="206">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="207">
          
          
          <code class="ruby">	# Sets @event to the event located in params[:event]. If none exists,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="208">
          
          
          <code class="ruby">	# responds with ERR_INVALID_FIELD and returns nil. Otherwise,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="209">
>>>>>>> master
          
          
          <code class="ruby">	# returns the event object that was found. </code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="193">
          
          
          <code class="ruby">		if params[:condition_type] == COND_NUM_ATTENDING</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="194">
          
          
          <code class="ruby">			if params[:condition] &lt; 0</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="195">
          
          
          <code class="ruby">				respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="196">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="197">
          
          
          <code class="ruby">			@event.add_condition(current_user, NumberCondition.new(params[:condition]))</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="198">
          
          
          <code class="ruby">			respond(SUCCESS)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="199">
          
          
          <code class="ruby">		elsif params[:condition_type] == COND_USER_ATTENDING_ANY</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="200">
          
          
          <code class="ruby">			user_list = params[:condition].split(&quot;,&quot;).map do |email|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="201">
          
          
          <code class="ruby">				user = User.find_by(email: email.strip)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="202">
          
          
          <code class="ruby">				if user == nil</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="203">
          
          
          <code class="ruby">					respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="204">
          
          
          <code class="ruby">					return </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="205">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="206">
          
          
          <code class="ruby">				user.id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="207">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="208">
          
          
          <code class="ruby">			@event.add_condition(current_user, UserCondition.new(COND_USER_ATTENDING_ANY, params[:condition]))</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="209">
          
          
          <code class="ruby">			respond(SUCCESS)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="210">
          
          
          <code class="ruby">		elsif params[:condition_type] == COND_USER_ATTENDING_ALL</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="211">
          
          
          <code class="ruby">			user_list = params[:condition].split(&quot;,&quot;).map do |email|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="212">
          
          
          <code class="ruby">				user = User.find_by(email: email.strip)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="213">
          
          
          <code class="ruby">				if user == nil</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="214">
          
          
          <code class="ruby">					respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="215">
          
          
          <code class="ruby">					return </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="216">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="217">
=======
        <li class="covered" data-hits="1" data-linenumber="210">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_event</code>
        </li>
      
        <li class="covered" data-hits="23" data-linenumber="211">
          <span class="hits">23</span>
          
          <code class="ruby">		begin</code>
        </li>
      
        <li class="covered" data-hits="23" data-linenumber="212">
          <span class="hits">23</span>
          
          <code class="ruby">			@event = Event.find(params[:event].to_i)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="213">
          
          
          <code class="ruby">		rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="214">
          <span class="hits">3</span>
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="215">
          <span class="hits">3</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="216">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="20" data-linenumber="217">
          <span class="hits">20</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="218">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="219">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="220">
          
          
          <code class="ruby">	# Checks to see if the currently logged in user is the admin</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="221">
          
          
          <code class="ruby">	# for this event. If not, responds with ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="222">
          
          
          <code class="ruby">	# and returns false. If it is, returns true. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="223">
          <span class="hits">1</span>
          
          <code class="ruby">	def user_admin</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="224">
          <span class="hits">16</span>
          
          <code class="ruby">		if not @event.is_admin?(current_user.id)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="225">
          <span class="hits">3</span>
          
          <code class="ruby">			respond(ERR_INVALID_PERMISSIONS)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="226">
          <span class="hits">3</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="227">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="13" data-linenumber="228">
          <span class="hits">13</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="229">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="230">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="231">
          
          
          <code class="ruby">	# Checks to see if the currently logged in user is a member</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="232">
          
          
          <code class="ruby">	# of this event. If not, responds with ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="233">
          
          
          <code class="ruby">	# and returns false. If it is, returns true.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="234">
          <span class="hits">1</span>
          
          <code class="ruby">	def member_of_event</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="235">
          <span class="hits">2</span>
          
          <code class="ruby">		if @event.get_user_status(current_user.id) == nil</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="236">
          <span class="hits">1</span>
          
          <code class="ruby">			respond(ERR_INVALID_PERMISSIONS)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="237">
          <span class="hits">1</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="238">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="239">
          <span class="hits">1</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="240">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="241">
>>>>>>> master
          
          
          <code class="ruby">				user.id</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="218">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="219">
          
          
          <code class="ruby">			@event.add_condition(current_user, UserCondition.new(COND_USER_ATTENDING_ALL, params[:condition]))</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="220">
          
          
          <code class="ruby">			respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="221">
          
          
          <code class="ruby">		else</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="222">
          
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="223">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="224">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="225">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="226">
          <span class="hits">1</span>
          
          <code class="ruby">	private</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="227">
=======
        <li class="never" data-hits="" data-linenumber="242">
          
          
          <code class="ruby">	# Responds. Always includes err_code set to ERROR (SUCCESS by default). </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="243">
          
          
          <code class="ruby">	# Additional response fields can be passed as a hash to ADDITIONAL.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="244">
          <span class="hits">1</span>
          
          <code class="ruby">	def respond(error = SUCCESS, additional = {})</code>
        </li>
      
        <li class="covered" data-hits="35" data-linenumber="245">
          <span class="hits">35</span>
          
          <code class="ruby">		response = { err_code: error }.merge(additional)</code>
        </li>
      
        <li class="covered" data-hits="35" data-linenumber="246">
          <span class="hits">35</span>
          
          <code class="ruby">		render json: response, status: 200</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="247">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="248">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="249">
          
          
          <code class="ruby">	# Checks if the request was made by a properly signed in user.  </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="250">
          <span class="hits">1</span>
          
          <code class="ruby">	def signed_in?</code>
        </li>
      
        <li class="covered" data-hits="35" data-linenumber="251">
          <span class="hits">35</span>
          
          <code class="ruby">		return current_user != nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="252">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="253">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="228">
          
          
          <code class="ruby">	# Checks if there is a properly signed in user. If there is, returns</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="229">
          
          
          <code class="ruby">	# true. If not, responds with ERR_INVALID_SESSION and returns false.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="230">
          <span class="hits">1</span>
          
          <code class="ruby">	def signed_in_response</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="231">
          <span class="hits">10</span>
          
          <code class="ruby">		if !signed_in?</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="232">
          <span class="hits">1</span>
          
          <code class="ruby">			respond(ERR_INVALID_SESSION)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="233">
          <span class="hits">1</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="234">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="235">
          <span class="hits">9</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="236">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="237">
=======
        <li class="never" data-hits="" data-linenumber="254">
          
          
          <code class="ruby">  # Finds the User with the remember_token stored in the session with the key :current_user_token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="255">
          
          
          <code class="ruby">  # Logging in sets the session value and logging out removes it.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="256">
          <span class="hits">1</span>
          
          <code class="ruby">  def current_user</code>
        </li>
      
        <li class="covered" data-hits="64" data-linenumber="257">
          <span class="hits">64</span>
          
          <code class="ruby">  	token = User.hash(cookies[:current_user_token])</code>
        </li>
      
        <li class="covered" data-hits="64" data-linenumber="258">
          <span class="hits">64</span>
          
          <code class="ruby">  	return User.find_by(remember_token: token)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="259">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="260">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="261">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="e6f360291614a4953cbd1e766d2e9aee223dcdad">
  <div class="header">
    <h3>app/controllers/groups_controller.rb</h3>
    <h4><span class="green">97.75 %</span> covered</h4>
    <div>
      <b>89</b> relevant lines. 
      <span class="green"><b>87</b> lines covered</span> and
      <span class="red"><b>2</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;user&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="238">
          
          
          <code class="ruby">	# Sets @event to the event located in params[:event]. If none exists,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="239">
          
          
          <code class="ruby">	# responds with ERR_INVALID_FIELD and returns nil. Otherwise,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="240">
          
          
          <code class="ruby">	# returns the event object that was found. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="241">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_event</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="242">
          
          
          <code class="ruby">		begin</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="243">
          
          
          <code class="ruby">			@event = Event.find(params[:event].to_i)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="244">
          
          
          <code class="ruby">		rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="245">
          
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="246">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="247">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="248">
          
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="249">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="250">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="251">
=======
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">class GroupsController &lt; ApplicationController</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby">	# POST /group/create_group</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">	# Creates a new group and stores it in the db</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby">	# * On success, stores the group in the database</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby">	# * On success, adds the group to each member</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby">	# * On success, returns JSON { err_code: SUCCESS, :group}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	# * On failure, returns JSON { :err_code }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="11">
          <span class="hits">1</span>
          
          <code class="ruby">	def create_group</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="12">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="15" data-linenumber="13">
          <span class="hits">15</span>
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="15">
          <span class="hits">14</span>
          
          <code class="ruby">		if not params[:user_list].respond_to?(&#39;split&#39;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="16">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="17">
          <span class="hits">1</span>
          
<<<<<<< HEAD
          <code class="ruby">	# Checks to see if the currently logged in user is the admin</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="252">
          
          
          <code class="ruby">	# for this event. If not, responds with ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="253">
          
          
          <code class="ruby">	# and returns false. If it is, returns true. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="254">
          <span class="hits">1</span>
          
          <code class="ruby">	def user_admin</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="255">
          
          
          <code class="ruby">		if not @event.is_admin?(current_user.id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="256">
          
          
          <code class="ruby">			respond(ERR_INVALID_PERMISSIONS)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="257">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="258">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="259">
          
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="260">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="261">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="262">
          
          
          <code class="ruby">	# Checks to see if the currently logged in user is a member</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="263">
          
          
          <code class="ruby">	# of this event. If not, responds with ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="264">
          
          
          <code class="ruby">	# and returns false. If it is, returns true.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="265">
          <span class="hits">1</span>
          
          <code class="ruby">	def member_of_event</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="266">
          
          
          <code class="ruby">		if @event.get_user_status(current_user.id) == nil</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="267">
          
          
          <code class="ruby">			respond(ERR_INVALID_PERMISSIONS)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="268">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="269">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="270">
          
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="271">
=======
          <code class="ruby">			return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="13" data-linenumber="20">
          <span class="hits">13</span>
          
          <code class="ruby">		user_list = params[:user_list].split(&quot;,&quot;).map do |email|</code>
        </li>
      
        <li class="covered" data-hits="24" data-linenumber="21">
          <span class="hits">24</span>
          
          <code class="ruby">			user = User.find_by(email: email.strip)</code>
        </li>
      
        <li class="covered" data-hits="24" data-linenumber="22">
          <span class="hits">24</span>
          
          <code class="ruby">			if user == nil</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="23">
          <span class="hits">2</span>
          
          <code class="ruby">				respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="24">
          <span class="hits">2</span>
          
          <code class="ruby">				return </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="22" data-linenumber="26">
          <span class="hits">22</span>
          
          <code class="ruby">			user.id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="11" data-linenumber="29">
          <span class="hits">11</span>
          
          <code class="ruby">		rval = Group.add_group(params[:name], user_list, params[:description])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="11" data-linenumber="31">
          <span class="hits">11</span>
          
          <code class="ruby">		if rval &lt; 0</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="32">
          <span class="hits">1</span>
          
          <code class="ruby">  		respond(rval)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby">  	else</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="34">
          <span class="hits">10</span>
          
          <code class="ruby">  		respond(SUCCESS, { group: rval } )</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="35">
          
          
          <code class="ruby">  	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="36">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="272">
=======
        <li class="never" data-hits="" data-linenumber="37">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="273">
          
          
          <code class="ruby">	# Responds. Always includes err_code set to ERROR (SUCCESS by default). </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="274">
          
          
          <code class="ruby">	# Additional response fields can be passed as a hash to ADDITIONAL.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="275">
          <span class="hits">1</span>
          
          <code class="ruby">	def respond(error = SUCCESS, additional = {})</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="276">
          <span class="hits">7</span>
          
          <code class="ruby">		response = { err_code: error }.merge(additional)</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="277">
          <span class="hits">7</span>
          
          <code class="ruby">		render json: response, status: 200</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="278">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="279">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="280">
          
          
          <code class="ruby">	# Checks if the request was made by a properly signed in user.  </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="281">
          <span class="hits">1</span>
          
          <code class="ruby">	def signed_in?</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="282">
          <span class="hits">10</span>
          
          <code class="ruby">		return current_user != nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="283">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="284">
=======
        <li class="never" data-hits="" data-linenumber="38">
          
          
          <code class="ruby">	# POST /group/add_users</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="39">
          
          
          <code class="ruby">	# Adds users to the group: adds them to the group&#39;s user_list,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="40">
          
          
          <code class="ruby">	# and adds the group to their group_list.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="41">
          
          
          <code class="ruby">	# You must be signed in, and you must be a member of the group</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="42">
          
          
          <code class="ruby">	# for this call to succeed. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="43">
          
          
          <code class="ruby">	# Duplicate users (users already in the group) will be ignored.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="44">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_users</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="45">
          <span class="hits">5</span>
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="46">
          <span class="hits">5</span>
          
          <code class="ruby">		return if not get_group</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="47">
          <span class="hits">4</span>
          
          <code class="ruby">		return if not member_of_group</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="48">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="285">
          
          
          <code class="ruby">  # Finds the User with the remember_token stored in the session with the key :current_user_token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="286">
=======
        <li class="covered" data-hits="3" data-linenumber="49">
          <span class="hits">3</span>
          
          <code class="ruby">		user_list = params[:user_list].split(&#39;,&#39;).map do |email|</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="50">
          <span class="hits">5</span>
>>>>>>> master
          
          <code class="ruby">			user = User.find_by(email: email)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="51">
          <span class="hits">5</span>
          
<<<<<<< HEAD
          <code class="ruby">  # Logging in sets the session value and logging out removes it.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="287">
          <span class="hits">1</span>
          
          <code class="ruby">  def current_user</code>
        </li>
      
        <li class="covered" data-hits="19" data-linenumber="288">
          <span class="hits">19</span>
          
          <code class="ruby">  	token = User.hash(cookies[:current_user_token])</code>
        </li>
      
        <li class="covered" data-hits="19" data-linenumber="289">
          <span class="hits">19</span>
          
          <code class="ruby">  	return User.find_by(remember_token: token)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="290">
=======
          <code class="ruby">			if not user</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="52">
          <span class="hits">1</span>
          
          <code class="ruby">				respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="53">
          <span class="hits">1</span>
          
          <code class="ruby">				return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="54">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="55">
          <span class="hits">4</span>
          
          <code class="ruby">			user.id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="56">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="57">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="58">
          <span class="hits">2</span>
          
          <code class="ruby">		curr_user_list = @group.user_list</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="59">
          <span class="hits">6</span>
          
          <code class="ruby">		user_list.delete_if { |user_id| curr_user_list.include?(user_id) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="60">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="61">
          <span class="hits">2</span>
          
          <code class="ruby">		@group.add_user_list(user_list)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="62">
          <span class="hits">2</span>
          
          <code class="ruby">		@group.add_to_user_group_lists(user_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="63">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="64">
          <span class="hits">2</span>
          
          <code class="ruby">		respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="65">
>>>>>>> master
          
          
          <code class="ruby">	end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="291">
=======
        <li class="never" data-hits="" data-linenumber="66">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="292">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="6246dc083506622a592868bab3c3d59dbc40f898">
  <div class="header">
    <h3>app/helpers/application_helper.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">module ApplicationHelper</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="31844e57e4fce977f6021e6d678ac92591f91c39">
  <div class="header">
    <h3>app/helpers/events_helper.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">module EventsHelper</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="829b93b262c07eeeae30b730012a7d282895cf4a">
  <div class="header">
    <h3>app/helpers/groups_helper.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">module GroupsHelper</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="42538fcec53438db8a6588ca5b276b0991cb66d8">
  <div class="header">
    <h3>app/helpers/users_helper.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">module UsersHelper</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="dd04a3dbb19ebeb4e89007e549758a9632a68ce8">
  <div class="header">
    <h3>app/models/event.rb</h3>
    <h4><span class="red">55.56 %</span> covered</h4>
    <div>
      <b>189</b> relevant lines. 
      <span class="green"><b>105</b> lines covered</span> and
      <span class="red"><b>84</b> lines missed.</span>
=======
        <li class="never" data-hits="" data-linenumber="67">
          
          
          <code class="ruby">  # POST /group/view</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="68">
          
          
          <code class="ruby">  # Returns relevant information about the given group. Must be a </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="69">
          
          
          <code class="ruby">  # member of the group for this to succeed.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="70">
          <span class="hits">1</span>
          
          <code class="ruby">  def view</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="71">
          <span class="hits">5</span>
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="72">
          <span class="hits">4</span>
          
          <code class="ruby">		return if not get_group</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="73">
          <span class="hits">3</span>
          
          <code class="ruby">		return if not member_of_group</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="74">
          <span class="hits">2</span>
          
          <code class="ruby">		respond(SUCCESS, @group.get_hash)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="75">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="76">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="77">
          
          
          <code class="ruby">	# DELETE /group/delete_group</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="78">
          
          
          <code class="ruby">	# Deletes the given group. Removes it from all of the associated</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="79">
          
          
          <code class="ruby">	# user&#39;s group_lists, and removes it from the database.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="80">
          
          
          <code class="ruby">	# Will fail if not called by a member of the group.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="81">
          <span class="hits">1</span>
          
          <code class="ruby">	def delete_group</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="82">
          <span class="hits">2</span>
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="83">
          <span class="hits">2</span>
          
          <code class="ruby">		return if not get_group</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="84">
          <span class="hits">2</span>
          
          <code class="ruby">		return if not member_of_group</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="85">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="86">
          <span class="hits">1</span>
          
          <code class="ruby">		@group.delete_self</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="87">
          <span class="hits">1</span>
          
          <code class="ruby">		@group.destroy</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="88">
          <span class="hits">1</span>
          
          <code class="ruby">		respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="89">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="90">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="91">
          
          
          <code class="ruby">	# POST /group/edit_group</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="92">
          
          
          <code class="ruby">	# Edits the given group to have new parameters as passed. Any </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="93">
          
          
          <code class="ruby">	# field not passed will remain unchanged. Must be a member of the group.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="94">
          <span class="hits">1</span>
          
          <code class="ruby">	def edit_group</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="95">
          <span class="hits">5</span>
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="96">
          <span class="hits">5</span>
          
          <code class="ruby">		return if not get_group</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="97">
          <span class="hits">5</span>
          
          <code class="ruby">		return if not member_of_group</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="98">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="99">
          <span class="hits">4</span>
          
          <code class="ruby">		group_info_hash = {}</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="100">
          <span class="hits">4</span>
          
          <code class="ruby">		group_info_hash[:name] = params[:name] if params.has_key?(:name)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="101">
          <span class="hits">4</span>
          
          <code class="ruby">		group_info_hash[:description] = params[:description] if params[:description]</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="102">
          <span class="hits">4</span>
          
          <code class="ruby">		rval = @group.edit_group(group_info_hash)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="103">
          <span class="hits">4</span>
          
          <code class="ruby">		respond(rval)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="104">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="105">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="106">
          
          
          <code class="ruby">	# DELETE /group/remove_user</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="107">
          
          
          <code class="ruby">	# Removes the given user from the group. You must be a member to</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="108">
          
          
          <code class="ruby">	# remove people, and you can remove yourself. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="109">
          <span class="hits">1</span>
          
          <code class="ruby">	def remove_user</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="110">
          <span class="hits">4</span>
          
          <code class="ruby">		return if not signed_in_response</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="111">
          <span class="hits">4</span>
          
          <code class="ruby">		return if not get_group</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="112">
          <span class="hits">4</span>
          
          <code class="ruby">		return if not member_of_group</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="113">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="114">
          <span class="hits">3</span>
          
          <code class="ruby">		begin </code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="115">
          <span class="hits">3</span>
          
          <code class="ruby">			user_to_remove = User.find_by(email: params[:user_remove])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="116">
          
          
          <code class="ruby">		rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="117">
          
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="118">
          
          
          <code class="ruby">			return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="119">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="120">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="121">
          <span class="hits">3</span>
          
          <code class="ruby">		@group.remove_user(user_to_remove.id)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="122">
          <span class="hits">3</span>
          
          <code class="ruby">		user_to_remove.delete_group(@group.id)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="123">
          <span class="hits">3</span>
          
          <code class="ruby">		respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="124">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="125">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="126">
          <span class="hits">1</span>
          
          <code class="ruby">	private</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="127">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="128">
          
          
          <code class="ruby">	# Checks if there is a properly signed in user. If there is, returns</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="129">
          
          
          <code class="ruby">	# true. If not, responds with ERR_INVALID_SESSION and returns false.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="130">
          <span class="hits">1</span>
          
          <code class="ruby">	def signed_in_response</code>
        </li>
      
        <li class="covered" data-hits="36" data-linenumber="131">
          <span class="hits">36</span>
          
          <code class="ruby">		if !signed_in?</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="132">
          <span class="hits">2</span>
          
          <code class="ruby">			respond(ERR_INVALID_SESSION)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="133">
          <span class="hits">2</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="134">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="34" data-linenumber="135">
          <span class="hits">34</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="136">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="137">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="138">
          
          
          <code class="ruby">	# Sets @group to the group located in params[:group]. If none exists,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="139">
          
          
          <code class="ruby">	# responds with ERR_INVALID_FIELD and returns nil. Otherwise,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="140">
          
          
          <code class="ruby">	# returns the group object that was found. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="141">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_group</code>
        </li>
      
        <li class="covered" data-hits="20" data-linenumber="142">
          <span class="hits">20</span>
          
          <code class="ruby">		begin</code>
        </li>
      
        <li class="covered" data-hits="20" data-linenumber="143">
          <span class="hits">20</span>
          
          <code class="ruby">			@group = Group.find(params[:group].to_i)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="144">
          
          
          <code class="ruby">		rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="145">
          <span class="hits">2</span>
          
          <code class="ruby">			respond(ERR_INVALID_FIELD)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="146">
          <span class="hits">2</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="147">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="18" data-linenumber="148">
          <span class="hits">18</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="149">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="150">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="151">
          
          
          <code class="ruby">	# Checks to see if the currently logged in user is a member </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="152">
          
          
          <code class="ruby">	# of this group. If not, responds with ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="153">
          
          
          <code class="ruby">	# and returns false. If it is, returns true.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="154">
          <span class="hits">1</span>
          
          <code class="ruby">	def member_of_group</code>
        </li>
      
        <li class="covered" data-hits="18" data-linenumber="155">
          <span class="hits">18</span>
          
          <code class="ruby">		if not @group.user_list.include?(current_user.id)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="156">
          <span class="hits">5</span>
          
          <code class="ruby">			respond(ERR_INVALID_PERMISSIONS)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="157">
          <span class="hits">5</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="158">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="13" data-linenumber="159">
          <span class="hits">13</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="160">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="161">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="162">
          
          
          <code class="ruby">	# Responds. Always includes err_code set to ERROR (SUCCESS by default). </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="163">
          
          
          <code class="ruby">	# Additional response fields can be passed as a hash to ADDITIONAL.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="164">
          <span class="hits">1</span>
          
          <code class="ruby">	def respond(error = SUCCESS, additional = {})</code>
        </li>
      
        <li class="covered" data-hits="36" data-linenumber="165">
          <span class="hits">36</span>
          
          <code class="ruby">		response = { err_code: error }.merge(additional)</code>
        </li>
      
        <li class="covered" data-hits="36" data-linenumber="166">
          <span class="hits">36</span>
          
          <code class="ruby">		render json: response, status: 200</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="167">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="168">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="169">
          
          
          <code class="ruby">	# Checks if the request was made by a properly signed in user.  </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="170">
          <span class="hits">1</span>
          
          <code class="ruby">	def signed_in?</code>
        </li>
      
        <li class="covered" data-hits="36" data-linenumber="171">
          <span class="hits">36</span>
          
          <code class="ruby">		return current_user != nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="172">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="173">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="174">
          
          
          <code class="ruby">  # Finds the User with the remember_token stored in the session with the key :current_user_token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="175">
          
          
          <code class="ruby">  # Logging in sets the session value and logging out removes it.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="176">
          <span class="hits">1</span>
          
          <code class="ruby">  def current_user</code>
        </li>
      
        <li class="covered" data-hits="54" data-linenumber="177">
          <span class="hits">54</span>
          
          <code class="ruby">  	token = User.hash(cookies[:current_user_token])</code>
        </li>
      
        <li class="covered" data-hits="54" data-linenumber="178">
          <span class="hits">54</span>
          
          <code class="ruby">  	return User.find_by(remember_token: token)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="179">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="180">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="181">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="9398d3adf6c532814b2d60e14f02fb0235d82e9b">
  <div class="header">
    <h3>app/controllers/users_controller.rb</h3>
    <h4><span class="yellow">82.97 %</span> covered</h4>
    <div>
      <b>182</b> relevant lines. 
      <span class="green"><b>151</b> lines covered</span> and
      <span class="red"><b>31</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">include RestGraph::RailsUtil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">class UsersController &lt; ApplicationController</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby">  # Session ID does not match this user.remember_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">  ERR_INVALID_SESSION = -11</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby">	# POST /user/add_user</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby">	# Tries to store user in db using User#add</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	# * On success, stores user in database</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby">	# * On success, stores cookie to remember session and sets the current_user to this user</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="12">
          
          
          <code class="ruby">	# * On success, returns JSON { :err_code, : user_id }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
          
          
          <code class="ruby">	# * On failure, returns JSON { :err_code }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="14">
          <span class="hits">1</span>
          
          <code class="ruby">  def add_user</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="15">
          <span class="hits">3</span>
          
          <code class="ruby">  	@user = User.new(name: params[:name], email: params[:email], password: params[:password])</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="16">
          <span class="hits">3</span>
          
          <code class="ruby">    rval = @user.add</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="17">
          <span class="hits">3</span>
          
          <code class="ruby">  	if rval &lt; 0</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="18">
          <span class="hits">2</span>
          
          <code class="ruby">      respond(rval)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">  	else</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="20">
          <span class="hits">1</span>
          
          <code class="ruby">  		token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">      @user.add_device_token(params[&#39;device_token&#39;]) if params.has_key?(&#39;device_token&#39;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="22">
          <span class="hits">1</span>
          
          <code class="ruby">  		cookies.permanent[:current_user_token] = token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="23">
          <span class="hits">1</span>
          
          <code class="ruby">  		@user.update_attribute(:remember_token, User.hash(token))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="24">
          <span class="hits">1</span>
          
          <code class="ruby">  		current_user = @user</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="25">
          <span class="hits">1</span>
          
          <code class="ruby">      respond(rval, { user_id: current_user.id,  email: current_user.email, name: current_user.name })</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby">  	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby">  # POST /user/login_user</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby">  # Tries to login user in using User#login</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="31">
          
          
          <code class="ruby">	# * On success, stores cookie to remember session and sets the current_user to this user</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="32">
          
          
          <code class="ruby">	# * On success, returns JSON { :err_code, : user_id }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby">	# * On failure, returns JSON { :err_code }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="34">
          <span class="hits">1</span>
          
          <code class="ruby">  def login_user</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="35">
          <span class="hits">3</span>
          
          <code class="ruby">  	@user = User.new(email: params[:email], password: params[:password])</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="36">
          <span class="hits">3</span>
          
          <code class="ruby">  	rval = @user.login</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="37">
          <span class="hits">3</span>
          
          <code class="ruby">  	if rval[:err_code] &lt; 0</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="38">
          <span class="hits">1</span>
          
          <code class="ruby">      respond(rval[:err_code])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="39">
          
          
          <code class="ruby">  	else</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="40">
          <span class="hits">2</span>
          
          <code class="ruby">  		@user = rval[:user]</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="41">
          <span class="hits">2</span>
          
          <code class="ruby">  		token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="42">
          <span class="hits">2</span>
          
          <code class="ruby">  		cookies.permanent[:current_user_token] = token</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="43">
          <span class="hits">2</span>
          
          <code class="ruby">  		@user.update_attribute(:remember_token, User.hash(token))</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="44">
          <span class="hits">2</span>
          
          <code class="ruby">  		current_user = @user</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="45">
          <span class="hits">2</span>
          
          <code class="ruby">      current_user.add_device_token(params[&#39;device_token&#39;]) if params.has_key?(&#39;device_token&#39;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="46">
          <span class="hits">2</span>
          
          <code class="ruby">      respond(rval[:err_code], { user_id: current_user.id, email: current_user.email, name: current_user.name })</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="47">
          
          
          <code class="ruby">  	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="48">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="49">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="50">
          
          
          <code class="ruby">  # POST /user/auth_facebook</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="51">
          <span class="hits">1</span>
          
          <code class="ruby">  def auth_facebook</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="52">
          <span class="hits">2</span>
          
          <code class="ruby">    @user = User.find_by(fb_id: params[:facebook_id])</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="53">
          <span class="hits">2</span>
          
          <code class="ruby">    if @user == nil</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="54">
          <span class="hits">2</span>
          
          <code class="ruby">      begin</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="55">
          <span class="hits">2</span>
          
          <code class="ruby">        rest_graph_setup</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="56">
          <span class="hits">2</span>
          
          <code class="ruby">        rg = RestGraph.new(:access_token =&gt; params[:facebook_token])</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="57">
          <span class="hits">2</span>
          
          <code class="ruby">        medata = rg.get(&#39;me&#39;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="58">
          <span class="hits">1</span>
          
          <code class="ruby">        @user = User.find_by(email: medata[&#39;email&#39;])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="59">
          <span class="hits">1</span>
          
          <code class="ruby">        if @user == nil</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="60">
          <span class="hits">1</span>
          
          <code class="ruby">          @user = User.new(name: medata[&#39;name&#39;], email:  medata[&#39;email&#39;], password: SecureRandom.urlsafe_base64)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="61">
          <span class="hits">1</span>
          
          <code class="ruby">          @user.add</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="62">
          
          
          <code class="ruby">        end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="63">
          
          
          <code class="ruby">      rescue =&gt; exception</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="64">
          <span class="hits">1</span>
          
          <code class="ruby">        respond(ERR_BAD_CREDENTIALS)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="65">
          <span class="hits">1</span>
          
          <code class="ruby">        return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="66">
          
          
          <code class="ruby">      end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="67">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="68">
          <span class="hits">1</span>
          
          <code class="ruby">    token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="69">
          <span class="hits">1</span>
          
          <code class="ruby">    cookies.permanent[:current_user_token] = token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="70">
          <span class="hits">1</span>
          
          <code class="ruby">    @user.update_attribute(:remember_token, User.hash(token))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="71">
          <span class="hits">1</span>
          
          <code class="ruby">    @user.update_attribute(:fb_id, params[:facebook_id])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="72">
          <span class="hits">1</span>
          
          <code class="ruby">    current_user = @user</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="73">
          <span class="hits">1</span>
          
          <code class="ruby">    respond(SUCCESS, { user_id: current_user.id, email: current_user.email, name: current_user.name })</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="74">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="75">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="76">
          
          
          <code class="ruby">  # POST /user/get_profile_pic</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="77">
          
          
          <code class="ruby">  # Supports retrival of profile picture via Facebook Graph</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="78">
          
          
          <code class="ruby">  # ERR_UNSUCCESFUL if email not valid, or corresponding user does not have facebook credentials</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="79">
          
          
          <code class="ruby">  # returns url to picture</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="80">
          <span class="hits">1</span>
          
          <code class="ruby">  def get_profile_pic</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="81">
          <span class="hits">3</span>
          
          <code class="ruby">    @user = User.find_by(email: params[:email])</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="82">
          <span class="hits">3</span>
          
          <code class="ruby">    @user = User.find_by(id: params[:user_id]) if @user == nil</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="83">
          <span class="hits">3</span>
          
          <code class="ruby">    if @user == nil || @user.fb_id == nil</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="84">
          <span class="hits">1</span>
          
          <code class="ruby">      respond(ERR_UNSUCCESSFUL)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="85">
          <span class="hits">1</span>
          
          <code class="ruby">      return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="86">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="87">
          <span class="hits">2</span>
          
          <code class="ruby">    begin</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="88">
          <span class="hits">2</span>
          
          <code class="ruby">      rest_graph_setup</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="89">
          <span class="hits">2</span>
          
          <code class="ruby">      rg = RestGraph.new()</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="90">
          <span class="hits">2</span>
          
          <code class="ruby">      medata = rg.get(&quot;#{@user.fb_id}/?fields=picture&amp;type=square&quot;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="91">
          <span class="hits">2</span>
          
          <code class="ruby">      respond(SUCCESS, { pic_url: medata[&#39;picture&#39;][&#39;data&#39;][&#39;url&#39;] })</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="92">
          
          
          <code class="ruby">    rescue =&gt; exception</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="93">
          
          
          <code class="ruby">      respond(ERR_UNSUCCESFUL)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="94">
          
          
          <code class="ruby">      return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="95">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="96">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="97">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="98">
          
          
          <code class="ruby">  # GET /user/get_all_users</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="99">
          
          
          <code class="ruby">  # Return a list of all users signed up for Wuff</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="100">
          
          
          <code class="ruby">  # (Used for autocompletion purposes)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="101">
          <span class="hits">1</span>
          
          <code class="ruby">  def get_all_users</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="102">
          
          
          <code class="ruby">    user_count = 0</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="103">
          
          
          <code class="ruby">    user_list = {}</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="104">
          
          
          <code class="ruby">    User.all.each do |user|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="105">
          
          
          <code class="ruby">      user_count += 1</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="106">
          
          
          <code class="ruby">      user_list[user_count] = user.get_hash</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="107">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="108">
          
          
          <code class="ruby">    user_list[:count] = user_count</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="109">
          
          
          <code class="ruby">    respond(SUCCESS, user_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="110">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="111">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="112">
          
          
          <code class="ruby">  # DELETE /user/logout_user</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="113">
          
          
          <code class="ruby">  # Logout the current_user</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="114">
          
          
          <code class="ruby">  # * Changes current_user&#39;s remember_token in database</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="115">
          
          
          <code class="ruby">  # * Deletes cookies[current_user_token] and set current_user = nil</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="116">
          <span class="hits">1</span>
          
          <code class="ruby">  def logout_user</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="117">
          <span class="hits">1</span>
          
          <code class="ruby">    if !current_user.nil?</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="118">
          <span class="hits">1</span>
          
          <code class="ruby">  	 token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="119">
          <span class="hits">1</span>
          
          <code class="ruby">  	 current_user.update_attribute(:remember_token, User.hash(token))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="120">
          <span class="hits">1</span>
          
          <code class="ruby">  	 cookies.delete(:current_user_token)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="121">
          <span class="hits">1</span>
          
          <code class="ruby">     current_user.remove_device_token(params[&#39;device_token&#39;]) if params.has_key?(&#39;device_token&#39;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="122">
          <span class="hits">1</span>
          
          <code class="ruby">  	 current_user = nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="123">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="124">
          <span class="hits">1</span>
          
          <code class="ruby">    respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="125">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="126">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="127">
          
          
          <code class="ruby">  # POST /user/add_friend</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="128">
          
          
          <code class="ruby">  # Calls current_user.concat_friend</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="129">
          <span class="hits">1</span>
          
          <code class="ruby">  def add_friend</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="130">
          <span class="hits">2</span>
          
          <code class="ruby">    if not signed_in?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="131">
          
          
          <code class="ruby">      session_fail_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="132">
          
          
          <code class="ruby">      return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="133">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="134">
          <span class="hits">2</span>
          
          <code class="ruby">    rval = current_user.concat_friend(params[:friend_email])</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="135">
          <span class="hits">2</span>
          
          <code class="ruby">    respond(rval)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="136">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="137">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="138">
          
          
          <code class="ruby">  # POST /user/delete_friend</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="139">
          
          
          <code class="ruby">  # Calls current_user.remove_friend</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="140">
          <span class="hits">1</span>
          
          <code class="ruby">  def delete_friend</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="141">
          <span class="hits">1</span>
          
          <code class="ruby">    if not signed_in?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="142">
          
          
          <code class="ruby">      session_fail_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="143">
          
          
          <code class="ruby">      return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="144">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="145">
          <span class="hits">1</span>
          
          <code class="ruby">    rval = current_user.remove_friend(params[:friend_email])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="146">
          <span class="hits">1</span>
          
          <code class="ruby">    respond(rval)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="147">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="148">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="149">
          
          
          <code class="ruby">  # GET /user/get_events</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="150">
          
          
          <code class="ruby">  # Returns all of the relevant information to display user_id’s events </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="151">
          
          
          <code class="ruby">  # on their main screen. Nested JSON for each event.  </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="152">
          
          
          <code class="ruby">  #</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="153">
          
          
          <code class="ruby">  # If invalid event IDs are found, automatically removes them from</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="154">
          
          
          <code class="ruby">  # the user&#39;s event list. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="155">
          <span class="hits">1</span>
          
          <code class="ruby">  def get_events</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="156">
          <span class="hits">14</span>
          
          <code class="ruby">    if not signed_in?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="157">
          
          
          <code class="ruby">      session_fail_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="158">
          
          
          <code class="ruby">      return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="159">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="160">
          <span class="hits">14</span>
          
          <code class="ruby">    return_list = {}</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="161">
          <span class="hits">14</span>
          
          <code class="ruby">    event_count = 0</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="162">
          <span class="hits">14</span>
          
          <code class="ruby">    user = current_user</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="163">
          <span class="hits">14</span>
          
          <code class="ruby">    event_list_size_old = user.event_list.size</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="164">
          <span class="hits">14</span>
          
          <code class="ruby">    user.event_list.delete_if do |event_id|</code>
        </li>
      
        <li class="covered" data-hits="26" data-linenumber="165">
          <span class="hits">26</span>
          
          <code class="ruby">      begin</code>
        </li>
      
        <li class="covered" data-hits="26" data-linenumber="166">
          <span class="hits">26</span>
          
          <code class="ruby">        event = Event.find(event_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="167">
          
          
          <code class="ruby">      rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="168">
          <span class="hits">3</span>
          
          <code class="ruby">        next true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="169">
          
          
          <code class="ruby">      end</code>
        </li>
      
        <li class="covered" data-hits="23" data-linenumber="170">
          <span class="hits">23</span>
          
          <code class="ruby">      event_count += 1</code>
        </li>
      
        <li class="covered" data-hits="23" data-linenumber="171">
          <span class="hits">23</span>
          
          <code class="ruby">      return_list[event_count] = event.get_hash</code>
        </li>
      
        <li class="covered" data-hits="23" data-linenumber="172">
          <span class="hits">23</span>
          
          <code class="ruby">      false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="173">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="174">
          <span class="hits">14</span>
          
          <code class="ruby">    user.update_attribute(:event_list, user.event_list) if event_list_size_old != user.event_list.size</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="175">
          <span class="hits">14</span>
          
          <code class="ruby">    return_list[:event_count] = event_count</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="176">
          <span class="hits">14</span>
          
          <code class="ruby">    respond(SUCCESS, return_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="177">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="178">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="179">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="180">
          
          
          <code class="ruby">  # GET /user/get_groups</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="181">
          
          
          <code class="ruby">  # Returns all of the relevant information to display user_id’s groups. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="182">
          
          
          <code class="ruby">  # Nested JSON for each group. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="183">
          
          
          <code class="ruby">  #</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="184">
          
          
          <code class="ruby">  # If invalid group IDs are found, automatically removes them from</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="185">
          
          
          <code class="ruby">  # the user&#39;s group list. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="186">
          <span class="hits">1</span>
          
          <code class="ruby">  def get_groups</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="187">
          <span class="hits">9</span>
          
          <code class="ruby">    if not signed_in?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="188">
          
          
          <code class="ruby">      session_fail_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="189">
          
          
          <code class="ruby">      return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="190">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="191">
          <span class="hits">9</span>
          
          <code class="ruby">    return_list = {}</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="192">
          <span class="hits">9</span>
          
          <code class="ruby">    group_count = 0</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="193">
          <span class="hits">9</span>
          
          <code class="ruby">    user = current_user</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="194">
          <span class="hits">9</span>
          
          <code class="ruby">    group_list_size_old = user.group_list.size</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="195">
          <span class="hits">9</span>
          
          <code class="ruby">    user.group_list.delete_if do |group_id|</code>
        </li>
      
        <li class="covered" data-hits="18" data-linenumber="196">
          <span class="hits">18</span>
          
          <code class="ruby">      begin</code>
        </li>
      
        <li class="covered" data-hits="18" data-linenumber="197">
          <span class="hits">18</span>
          
          <code class="ruby">        group = Group.find(group_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="198">
          
          
          <code class="ruby">      rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="199">
          <span class="hits">3</span>
          
          <code class="ruby">        next true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="200">
          
          
          <code class="ruby">      end</code>
        </li>
      
        <li class="covered" data-hits="15" data-linenumber="201">
          <span class="hits">15</span>
          
          <code class="ruby">      group_count += 1</code>
        </li>
      
        <li class="covered" data-hits="15" data-linenumber="202">
          <span class="hits">15</span>
          
          <code class="ruby">      return_list[group_count] = group.get_hash</code>
        </li>
      
        <li class="covered" data-hits="15" data-linenumber="203">
          <span class="hits">15</span>
          
          <code class="ruby">      false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="204">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="205">
          <span class="hits">9</span>
          
          <code class="ruby">    user.update_attribute(:group_list, user.group_list) if group_list_size_old != user.group_list.size</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="206">
          <span class="hits">9</span>
          
          <code class="ruby">    return_list[:group_count] = group_count</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="207">
          <span class="hits">9</span>
          
          <code class="ruby">    respond(SUCCESS, return_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="208">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="209">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="210">
          
          
          <code class="ruby">  # GET /user/get_friends</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="211">
          
          
          <code class="ruby">  # Returns all of the relevant information to display user_id’s friends. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="212">
          
          
          <code class="ruby">  # Nested JSON for each friend. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="213">
          
          
          <code class="ruby">  #</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="214">
          
          
          <code class="ruby">  # If invalid friend IDs are found, automatically removes them from</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="215">
          
          
          <code class="ruby">  # the user&#39;s friend list. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="216">
          <span class="hits">1</span>
          
          <code class="ruby">  def get_friends</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="217">
          <span class="hits">7</span>
          
          <code class="ruby">    if not signed_in?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="218">
          
          
          <code class="ruby">      session_fail_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="219">
          
          
          <code class="ruby">      return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="220">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="221">
          <span class="hits">7</span>
          
          <code class="ruby">    return_list = {}</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="222">
          <span class="hits">7</span>
          
          <code class="ruby">    friend_count = 0</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="223">
          <span class="hits">7</span>
          
          <code class="ruby">    user = current_user</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="224">
          <span class="hits">7</span>
          
          <code class="ruby">    friend_list_size_old = user.friend_list.size</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="225">
          <span class="hits">7</span>
          
          <code class="ruby">    user.friend_list.delete_if do |friend_id|</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="226">
          <span class="hits">10</span>
          
          <code class="ruby">      begin</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="227">
          <span class="hits">10</span>
          
          <code class="ruby">        friend = User.find(friend_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="228">
          
          
          <code class="ruby">      rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="229">
          <span class="hits">3</span>
          
          <code class="ruby">        next true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="230">
          
          
          <code class="ruby">      end</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="231">
          <span class="hits">7</span>
          
          <code class="ruby">      friend_count += 1</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="232">
          <span class="hits">7</span>
          
          <code class="ruby">      return_list[friend_count] = friend.get_hash</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="233">
          <span class="hits">7</span>
          
          <code class="ruby">      false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="234">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="235">
          <span class="hits">7</span>
          
          <code class="ruby">    user.update_attribute(:friend_list, user.friend_list) if friend_list_size_old != user.friend_list.size</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="236">
          <span class="hits">7</span>
          
          <code class="ruby">    return_list[:friend_count] = friend_count</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="237">
          <span class="hits">7</span>
          
          <code class="ruby">    respond(SUCCESS, return_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="238">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="239">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="240">
          
          
          <code class="ruby">  # GET /user/has_notifications</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="241">
          
          
          <code class="ruby">  # Check if the user.notification_list is empty</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="242">
          
          
          <code class="ruby">  # Upon success, format JSON { err_code: code, notif: val }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="243">
          <span class="hits">1</span>
          
          <code class="ruby">  def has_notifications?</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="244">
          <span class="hits">2</span>
          
          <code class="ruby">    if not signed_in?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="245">
          
          
          <code class="ruby">      session_fail_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="246">
          
          
          <code class="ruby">      return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="247">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="248">
          <span class="hits">2</span>
          
          <code class="ruby">    val = current_user.notification_list.size &gt;= 1</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="249">
          <span class="hits">2</span>
          
          <code class="ruby">    respond(SUCCESS, { notif: val })</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="250">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="251">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="252">
          
          
          <code class="ruby">  # GET /user/get_notifications</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="253">
          
          
          <code class="ruby">  # Returns a list of pending notifications as JSON</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="254">
          <span class="hits">1</span>
          
          <code class="ruby">  def get_notifications</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="255">
          <span class="hits">2</span>
          
          <code class="ruby">    if not signed_in?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="256">
          
          
          <code class="ruby">      session_fail_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="257">
          
          
          <code class="ruby">      return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="258">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="259">
          <span class="hits">2</span>
          
          <code class="ruby">    return_list = {}</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="260">
          <span class="hits">2</span>
          
          <code class="ruby">    notif_count = 0</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="261">
          <span class="hits">2</span>
          
          <code class="ruby">    current_user.notification_list.each do |notif|</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="262">
          <span class="hits">1</span>
          
          <code class="ruby">      notif_count += 1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="263">
          <span class="hits">1</span>
          
          <code class="ruby">      return_list[notif_count] = notif</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="264">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="265">
          <span class="hits">2</span>
          
          <code class="ruby">    return_list[:notif_count] = notif_count</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="266">
          <span class="hits">2</span>
          
          <code class="ruby">    respond(SUCCESS, return_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="267">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="268">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="269">
          
          
          <code class="ruby">  # DELETE /user/clear_notifications</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="270">
          
          
          <code class="ruby">  # Upon Success, the current_user.notification_list is empty</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="271">
          <span class="hits">1</span>
          
          <code class="ruby">  def clear_notifications</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="272">
          <span class="hits">1</span>
          
          <code class="ruby">    if not signed_in?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="273">
          
          
          <code class="ruby">      session_fail_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="274">
          
          
          <code class="ruby">      returns</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="275">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="276">
          <span class="hits">1</span>
          
          <code class="ruby">    current_user.update_attribute(:notification_list, Array.new)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="277">
          <span class="hits">1</span>
          
          <code class="ruby">    respond(SUCCESS)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="278">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="279">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="280">
          <span class="hits">1</span>
          
          <code class="ruby">  private</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="281">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="282">
          
          
          <code class="ruby">  # Responds. Always includes err_code set to ERROR (SUCCESS by default).</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="283">
          
          
          <code class="ruby">  # Additional response fields can be passed as a hash to ADDITIONAL.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="284">
          <span class="hits">1</span>
          
          <code class="ruby">  def respond(error = SUCCESS, additional = {})</code>
        </li>
      
        <li class="covered" data-hits="50" data-linenumber="285">
          <span class="hits">50</span>
          
          <code class="ruby">    response = { err_code: error }.merge(additional)</code>
        </li>
      
        <li class="covered" data-hits="50" data-linenumber="286">
          <span class="hits">50</span>
          
          <code class="ruby">    respond_to do |format|</code>
        </li>
      
        <li class="covered" data-hits="86" data-linenumber="287">
          <span class="hits">86</span>
          
          <code class="ruby">      format.html { render json: response, content_type: &quot;application/json&quot; }</code>
        </li>
      
        <li class="covered" data-hits="64" data-linenumber="288">
          <span class="hits">64</span>
          
          <code class="ruby">      format.json { render json: response, content_type: &quot;application/json&quot; }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="289">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="290">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="291">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="292">
          <span class="hits">1</span>
          
          <code class="ruby">  def session_fail_response</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="293">
          
          
          <code class="ruby">    response = { err_code: ERR_INVALID_SESSION }</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="294">
          
          
          <code class="ruby">    respond_to do |format|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="295">
          
          
          <code class="ruby">      format.html { render json: response, content_type: &quot;application/json&quot; }</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="296">
          
          
          <code class="ruby">      format.json { render json: response, content_type: &quot;application/json&quot; }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="297">
          
          
          <code class="ruby">    end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="298">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="299">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="300">
          
          
          <code class="ruby">  # Checks to see if there is a signed in user</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="301">
          <span class="hits">1</span>
          
          <code class="ruby">  def signed_in?</code>
        </li>
      
        <li class="covered" data-hits="38" data-linenumber="302">
          <span class="hits">38</span>
          
          <code class="ruby">  	!current_user.nil?</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="303">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="304">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="305">
          
          
          <code class="ruby">  # Sets the current_user to a user</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="306">
          <span class="hits">1</span>
          
          <code class="ruby">  def current_user=(user)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="307">
          
          
          <code class="ruby">  	@current_user = user</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="308">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="309">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="310">
          
          
          <code class="ruby">  # Finds the User with the remember_token stored in the session with the key :current_user_token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="311">
          
          
          <code class="ruby">  # Logging in sets the session value and logging out removes it.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="312">
          <span class="hits">1</span>
          
          <code class="ruby">  def current_user</code>
        </li>
      
        <li class="covered" data-hits="78" data-linenumber="313">
          <span class="hits">78</span>
          
          <code class="ruby">  	token = User.hash(cookies[:current_user_token])</code>
        </li>
      
        <li class="covered" data-hits="78" data-linenumber="314">
          <span class="hits">78</span>
          
          <code class="ruby">  	@current_user ||= User.find_by(remember_token: token)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="315">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="316">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="317">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="6246dc083506622a592868bab3c3d59dbc40f898">
  <div class="header">
    <h3>app/helpers/application_helper.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">module ApplicationHelper</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="31844e57e4fce977f6021e6d678ac92591f91c39">
  <div class="header">
    <h3>app/helpers/events_helper.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">module EventsHelper</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="829b93b262c07eeeae30b730012a7d282895cf4a">
  <div class="header">
    <h3>app/helpers/groups_helper.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">module GroupsHelper</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="42538fcec53438db8a6588ca5b276b0991cb66d8">
  <div class="header">
    <h3>app/helpers/users_helper.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">module UsersHelper</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="dd04a3dbb19ebeb4e89007e549758a9632a68ce8">
  <div class="header">
    <h3>app/models/event.rb</h3>
    <h4><span class="green">94.05 %</span> covered</h4>
    <div>
      <b>168</b> relevant lines. 
      <span class="green"><b>158</b> lines covered</span> and
      <span class="red"><b>10</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;EventNotification&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;FriendNotification&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;ConditionNotification&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;NoCondition&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">class Event &lt; ActiveRecord::Base</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="8">
          <span class="hits">1</span>
          
          <code class="ruby">	NAME_MAX_LENGTH = 40</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby">	# Have Rails automatically serialize the hash for storage.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="10">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :party_list, Hash</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="11">
          <span class="hits">1</span>
          
          <code class="ruby">	validates :name, { presence: true, length: {maximum: NAME_MAX_LENGTH} }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
          <code class="ruby">	validates :admin, presence: true</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="13">
          <span class="hits">1</span>
          
          <code class="ruby">	validates :party_list, presence: true</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="14">
          <span class="hits">1</span>
          
          <code class="ruby">	validates :time, presence: true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby">	# Validates the event. Checks to ensure that all of the fields of</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="17">
          
          
          <code class="ruby">	# the event are valid. Returns SUCCESS if they are. Else, returns</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">	# ERR_INVALID_NAME, ERR_INVALID_TIME, or ERR_INVALID_FIELD.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="19">
          <span class="hits">1</span>
          
          <code class="ruby">	def is_valid?</code>
        </li>
      
        <li class="covered" data-hits="108" data-linenumber="20">
          <span class="hits">108</span>
          
          <code class="ruby">		return ERR_INVALID_NAME if name.blank? || name.length &gt; NAME_MAX_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="105" data-linenumber="21">
          <span class="hits">105</span>
          
          <code class="ruby">		return ERR_INVALID_TIME if time.blank? || Time.at(time).to_datetime.past?</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby">		# NOTE: For future iteration, allow time a few minutes in the past to allow for possible time lags</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="100" data-linenumber="25">
          <span class="hits">100</span>
          
          <code class="ruby">		return ERR_INVALID_FIELD if (admin.blank? || party_list.blank? || !party_list.is_a?(Hash))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="98" data-linenumber="27">
          <span class="hits">98</span>
          
          <code class="ruby">		return ERR_INVALID_FIELD if not party_list.has_key?(admin)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="97" data-linenumber="29">
          <span class="hits">97</span>
          
          <code class="ruby">		party_list.each do |key, value|</code>
        </li>
      
        <li class="covered" data-hits="181" data-linenumber="30">
          <span class="hits">181</span>
          
          <code class="ruby">				return ERR_INVALID_FIELD if not value.is_a?(Hash)</code>
        </li>
      
        <li class="covered" data-hits="179" data-linenumber="31">
          <span class="hits">179</span>
          
          <code class="ruby">				return ERR_INVALID_FIELD if not value.has_key?(:status)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="32">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby">	</code>
        </li>
      
        <li class="covered" data-hits="95" data-linenumber="34">
          <span class="hits">95</span>
          
          <code class="ruby">		return SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="35">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="36">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="37">
          
          
          <code class="ruby">	# Creates a new event with the given parameters. list_of_users should</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="38">
          
          
          <code class="ruby">	# be a list of integer values corresponding to user IDs. time should</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="39">
          
          
          <code class="ruby">	# be an integer number of seconds since the Unix epoch. Also adds</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="40">
          
          
          <code class="ruby">	# the event to all of the users in list_of_users, and notifies them.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="41">
          
          
          <code class="ruby">	# Returns:</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="42">
          
          
          <code class="ruby">	#  * Error code ( &lt; 0 ) upon failure</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="43">
          
          
          <code class="ruby">	#  * ID of new Event ( &gt; 0 ) upon success</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="44">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.add_event(name, admin_id, time, user_list, description = &quot;&quot;, location = &quot;&quot;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="45">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="106" data-linenumber="46">
          <span class="hits">106</span>
          
          <code class="ruby">		return ERR_INVALID_FIELD if not user_list.respond_to?(&#39;each&#39;)</code>
        </li>
      
        <li class="covered" data-hits="105" data-linenumber="47">
          <span class="hits">105</span>
          
          <code class="ruby">		return ERR_INVALID_FIELD if not user_list.include?(admin_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="48">
          
          
          <code class="ruby">		</code>
        </li>
      
        <li class="covered" data-hits="102" data-linenumber="49">
          <span class="hits">102</span>
          
          <code class="ruby">		user_list.each do |user_id|</code>
        </li>
      
        <li class="covered" data-hits="183" data-linenumber="50">
          <span class="hits">183</span>
          
          <code class="ruby">			return ERR_INVALID_FIELD if not is_valid_user_id?(user_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="51">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="52">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="102" data-linenumber="53">
          <span class="hits">102</span>
          
          <code class="ruby">		description = &quot;&quot; if not description </code>
        </li>
      
        <li class="covered" data-hits="102" data-linenumber="54">
          <span class="hits">102</span>
          
          <code class="ruby">		location = &quot;&quot; if not location</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="55">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="102" data-linenumber="56">
          <span class="hits">102</span>
          
          <code class="ruby">		@event = Event.new(name: name, admin: admin_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="57">
          
          
          <code class="ruby">			description: description, location: location, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="58">
          
          
          <code class="ruby">			party_list: {}, time:time)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="59">
          
          
          <code class="ruby">	</code>
        </li>
      
        <li class="covered" data-hits="102" data-linenumber="60">
          <span class="hits">102</span>
          
          <code class="ruby">		@event.add_user_list(user_list, true)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="61">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="102" data-linenumber="62">
          <span class="hits">102</span>
          
          <code class="ruby">		validity = @event.is_valid?</code>
        </li>
      
        <li class="covered" data-hits="102" data-linenumber="63">
          <span class="hits">102</span>
          
          <code class="ruby">		return validity if validity &lt; 0</code>
        </li>
      
        <li class="covered" data-hits="94" data-linenumber="64">
          <span class="hits">94</span>
          
          <code class="ruby">		success = @event.save</code>
        </li>
      
        <li class="covered" data-hits="94" data-linenumber="65">
          <span class="hits">94</span>
          
          <code class="ruby">		return ERR_UNSUCCESSFUL if !success</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="66">
          
          
          <code class="ruby">		</code>
        </li>
      
        <li class="covered" data-hits="94" data-linenumber="67">
          <span class="hits">94</span>
          
          <code class="ruby">		@event.set_user_status(admin_id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="68">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="94" data-linenumber="69">
          <span class="hits">94</span>
          
          <code class="ruby">		@event.add_to_user_event_lists(user_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="70">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="94" data-linenumber="71">
          <span class="hits">94</span>
          
          <code class="ruby">		@event.notify( EventNotification.new(NOTIF_NEW_EVENT, @event),</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="72">
          
          
          <code class="ruby">			user_list )</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="73">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="94" data-linenumber="74">
          <span class="hits">94</span>
          
          <code class="ruby">		return @event.id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="75">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="76">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="77">
          
          
          <code class="ruby">	# Edits self, according to the new information given in event_info_hash. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="78">
          
          
          <code class="ruby">	# Valid keys are :name, :time, :description, :location.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="79">
          
          
          <code class="ruby">	# Returns ERR_INVALID_NAME or ERR_INVALID_TIME if those fields</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="80">
          
          
          <code class="ruby">	# are invalid, else returns SUCCESS.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="81">
          <span class="hits">1</span>
          
          <code class="ruby">	def edit_event(event_info_hash) </code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="82">
          <span class="hits">6</span>
          
          <code class="ruby">		if event_info_hash.has_key?(:name)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="83">
          <span class="hits">3</span>
          
          <code class="ruby">			new_name = event_info_hash[:name]</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="84">
          <span class="hits">3</span>
          
          <code class="ruby">			return ERR_INVALID_NAME if new_name.blank? || new_name.length &gt; NAME_MAX_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="85">
          <span class="hits">1</span>
          
          <code class="ruby">			self.name = new_name</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="86">
          <span class="hits">1</span>
          
          <code class="ruby">			self.update_attribute(:name, new_name)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="87">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="88">
          <span class="hits">4</span>
          
          <code class="ruby">		if event_info_hash.has_key?(:time)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="89">
          <span class="hits">4</span>
          
          <code class="ruby">			new_time = event_info_hash[:time].to_i</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="90">
          <span class="hits">4</span>
          
          <code class="ruby">			return ERR_INVALID_TIME if new_time.blank? || Time.at(new_time).to_datetime.past?</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="91">
          <span class="hits">2</span>
          
          <code class="ruby">			self.time = new_time</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="92">
          <span class="hits">2</span>
          
          <code class="ruby">			self.update_attribute(:time, new_time)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="93">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="94">
          <span class="hits">2</span>
          
          <code class="ruby">		if event_info_hash.has_key?(:description)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="95">
          <span class="hits">1</span>
          
          <code class="ruby">			self.description = event_info_hash[:description]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="96">
          <span class="hits">1</span>
          
          <code class="ruby">			self.update_attribute(:description, self.description)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="97">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="98">
          <span class="hits">2</span>
          
          <code class="ruby">		if event_info_hash.has_key?(:location)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="99">
          <span class="hits">2</span>
          
          <code class="ruby">			self.location = event_info_hash[:location]</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="100">
          <span class="hits">2</span>
          
          <code class="ruby">			self.update_attribute(:location, self.location)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="101">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="102">
          <span class="hits">2</span>
          
          <code class="ruby">		return SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="103">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="104">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="105">
          
          
          <code class="ruby">	# Checks if the user is listed as an admin for this event.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="106">
          <span class="hits">1</span>
          
          <code class="ruby">	def is_admin?(user_id)</code>
        </li>
      
        <li class="covered" data-hits="21" data-linenumber="107">
          <span class="hits">21</span>
          
          <code class="ruby">		return admin == user_id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="108">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="109">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="110">
          
          
          <code class="ruby">	# Adds user_list to the party_list for this event.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="111">
          
          
          <code class="ruby">	# If skip_attribute_update = true, doesn&#39;t update the attribute</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="112">
          
          
          <code class="ruby">	# within the databse (should probably only be used in add_event)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="113">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_user_list(user_list, skip_attribute_update = false)</code>
        </li>
      
        <li class="covered" data-hits="118" data-linenumber="114">
          <span class="hits">118</span>
          
          <code class="ruby">		user_hash = {}</code>
        </li>
      
        <li class="covered" data-hits="118" data-linenumber="115">
          <span class="hits">118</span>
          
          <code class="ruby">		user_list.each do |user_id|</code>
        </li>
      
        <li class="covered" data-hits="220" data-linenumber="116">
          <span class="hits">220</span>
          
          <code class="ruby">			user_hash[user_id] = { status: STATUS_NO_RESPONSE, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="117">
          
          
          <code class="ruby">				condition: NoCondition.new.get_hash }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="118">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="118" data-linenumber="119">
          <span class="hits">118</span>
          
          <code class="ruby">		self.party_list.merge!(user_hash) { |key, old, new| old }</code>
        </li>
      
        <li class="covered" data-hits="118" data-linenumber="120">
          <span class="hits">118</span>
          
          <code class="ruby">		self.update_attribute(:party_list, self.party_list) if !skip_attribute_update</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="121">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="122">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="123">
          
          
          <code class="ruby">	# Add this event to the user list of all users in user_list</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="124">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_to_user_event_lists(user_list)</code>
        </li>
      
        <li class="covered" data-hits="110" data-linenumber="125">
          <span class="hits">110</span>
          
          <code class="ruby">		user_list.each do |users_id| </code>
        </li>
      
        <li class="covered" data-hits="212" data-linenumber="126">
          <span class="hits">212</span>
          
          <code class="ruby">			user = User.find(users_id)</code>
        </li>
      
        <li class="covered" data-hits="212" data-linenumber="127">
          <span class="hits">212</span>
          
          <code class="ruby">			user.add_event(self.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="128">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="129">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="130">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="131">
          
          
          <code class="ruby">	# Checks if there are currently any conditions which have been met.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="132">
          
          
          <code class="ruby">	# If there are, and the user is currently not attending, their status</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="133">
          
          
          <code class="ruby">	# is changed to attending and they are notified of the change.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="134">
          <span class="hits">1</span>
          
          <code class="ruby">	def check_conditions</code>
        </li>
      
        <li class="covered" data-hits="174" data-linenumber="135">
          <span class="hits">174</span>
          
          <code class="ruby">		clauses = Array.new</code>
        </li>
      
        <li class="covered" data-hits="174" data-linenumber="136">
          <span class="hits">174</span>
          
          <code class="ruby">		party_list.each do |uid, hash|</code>
        </li>
      
        <li class="covered" data-hits="527" data-linenumber="137">
          <span class="hits">527</span>
          
          <code class="ruby">			cond = hash[:condition]</code>
        </li>
      
        <li class="covered" data-hits="527" data-linenumber="138">
          <span class="hits">527</span>
          
          <code class="ruby">			if cond[:cond_type] != COND_NONE &amp;&amp; cond[:cond_met] == COND_MET</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="139">
          
          
          <code class="ruby">				clause.push({ operands: false, value: uid })</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="140">
          
          
          <code class="ruby">			elsif cond[:cond_type] == COND_NUM_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="70" data-linenumber="141">
          <span class="hits">70</span>
          
          <code class="ruby">				clauses.push({ operands: cond[:num_users], value: uid })</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="142">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="143">
          
          
          <code class="ruby">			elsif cond[:cond_type] == COND_USER_ATTENDING_ANY</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="144">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="58" data-linenumber="145">
          <span class="hits">58</span>
          
          <code class="ruby">				oper = Array.new</code>
        </li>
      
        <li class="covered" data-hits="133" data-linenumber="146">
          <span class="hits">133</span>
          
          <code class="ruby">				cond[:id_list].each { |id| oper.push(id)}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="147">
          
          
          <code class="ruby">				#cond[:user_list].each { |key, value| oper.push(value[:uid]) }</code>
        </li>
      
        <li class="covered" data-hits="58" data-linenumber="148">
          <span class="hits">58</span>
          
          <code class="ruby">				clauses.push({ operands: oper, value: uid })</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="149">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="150">
          
          
          <code class="ruby">			elsif cond[:cond_type] == COND_USER_ATTENDING_ALL</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="151">
          
          
          <code class="ruby">				#cond[:user_list].each do |count, table|</code>
        </li>
      
        <li class="covered" data-hits="47" data-linenumber="152">
          <span class="hits">47</span>
          
          <code class="ruby">				cond[:id_list].each do |id|</code>
        </li>
      
        <li class="covered" data-hits="88" data-linenumber="153">
          <span class="hits">88</span>
          
          <code class="ruby">					clauses.push({ operands: [id], value: uid})</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="154">
          
          
          <code class="ruby">					#clauses.push({ operands: [table[:uid]], value: uid })</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="155">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="156">
          
          
          <code class="ruby">			else</code>
        </li>
      
        <li class="covered" data-hits="352" data-linenumber="157">
          <span class="hits">352</span>
          
          <code class="ruby">				if hash[:status] == STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="200" data-linenumber="158">
          <span class="hits">200</span>
          
          <code class="ruby">					clauses.push({ operands: false, value: uid})</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="159">
          
          
          <code class="ruby">				else</code>
        </li>
      
        <li class="covered" data-hits="152" data-linenumber="160">
          <span class="hits">152</span>
          
          <code class="ruby">					clauses.push({ operands: true, value: uid})</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="161">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="162">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="163">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="174" data-linenumber="164">
          <span class="hits">174</span>
          
          <code class="ruby">		result = Event.compute_horn_formula(clauses)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="165">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="174" data-linenumber="166">
          <span class="hits">174</span>
          
          <code class="ruby">		result.each do |uid, value|</code>
        </li>
      
        <li class="covered" data-hits="527" data-linenumber="167">
          <span class="hits">527</span>
          
          <code class="ruby">			if party_list[uid][:condition][:cond_met] == COND_NOT_MET &amp;&amp; party_list[uid][:condition][:cond_type] != COND_NONE</code>
        </li>
      
        <li class="covered" data-hits="144" data-linenumber="168">
          <span class="hits">144</span>
          
          <code class="ruby">				complete_condition(uid, Condition.create_from_hash(party_list[uid][:condition])) if !value</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="169">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="170">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="171">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="172">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="173">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="174">
          
          
          <code class="ruby">	# solves horn formula</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="175">
          
          
          <code class="ruby">	# input clauses = [ { operands: [uid] || count, value: uid } ]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="176">
          
          
          <code class="ruby">	# returns hash of each value assigned to a satisfying boolean value</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="177">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.compute_horn_formula(clauses)</code>
        </li>
      
        <li class="covered" data-hits="175" data-linenumber="178">
          <span class="hits">175</span>
          
          <code class="ruby">		lookup = Hash.new</code>
        </li>
      
        <li class="covered" data-hits="175" data-linenumber="179">
          <span class="hits">175</span>
          
          <code class="ruby">		clauses.each do |clause| </code>
        </li>
      
        <li class="covered" data-hits="570" data-linenumber="180">
          <span class="hits">570</span>
          
          <code class="ruby">			lookup[clause[:value]] = false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="181">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="182">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="183">
          
          
          <code class="ruby">		begin</code>
        </li>
      
        <li class="covered" data-hits="327" data-linenumber="184">
          <span class="hits">327</span>
          
          <code class="ruby">			changed = false</code>
        </li>
      
        <li class="covered" data-hits="327" data-linenumber="185">
          <span class="hits">327</span>
          
          <code class="ruby">			falses = 0</code>
        </li>
      
        <li class="covered" data-hits="1343" data-linenumber="186">
          <span class="hits">1343</span>
          
          <code class="ruby">			lookup.each { |key, value| falses += 1 if !value}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="187">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="327" data-linenumber="188">
          <span class="hits">327</span>
          
          <code class="ruby">			clauses.each do |clause|</code>
        </li>
      
        <li class="covered" data-hits="1072" data-linenumber="189">
          <span class="hits">1072</span>
          
          <code class="ruby">				if lookup[clause[:value]]</code>
        </li>
      
        <li class="covered" data-hits="277" data-linenumber="190">
          <span class="hits">277</span>
          
          <code class="ruby">					next</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="191">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="192">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="795" data-linenumber="193">
          <span class="hits">795</span>
          
          <code class="ruby">				if clause[:operands].kind_of?(Integer)</code>
        </li>
      
        <li class="covered" data-hits="97" data-linenumber="194">
          <span class="hits">97</span>
          
          <code class="ruby">					lhs = (falses &lt; clause[:operands])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="195">
          
          
          <code class="ruby">				elsif clause[:operands].kind_of?(Array)</code>
        </li>
      
        <li class="covered" data-hits="181" data-linenumber="196">
          <span class="hits">181</span>
          
          <code class="ruby">					lhs = true</code>
        </li>
      
        <li class="covered" data-hits="386" data-linenumber="197">
          <span class="hits">386</span>
          
          <code class="ruby">					clause[:operands].each { |operand| lhs = lhs &amp;&amp; lookup[operand] }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="198">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="199">
          
          
          <code class="ruby">				else</code>
        </li>
      
        <li class="covered" data-hits="517" data-linenumber="200">
          <span class="hits">517</span>
          
          <code class="ruby">					lhs = clause[:operands]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="201">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="202">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="795" data-linenumber="203">
          <span class="hits">795</span>
          
          <code class="ruby">				if lhs != lookup[clause[:value]]</code>
        </li>
      
        <li class="covered" data-hits="205" data-linenumber="204">
          <span class="hits">205</span>
          
          <code class="ruby">					lookup[clause[:value]] = lhs</code>
        </li>
      
        <li class="covered" data-hits="205" data-linenumber="205">
          <span class="hits">205</span>
          
          <code class="ruby">					changed = true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="206">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="207">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="175" data-linenumber="208">
          <span class="hits">175</span>
          
          <code class="ruby">		end while changed</code>
        </li>
      
        <li class="covered" data-hits="175" data-linenumber="209">
          <span class="hits">175</span>
          
          <code class="ruby">		return lookup</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="210">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="211">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="212">
          
          
          <code class="ruby">	# Add a conditional acceptance for the given user.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="213">
          
          
          <code class="ruby">	# Does nothing if the user is not a member of this event.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="214">
          
          
          <code class="ruby">	# After adding the condition, checks if any conditions have been met</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="215">
          
          
          <code class="ruby">	# and takes appropriate action. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="216">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_condition(user_id, condition)</code>
        </li>
      
        <li class="covered" data-hits="34" data-linenumber="217">
          <span class="hits">34</span>
          
          <code class="ruby">		return if not party_list.has_key?(user_id)</code>
        </li>
      
        <li class="covered" data-hits="34" data-linenumber="218">
          <span class="hits">34</span>
          
          <code class="ruby">		party_list[user_id][:condition] = condition.get_hash</code>
        </li>
      
        <li class="covered" data-hits="34" data-linenumber="219">
          <span class="hits">34</span>
          
          <code class="ruby">		update_attribute(:party_list, party_list)</code>
        </li>
      
        <li class="covered" data-hits="34" data-linenumber="220">
          <span class="hits">34</span>
          
          <code class="ruby">		check_conditions</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="221">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="222">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="223">
          
          
          <code class="ruby">	# Removes the current conditional acceptance from this user.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="224">
          
          
          <code class="ruby">	# Does nothing if the user is not a member of the event or </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="225">
          
          
          <code class="ruby">	# if the user doesn&#39;t currently have any conditions.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="226">
          <span class="hits">1</span>
          
          <code class="ruby">	def remove_condition(user_id)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="227">
          <span class="hits">2</span>
          
          <code class="ruby">		return if not party_list.has_key?(user_id)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="228">
          <span class="hits">2</span>
          
          <code class="ruby">		party_list[user_id][:condition] = NoCondition.new.get_hash</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="229">
          <span class="hits">2</span>
          
          <code class="ruby">		update_attribute(:party_list, party_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="230">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="231">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="232">
          
          
          <code class="ruby">	# Cancels this event, removing it from all of it&#39;s associated</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="233">
          
          
          <code class="ruby">	# users. Does not actually delete the event -- should subsequently</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="234">
          
          
          <code class="ruby">	# call event.destroy to remove it from the database. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="235">
          <span class="hits">1</span>
          
          <code class="ruby">	def cancel_self</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="236">
          <span class="hits">3</span>
          
          <code class="ruby">		party_list.each_key { |user_id| User.find(user_id).delete_event(self.id) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="237">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="238">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="239">
          
          
          <code class="ruby">	# Removes user_id from the event. Does nothing if </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="240">
          
          
          <code class="ruby">	# the user isn&#39;t currently in the event, or if</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="241">
          
          
          <code class="ruby">	# the admin attempts to remove itself. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="242">
          <span class="hits">1</span>
          
          <code class="ruby">	def remove_user(user_id)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="243">
          <span class="hits">2</span>
          
          <code class="ruby">		return if is_admin?(user_id)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="244">
          <span class="hits">2</span>
          
          <code class="ruby">		party_list.delete(user_id)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="245">
          <span class="hits">2</span>
          
          <code class="ruby">		self.update_attribute(:party_list, party_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="246">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="247">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="248">
          
          
          <code class="ruby">	# Returns the user&#39;s status for this event: STATUS_ATTENDING,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="249">
          
          
          <code class="ruby">	# STATUS_NOT_ATTENDING, STATUS_NO_RESPONSE. Returns nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="250">
          
          
          <code class="ruby">	# if the user is not a part of this event.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="251">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_user_status(user_id)</code>
        </li>
      
        <li class="covered" data-hits="182" data-linenumber="252">
          <span class="hits">182</span>
          
          <code class="ruby">		return nil if not party_list[user_id]</code>
        </li>
      
        <li class="covered" data-hits="173" data-linenumber="253">
          <span class="hits">173</span>
          
          <code class="ruby">		return party_list[user_id][:status]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="254">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="255">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="256">
          
          
          <code class="ruby">	# Sets the user&#39;s status for this event. Does nothing if user_id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="257">
          
          
          <code class="ruby">	# is not a member of this event. Triggers a rechecking of all</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="258">
          
          
          <code class="ruby">	# user conditions to check if any new conditions are met as a result</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="259">
          
          
          <code class="ruby">	# of this status change. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="260">
          <span class="hits">1</span>
          
          <code class="ruby">	def set_user_status(user_id, new_status)</code>
        </li>
      
        <li class="covered" data-hits="140" data-linenumber="261">
          <span class="hits">140</span>
          
          <code class="ruby">		party_list[user_id][:status] = new_status if party_list.has_key?(user_id)</code>
        </li>
      
        <li class="covered" data-hits="140" data-linenumber="262">
          <span class="hits">140</span>
          
          <code class="ruby">		self.update_attribute(:party_list, party_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="263">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="140" data-linenumber="264">
          <span class="hits">140</span>
          
          <code class="ruby">		check_conditions</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="265">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="266">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="267">
          
          
          <code class="ruby">	# Notifies the users within user_list using NOTIFICATION. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="268">
          
          
          <code class="ruby">	# If user_list isn&#39;t specified, uses party_list (all users).</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="269">
          
          
          <code class="ruby">	# Skips the admin either way (any notification should be generated</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="270">
          
          
          <code class="ruby">	# by the admin).</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="271">
          <span class="hits">1</span>
          
          <code class="ruby">	def notify(notification, user_list = nil)</code>
        </li>
      
        <li class="covered" data-hits="126" data-linenumber="272">
          <span class="hits">126</span>
          
          <code class="ruby">		if not user_list</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="273">
          
          
          <code class="ruby">			party_list.each_key do |key|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="274">
          
          
          <code class="ruby">				next if key == admin</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="275">
          
          
          <code class="ruby">				begin </code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="276">
          
          
          <code class="ruby">					user = User.find(key)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="277">
          
          
          <code class="ruby">				rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="278">
          
          
          <code class="ruby">					next</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="279">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="280">
          
          
          <code class="ruby">				notification.send_push(user)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="281">
          
          
          <code class="ruby">				user.post_notification(notification)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="282">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="283">
          
          
          <code class="ruby">		else</code>
        </li>
      
        <li class="covered" data-hits="126" data-linenumber="284">
          <span class="hits">126</span>
          
          <code class="ruby">			user_list.each do |key|</code>
        </li>
      
        <li class="covered" data-hits="208" data-linenumber="285">
          <span class="hits">208</span>
          
          <code class="ruby">				next if key == admin</code>
        </li>
      
        <li class="covered" data-hits="114" data-linenumber="286">
          <span class="hits">114</span>
          
          <code class="ruby">				begin </code>
        </li>
      
        <li class="covered" data-hits="114" data-linenumber="287">
          <span class="hits">114</span>
          
          <code class="ruby">					user = User.find(key)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="288">
          
          
          <code class="ruby">				rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="289">
          
          
          <code class="ruby">					next</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="290">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="114" data-linenumber="291">
          <span class="hits">114</span>
          
          <code class="ruby">				notification.send_push(user)</code>
        </li>
      
        <li class="covered" data-hits="114" data-linenumber="292">
          <span class="hits">114</span>
          
          <code class="ruby">				user.post_notification(notification)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="293">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="294">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="295">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="296">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="297">
          
          
          <code class="ruby">	# Returns a hash with all of the relevant information for this event.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="298">
          
          
          <code class="ruby">	# { $event: eventID, $title: event_name, $creator: event_creator,  </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="299">
          
          
          <code class="ruby">	#   $time: time, $location: location, $description: description,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="300">
          
          
          <code class="ruby">	#   $users: user_list }  </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="301">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="covered" data-hits="26" data-linenumber="302">
          <span class="hits">26</span>
          
          <code class="ruby">		user_list = {}</code>
        </li>
      
        <li class="covered" data-hits="26" data-linenumber="303">
          <span class="hits">26</span>
          
          <code class="ruby">		user_count = 0</code>
        </li>
      
        <li class="covered" data-hits="26" data-linenumber="304">
          <span class="hits">26</span>
          
          <code class="ruby">		party_list.each do |key, value|</code>
        </li>
      
        <li class="covered" data-hits="47" data-linenumber="305">
          <span class="hits">47</span>
          
          <code class="ruby">			user_count += 1</code>
        </li>
      
        <li class="covered" data-hits="47" data-linenumber="306">
          <span class="hits">47</span>
          
          <code class="ruby">			curr_user = User.find(key)</code>
        </li>
      
        <li class="covered" data-hits="47" data-linenumber="307">
          <span class="hits">47</span>
          
          <code class="ruby">			user_list[user_count] = { name: curr_user.name,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="308">
          
          
          <code class="ruby">					email: curr_user.email, status: value[:status] }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="309">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="26" data-linenumber="310">
          <span class="hits">26</span>
          
          <code class="ruby">		user_list[:user_count] = user_count</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="311">
          
          
          <code class="ruby">		{ event: self.id, title: name, creator: admin, </code>
        </li>
      
        <li class="covered" data-hits="26" data-linenumber="312">
          <span class="hits">26</span>
          
          <code class="ruby">			time: time, location: location, users: user_list, description: description}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="313">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="314">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="315">
          <span class="hits">1</span>
          
          <code class="ruby">	private</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="316">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="317">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="318">
          
          
          <code class="ruby">	# Method to change a user&#39;s status to STATUS_ATTENDING in this event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="319">
          
          
          <code class="ruby">	# due to an acceptance resulting from condition. Changes their status, sets</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="320">
          
          
          <code class="ruby">	# the condition as met, and notifies the user of the change. For internal </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="321">
          
          
          <code class="ruby">	# use by check_conditions to act on users whose conditions are met.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="322">
          
          
          <code class="ruby">	# Does nothing if the user&#39;s status was already STATUS_ATTENDING or</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="323">
          
          
          <code class="ruby">	# if the user is not present in the party_list</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="324">
          <span class="hits">1</span>
          
          <code class="ruby">	def complete_condition(user_id, condition)</code>
        </li>
      
        <li class="covered" data-hits="91" data-linenumber="325">
          <span class="hits">91</span>
          
          <code class="ruby">		return if not party_list.has_key?(user_id)</code>
        </li>
      
        <li class="covered" data-hits="91" data-linenumber="326">
          <span class="hits">91</span>
          
          <code class="ruby">		return if get_user_status(user_id) == STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="327">
          <span class="hits">30</span>
          
          <code class="ruby">		set_user_status(user_id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="328">
          <span class="hits">30</span>
          
          <code class="ruby">		condition.met</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="329">
          <span class="hits">30</span>
          
          <code class="ruby">		notif = ConditionNotification.new(NOTIF_COND_MET, self, condition)</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="330">
          <span class="hits">30</span>
          
          <code class="ruby">		notify(notif, [ user_id ])</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="331">
          <span class="hits">30</span>
          
          <code class="ruby">		party_list[user_id][:condition][:cond_met] = COND_MET</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="332">
          <span class="hits">30</span>
          
          <code class="ruby">		update_attribute(:party_list, party_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="333">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="334">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="335">
          
          
          <code class="ruby">	# Takes in a string, USER_ID, and checks if it is a valid </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="336">
          
          
          <code class="ruby">	# user id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="337">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.is_valid_user_id?(user_id)</code>
        </li>
      
        <li class="covered" data-hits="183" data-linenumber="338">
          <span class="hits">183</span>
          
          <code class="ruby">		begin </code>
        </li>
      
        <li class="covered" data-hits="183" data-linenumber="339">
          <span class="hits">183</span>
          
          <code class="ruby">			User.find(user_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="340">
          
          
          <code class="ruby">		rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="341">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="342">
          
          
          <code class="ruby">		end		</code>
        </li>
      
        <li class="covered" data-hits="183" data-linenumber="343">
          <span class="hits">183</span>
          
          <code class="ruby">		return true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="344">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="345">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="346">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="982e12b59f4bd6e424f1ce4667edb54003e05c00">
  <div class="header">
    <h3>app/models/group.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>59</b> relevant lines. 
      <span class="green"><b>59</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">class Group &lt; ActiveRecord::Base</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">	NAME_MAX_LENGTH = 40</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby">	# Have Rails automatically serialize the hash for storage.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :user_list, Array</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">	validates :name, { presence: true, length: {maximum: NAME_MAX_LENGTH} }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">	validates :user_list, presence: true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby">	# Validates the group. Checks to ensure that all of the fields of</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	# the group are valid. Returns SUCCESS if they are. Else, returns</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby">	# ERR_INVALID_NAME, or ERR_INVALID_FIELD.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
          <code class="ruby">	def is_valid?</code>
        </li>
      
        <li class="covered" data-hits="68" data-linenumber="13">
          <span class="hits">68</span>
          
          <code class="ruby">		return ERR_INVALID_NAME if name.blank? || name.length &gt; NAME_MAX_LENGTH</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="65" data-linenumber="15">
          <span class="hits">65</span>
          
          <code class="ruby">		return ERR_INVALID_FIELD if user_list.blank?</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="64" data-linenumber="17">
          <span class="hits">64</span>
          
          <code class="ruby">		return SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">	# Creates a new group with the given parameters. user_list should</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="21">
          
          
          <code class="ruby">	# be a list of integer values corresponding to user IDs. Also adds</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby">	# the group to all of the users in user_list.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby">	# Returns:</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby">	#  * Error code ( &lt; 0 ) upon failure</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby">	#  * ID of new Group ( &gt; 0 ) upon success</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="26">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.add_group(name, user_list, description = &quot;&quot;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="70" data-linenumber="28">
          <span class="hits">70</span>
          
          <code class="ruby">		return ERR_INVALID_FIELD if not user_list.respond_to?(&#39;each&#39;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby">		</code>
        </li>
      
        <li class="covered" data-hits="69" data-linenumber="30">
          <span class="hits">69</span>
          
          <code class="ruby">		user_list.each do |user_id|</code>
        </li>
      
        <li class="covered" data-hits="127" data-linenumber="31">
          <span class="hits">127</span>
          
          <code class="ruby">			return ERR_INVALID_FIELD if not is_valid_user_id?(user_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="32">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="68" data-linenumber="34">
          <span class="hits">68</span>
          
          <code class="ruby">		description = &quot;&quot; if not description</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="35">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="68" data-linenumber="36">
          <span class="hits">68</span>
          
          <code class="ruby">		@group = Group.new(name: name, description: description, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="37">
          
          
          <code class="ruby">			user_list: [])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="38">
          
          
          <code class="ruby">	</code>
        </li>
      
        <li class="covered" data-hits="68" data-linenumber="39">
          <span class="hits">68</span>
          
          <code class="ruby">		@group.add_user_list(user_list, true)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="40">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="68" data-linenumber="41">
          <span class="hits">68</span>
          
          <code class="ruby">		validity = @group.is_valid?</code>
        </li>
      
        <li class="covered" data-hits="68" data-linenumber="42">
          <span class="hits">68</span>
          
          <code class="ruby">		return validity if validity &lt; 0</code>
        </li>
      
        <li class="covered" data-hits="64" data-linenumber="43">
          <span class="hits">64</span>
          
          <code class="ruby">		success = @group.save</code>
        </li>
      
        <li class="covered" data-hits="64" data-linenumber="44">
          <span class="hits">64</span>
          
          <code class="ruby">		return ERR_UNSUCCESSFUL if !success</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="45">
          
          
          <code class="ruby">		</code>
        </li>
      
        <li class="covered" data-hits="64" data-linenumber="46">
          <span class="hits">64</span>
          
          <code class="ruby">		@group.add_to_user_group_lists(user_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="47">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="64" data-linenumber="48">
          <span class="hits">64</span>
          
          <code class="ruby">		return @group.id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="49">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="50">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="51">
          
          
          <code class="ruby">	# Edits self, according to the new information given in group_info_hash. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="52">
          
          
          <code class="ruby">	# Valid keys are :name and :description</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="53">
          
          
          <code class="ruby">	# Returns ERR_INVALID_NAME if the name is invalid, else SUCCESS.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="54">
          <span class="hits">1</span>
          
          <code class="ruby">	def edit_group(group_info_hash) </code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="55">
          <span class="hits">4</span>
          
          <code class="ruby">		if group_info_hash.has_key?(:name)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="56">
          <span class="hits">4</span>
          
          <code class="ruby">			new_name = group_info_hash[:name]</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="57">
          <span class="hits">4</span>
          
          <code class="ruby">			return ERR_INVALID_NAME if new_name.blank? || new_name.length &gt; NAME_MAX_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="58">
          <span class="hits">2</span>
          
          <code class="ruby">			self.name = new_name</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="59">
          <span class="hits">2</span>
          
          <code class="ruby">			self.update_attribute(:name, new_name)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="60">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="61">
          <span class="hits">2</span>
          
          <code class="ruby">		if group_info_hash.has_key?(:description)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="62">
          <span class="hits">1</span>
          
          <code class="ruby">			self.description = group_info_hash[:description]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="63">
          <span class="hits">1</span>
          
          <code class="ruby">			self.update_attribute(:description, self.description)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="64">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="65">
          <span class="hits">2</span>
          
          <code class="ruby">		return SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="66">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="67">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="68">
          
          
          <code class="ruby">	# Adds user_list to the user_list for this group.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="69">
          
          
          <code class="ruby">	# If skip_attribute_update = true, doesn&#39;t update the attribute</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="70">
          
          
          <code class="ruby">	# within the database (should probably only be used in add_group)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="71">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_user_list(user_list, skip_attribute_update = false)</code>
        </li>
      
        <li class="covered" data-hits="70" data-linenumber="72">
          <span class="hits">70</span>
          
          <code class="ruby">		self.user_list |= user_list</code>
        </li>
      
        <li class="covered" data-hits="70" data-linenumber="73">
          <span class="hits">70</span>
          
          <code class="ruby">		self.update_attribute(:user_list, self.user_list) if !skip_attribute_update</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="74">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="75">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="76">
          
          
          <code class="ruby">	# Add this group to the group list of all users in user_list</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="77">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_to_user_group_lists(user_list)</code>
        </li>
      
        <li class="covered" data-hits="66" data-linenumber="78">
          <span class="hits">66</span>
          
          <code class="ruby">		user_list.each do |users_id| </code>
        </li>
      
        <li class="covered" data-hits="124" data-linenumber="79">
          <span class="hits">124</span>
          
          <code class="ruby">			user = User.find(users_id)</code>
        </li>
      
        <li class="covered" data-hits="124" data-linenumber="80">
          <span class="hits">124</span>
          
          <code class="ruby">			user.add_group(self.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="81">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="82">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="83">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="84">
          
          
          <code class="ruby">	# Deletes this group, removing it from all of it&#39;s associated</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="85">
          
          
          <code class="ruby">	# users. Does not actually delete the group -- should subsequently</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="86">
          
          
          <code class="ruby">	# call group.destroy to remove it from the database. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="87">
          <span class="hits">1</span>
          
          <code class="ruby">	def delete_self</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="88">
          <span class="hits">3</span>
          
          <code class="ruby">		user_list.each { |uid| User.find(uid).delete_group(self.id) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="89">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="90">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="91">
          
          
          <code class="ruby">	# Removes user_id from the group. Does nothing if </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="92">
          
          
          <code class="ruby">	# the user isn&#39;t currently in the group.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="93">
          <span class="hits">1</span>
          
          <code class="ruby">	def remove_user(user_id)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="94">
          <span class="hits">3</span>
          
          <code class="ruby">		user_list.delete(user_id)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="95">
          <span class="hits">3</span>
          
          <code class="ruby">		self.update_attribute(:user_list, user_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="96">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="97">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="98">
          
          
          <code class="ruby">	# Returns a hash with all of the relevant information for this group.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="99">
          
          
          <code class="ruby">	# { $group: groupID, $name: group_name, $description: </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="100">
          
          
          <code class="ruby">	#    group_description, $users: user_list }  </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="101">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="covered" data-hits="19" data-linenumber="102">
          <span class="hits">19</span>
          
          <code class="ruby">		user_list_out = {}</code>
        </li>
      
        <li class="covered" data-hits="19" data-linenumber="103">
          <span class="hits">19</span>
          
          <code class="ruby">		user_count = 0</code>
        </li>
      
        <li class="covered" data-hits="19" data-linenumber="104">
          <span class="hits">19</span>
          
          <code class="ruby">		user_list.each do |uid|</code>
        </li>
      
        <li class="covered" data-hits="36" data-linenumber="105">
          <span class="hits">36</span>
          
          <code class="ruby">			user_count += 1</code>
        </li>
      
        <li class="covered" data-hits="36" data-linenumber="106">
          <span class="hits">36</span>
          
          <code class="ruby">			curr_user = User.find(uid)</code>
        </li>
      
        <li class="covered" data-hits="36" data-linenumber="107">
          <span class="hits">36</span>
          
          <code class="ruby">			user_list_out[user_count] = curr_user.get_hash</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="108">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="19" data-linenumber="109">
          <span class="hits">19</span>
          
          <code class="ruby">		user_list_out[:user_count] = user_count</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="110">
          
          
          <code class="ruby">		{ group: self.id, name: name, </code>
        </li>
      
        <li class="covered" data-hits="19" data-linenumber="111">
          <span class="hits">19</span>
          
          <code class="ruby">			users: user_list_out, description: description}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="112">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="113">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="114">
          <span class="hits">1</span>
          
          <code class="ruby">	private</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="115">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="116">
          
          
          <code class="ruby">	# Takes in a string, USER_ID, and checks if it is a valid </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="117">
          
          
          <code class="ruby">	# user id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="118">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.is_valid_user_id?(user_id)</code>
        </li>
      
        <li class="covered" data-hits="127" data-linenumber="119">
          <span class="hits">127</span>
          
          <code class="ruby">		begin </code>
        </li>
      
        <li class="covered" data-hits="127" data-linenumber="120">
          <span class="hits">127</span>
          
          <code class="ruby">			User.find(user_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="121">
          
          
          <code class="ruby">		rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="122">
          <span class="hits">1</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="123">
          
          
          <code class="ruby">		end		</code>
        </li>
      
        <li class="covered" data-hits="126" data-linenumber="124">
          <span class="hits">126</span>
          
          <code class="ruby">		return true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="125">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="126">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="127">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="f1fba9c8e71d8d07e5b92b181191fe7faa7f0572">
  <div class="header">
    <h3>app/models/user.rb</h3>
    <h4><span class="yellow">88.89 %</span> covered</h4>
    <div>
      <b>108</b> relevant lines. 
      <span class="green"><b>96</b> lines covered</span> and
      <span class="red"><b>12</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;EventNotification&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;FriendNotification&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># Class for modeling the user of app</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">class User &lt; ActiveRecord::Base</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">	# callback to force email to lowercase for uniqueness</code>
        </li>
      
        <li class="covered" data-hits="1167" data-linenumber="7">
          <span class="hits">1167</span>
          
          <code class="ruby">	before_save { self.email = email.downcase }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby">	# validates the uniqueness of the email address, disregarding lettercase</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="9">
          <span class="hits">1</span>
          
          <code class="ruby">	validates :email, uniqueness: { case_sensitive: false }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	# method call to return hashed password_digest from password to be stored in db</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby">	#     validation off for empty password and password_confirmation (password_confirmation designed to be done in frontend)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
          <code class="ruby">	has_secure_password validations: false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby">	# Serialize friend_list (array) for easy storage.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="15">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :friend_list, Array</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby">	# Serialize event_list (array) for easy storage.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="17">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :event_list, Array</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">	# Serialize notification_list (array of hashes) for easy storage.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="19">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :notification_list, Array</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">	# Serialize group list (array) for easy storage.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :group_list, Array</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby">	# Serialize the list of device_tokens (array) for easy storage</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="23">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :device_tokens, Array</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby"> 	# The maximum length of any user credential field</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="26">
          <span class="hits">1</span>
          
          <code class="ruby">  	MAX_CREDENTIAL_LENGTH = 128</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby">  	# The minimum length of password field</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="28">
          <span class="hits">1</span>
          
          <code class="ruby">  	MIN_PW_LENGTH = 6</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby">  	# name format only contains letter or whitespace characters</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="30">
          <span class="hits">1</span>
          
          <code class="ruby">	VALID_NAME_REGEX = /\A[a-zA-z\.&#39;]+(\s[a-zA-z\.&#39;]+)*\z/</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="31">
          
          
          <code class="ruby">	# email format is [word characters and dashes][@][domain]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="32">
          <span class="hits">1</span>
          
          <code class="ruby">	VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
          
          
          <code class="ruby">	# Function checks that the user does not exist, the user name, email, and password format is correct</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="35">
          
          
          <code class="ruby">	# * On success the function generates unique_id and remember_token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="36">
          
          
          <code class="ruby">	# * On success the function adds a row to the DB</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="37">
          
          
          <code class="ruby">	# * On success return code SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="38">
          
          
          <code class="ruby">	# * On failure return an error code (&lt;0): ERR_INVALID_NAME, ERR_INVALID_EMAIL, ERR_EMAIL_TAKEN, ERR_INVALID_PASSWORD</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="39">
          <span class="hits">1</span>
          
          <code class="ruby">	def add</code>
        </li>
      
        <li class="covered" data-hits="372" data-linenumber="40">
          <span class="hits">372</span>
          
          <code class="ruby">		return ERR_INVALID_NAME if not name_valid?</code>
        </li>
      
        <li class="covered" data-hits="366" data-linenumber="41">
          <span class="hits">366</span>
          
          <code class="ruby">		return ERR_INVALID_EMAIL if not email_valid?</code>
        </li>
      
        <li class="covered" data-hits="364" data-linenumber="42">
          <span class="hits">364</span>
          
          <code class="ruby">		return ERR_INVALID_PASSWORD if not password_valid?</code>
        </li>
      
        <li class="covered" data-hits="362" data-linenumber="43">
          <span class="hits">362</span>
          
          <code class="ruby">		return ERR_EMAIL_TAKEN if not email_available?</code>
        </li>
      
        <li class="covered" data-hits="360" data-linenumber="44">
          <span class="hits">360</span>
          
          <code class="ruby">		create_remember_token</code>
        </li>
      
        <li class="covered" data-hits="360" data-linenumber="45">
          <span class="hits">360</span>
          
          <code class="ruby">		self.friend_list = Array.new</code>
        </li>
      
        <li class="covered" data-hits="360" data-linenumber="46">
          <span class="hits">360</span>
          
          <code class="ruby">		self.event_list = Array.new</code>
        </li>
      
        <li class="covered" data-hits="360" data-linenumber="47">
          <span class="hits">360</span>
          
          <code class="ruby">		self.notification_list = Array.new</code>
        </li>
      
        <li class="covered" data-hits="360" data-linenumber="48">
          <span class="hits">360</span>
          
          <code class="ruby">		self.save</code>
        </li>
      
        <li class="covered" data-hits="360" data-linenumber="49">
          <span class="hits">360</span>
          
          <code class="ruby">		SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="50">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="51">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="52">
          
          
          <code class="ruby">	# Function that checks if user :email is in db, then authenticates user: password against db password_digest</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="53">
          
          
          <code class="ruby">	# * On success returns { err_code: SUCCESS, user: db_result }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="54">
          
          
          <code class="ruby">	# * On failture returns { err_code: ERR_BAD_CREDENTIALS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="55">
          <span class="hits">1</span>
          
          <code class="ruby">	def login</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="56">
          <span class="hits">6</span>
          
          <code class="ruby">		db_result = self.class.find_by(email: self.email.downcase)</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="57">
          <span class="hits">6</span>
          
          <code class="ruby">		return { err_code: ERR_BAD_CREDENTIALS } if db_result == nil || !db_result.authenticate(self.password)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="58">
          <span class="hits">3</span>
          
          <code class="ruby">		{ err_code: SUCCESS, user: db_result }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="59">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="60">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="61">
          
          
          <code class="ruby">	# Finds user Friend via friend_email. If valid, adds Friend.id to self.friend_list and sorts the friend_list.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="62">
          
          
          <code class="ruby">	# * On success also posts FriendNotification to Friend</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="63">
          <span class="hits">1</span>
          
          <code class="ruby">	def concat_friend(friend_email)</code>
        </li>
      
        <li class="covered" data-hits="19" data-linenumber="64">
          <span class="hits">19</span>
          
          <code class="ruby">		friend = self.class.find_by(email: friend_email.downcase)</code>
        </li>
      
        <li class="covered" data-hits="19" data-linenumber="65">
          <span class="hits">19</span>
          
          <code class="ruby">		return ERR_UNSUCCESSFUL if friend == nil</code>
        </li>
      
        <li class="covered" data-hits="17" data-linenumber="66">
          <span class="hits">17</span>
          
          <code class="ruby">		if !self.friend_list.include?(friend.id)</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="67">
          <span class="hits">16</span>
          
          <code class="ruby">			self.friend_list = (self.friend_list &lt;&lt; friend.id)</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="68">
          <span class="hits">16</span>
          
          <code class="ruby">			self.update_attribute(:friend_list, self.friend_list)</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="69">
          <span class="hits">16</span>
          
          <code class="ruby">			notif = FriendNotification.new(self)</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="70">
          <span class="hits">16</span>
          
          <code class="ruby">			friend.post_notification(notif)</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="71">
          <span class="hits">16</span>
          
          <code class="ruby">			notif.send_push(friend)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="72">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="17" data-linenumber="73">
          <span class="hits">17</span>
          
          <code class="ruby">		SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="74">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="75">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="76">
          
          
          <code class="ruby">	# Finds user Friend via friend_email. If valid, delete Friend.id in self.friend_list.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="77">
          <span class="hits">1</span>
          
          <code class="ruby">	def remove_friend(friend_email)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="78">
          <span class="hits">2</span>
          
          <code class="ruby">		friend = self.class.find_by(email: friend_email.downcase)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="79">
          <span class="hits">2</span>
          
          <code class="ruby">		if friend != nil</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="80">
          <span class="hits">1</span>
          
          <code class="ruby">			self.friend_list.delete(friend.id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="81">
          <span class="hits">1</span>
          
          <code class="ruby">			self.update_attribute(:friend_list, self.friend_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="82">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="83">
          <span class="hits">2</span>
          
          <code class="ruby">		SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="84">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="85">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="86">
          
          
          <code class="ruby">	# Adds event_id into the user&#39;s list of events. Returns </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="87">
          
          
          <code class="ruby">	# ERR_UNSUCCESSFUL if the event is invalid, SUCCESS otherwise. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="88">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_event(event_id)</code>
        </li>
      
        <li class="covered" data-hits="216" data-linenumber="89">
          <span class="hits">216</span>
          
          <code class="ruby">		return ERR_UNSUCCESSFUL if not Event.exists?(event_id)</code>
        </li>
      
        <li class="covered" data-hits="216" data-linenumber="90">
          <span class="hits">216</span>
          
          <code class="ruby">		self.event_list |= [event_id]</code>
        </li>
      
        <li class="covered" data-hits="216" data-linenumber="91">
          <span class="hits">216</span>
          
          <code class="ruby">		self.update_attribute(:event_list, self.event_list)</code>
        </li>
      
        <li class="covered" data-hits="216" data-linenumber="92">
          <span class="hits">216</span>
          
          <code class="ruby">		SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="93">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="94">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="95">
          
          
          <code class="ruby">	# Adds the device_token into the user&#39;s list of devices. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="96">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_device_token(device_token)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="97">
          <span class="hits">1</span>
          
          <code class="ruby">		self.device_tokens |= [device_token]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="98">
          <span class="hits">1</span>
          
          <code class="ruby">		self.update_attribute(:device_tokens, self.device_tokens)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="99">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="100">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="101">
          
          
          <code class="ruby">	# Removes the device_token from the user&#39;s list of devices.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="102">
          
          
          <code class="ruby">	# Does nothing if that device_token isn&#39;t in the list.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="103">
          <span class="hits">1</span>
          
          <code class="ruby">	def remove_device_token(device_token)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="104">
          
          
          <code class="ruby">		self.device_tokens.delete(device_token)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="105">
          
          
          <code class="ruby">		self.update_attribute(:device_tokens, self.device_tokens)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="106">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="107">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="108">
          
          
          <code class="ruby">	# Removes event_id from the user&#39;s list of events.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="109">
          <span class="hits">1</span>
          
          <code class="ruby">	def delete_event(event_id)</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="110">
          <span class="hits">7</span>
          
          <code class="ruby">		self.event_list.delete(event_id)</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="111">
          <span class="hits">7</span>
          
          <code class="ruby">		self.update_attribute(:event_list, self.event_list)</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="112">
          <span class="hits">7</span>
          
          <code class="ruby">		self.notification_list.delete_if do |notif|</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="113">
          <span class="hits">4</span>
          
          <code class="ruby">			notif.has_key?(:event) &amp;&amp; notif[:event] == event_id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="114">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="115">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="116">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="117">
          
          
          <code class="ruby">	# Adds group_id into the user&#39;s list of groups. Returns </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="118">
          
          
          <code class="ruby">	# ERR_UNSUCCESSFUL if the group is invalid, SUCCESS otherwise. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="119">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_group(group_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="120">
          
          
          <code class="ruby">		</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="121">
          
          
          <code class="ruby">		# ADD ERROR CHECKING HERE FOR INVALID GROUP -&gt; TEST</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="122">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="128" data-linenumber="123">
          <span class="hits">128</span>
          
          <code class="ruby">		self.group_list |= [group_id]</code>
        </li>
      
        <li class="covered" data-hits="128" data-linenumber="124">
          <span class="hits">128</span>
          
          <code class="ruby">		self.update_attribute(:group_list, self.group_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="125">
          
          
          <code class="ruby">		</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="126">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="127">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="128">
          
          
          <code class="ruby">	# Removes group_id from the user&#39;s list of groups.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="129">
          <span class="hits">1</span>
          
          <code class="ruby">	def delete_group(group_id)</code>
        </li>
      
        <li class="covered" data-hits="8" data-linenumber="130">
          <span class="hits">8</span>
          
          <code class="ruby">		self.group_list.delete(group_id)</code>
        </li>
      
        <li class="covered" data-hits="8" data-linenumber="131">
          <span class="hits">8</span>
          
          <code class="ruby">		self.update_attribute(:group_list, self.group_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="132">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="133">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="134">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="135">
          
          
          <code class="ruby">	# Changes the user&#39;s status (e.g. attending, declined) </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="136">
          
          
          <code class="ruby">	# within event_id. Does nothing if the event doesn&#39;t exist.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="137">
          <span class="hits">1</span>
          
          <code class="ruby">	def respond_event(event_id, new_status)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="138">
          
          
          <code class="ruby">		begin</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="139">
          
          
          <code class="ruby">			event = Event.find(event_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="140">
          
          
          <code class="ruby">		rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="141">
          
          
          <code class="ruby">			return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="142">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="143">
          
          
          <code class="ruby">		event.set_user_status(self.id, new_status)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="144">
          
          
          <code class="ruby">	end </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="145">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="146">
          
          
          <code class="ruby">	# Adds NOTIFICATION to the user&#39;s notification_list. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="147">
          <span class="hits">1</span>
          
          <code class="ruby">	def post_notification(notification)</code>
        </li>
      
        <li class="covered" data-hits="137" data-linenumber="148">
          <span class="hits">137</span>
          
          <code class="ruby">		self.update_attribute(:notification_list, self.notification_list &lt;&lt; notification.get_hash)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="149">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="150">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="151">
          
          
          <code class="ruby">	# Returns a hash containing this user&#39;s information: Name and Email.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="152">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="covered" data-hits="73" data-linenumber="153">
          <span class="hits">73</span>
          
          <code class="ruby">		return { name: self.name, email: self.email }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="154">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="155">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="156">
          
          
          <code class="ruby">	# Function that generates a unique remember_token, random string of base 64</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="157">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.new_token</code>
        </li>
      
        <li class="covered" data-hits="530" data-linenumber="158">
          <span class="hits">530</span>
          
          <code class="ruby">		token = loop do</code>
        </li>
      
        <li class="covered" data-hits="530" data-linenumber="159">
          <span class="hits">530</span>
          
          <code class="ruby">			random_token = SecureRandom.urlsafe_base64</code>
        </li>
      
        <li class="covered" data-hits="530" data-linenumber="160">
          <span class="hits">530</span>
          
          <code class="ruby">			break random_token unless User.exists?(remember_token: User.hash(random_token))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="161">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="530" data-linenumber="162">
          <span class="hits">530</span>
          
          <code class="ruby">		token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="163">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="164">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="165">
          
          
          <code class="ruby">	# Function that hashes the random token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="166">
          
          
          <code class="ruby">	# * Param: token </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="167">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.hash(token)</code>
        </li>
      
        <li class="covered" data-hits="1257" data-linenumber="168">
          <span class="hits">1257</span>
          
          <code class="ruby">		Digest::SHA1.hexdigest(token.to_s)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="169">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="170">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="171">
          <span class="hits">1</span>
          
          <code class="ruby">	private</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="172">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="173">
          
          
          <code class="ruby">	# Function that generates a hashed session token for user</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="174">
          <span class="hits">1</span>
          
          <code class="ruby">	def create_remember_token</code>
        </li>
      
        <li class="covered" data-hits="360" data-linenumber="175">
          <span class="hits">360</span>
          
          <code class="ruby">		self.remember_token = self.class.hash(User.new_token)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="176">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="177">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="178">
          
          
          <code class="ruby">  # Function that checks if name is formatted correctly</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="179">
          
          
          <code class="ruby">  # * Return true if name matches VALID_NAME_REGEX, name exists, length non-empty and less than MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="180">
          <span class="hits">1</span>
          
          <code class="ruby">	def name_valid?</code>
        </li>
      
        <li class="covered" data-hits="372" data-linenumber="181">
          <span class="hits">372</span>
          
          <code class="ruby">		if self.name == nil</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="182">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="183">
          
          
          <code class="ruby">		elsif VALID_NAME_REGEX !~ self.name || self.name.empty? || self.name.length &gt; MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="184">
          <span class="hits">6</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="185">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="366" data-linenumber="186">
          <span class="hits">366</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="187">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="188">
          
          
          <code class="ruby">				</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="189">
          
          
          <code class="ruby">	# Function that checks if email is formatted correctly</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="190">
          
          
          <code class="ruby">	# * Return true if email matches VALID_EMAIL_REGEX, email exists, length non-empty and less than MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="191">
          <span class="hits">1</span>
          
          <code class="ruby">	def email_valid?</code>
        </li>
      
        <li class="covered" data-hits="366" data-linenumber="192">
          <span class="hits">366</span>
          
          <code class="ruby">		if self.email == nil</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="193">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="194">
          
          
          <code class="ruby">		elsif VALID_EMAIL_REGEX !~ self.email || self.email.empty? || self.email.length &gt; MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="195">
          <span class="hits">2</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="196">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="364" data-linenumber="197">
          <span class="hits">364</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="198">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="199">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="200">
          
          
          <code class="ruby">	# Function that checks if email name is unique</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="201">
          
          
          <code class="ruby">	# * Return true if email does not exist in db</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="202">
          <span class="hits">1</span>
          
          <code class="ruby">	def email_available?</code>
        </li>
      
        <li class="covered" data-hits="362" data-linenumber="203">
          <span class="hits">362</span>
          
          <code class="ruby">		self.valid?</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="204">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="205">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="206">
          
          
          <code class="ruby">	# Function that checks if password is formatted correctly</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="207">
          
          
          <code class="ruby">	# * Return truf if password exists, length greater than MIN_PW_LENGTH and less than MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="208">
          <span class="hits">1</span>
          
          <code class="ruby">	def password_valid?</code>
        </li>
      
        <li class="covered" data-hits="364" data-linenumber="209">
          <span class="hits">364</span>
          
          <code class="ruby">		if self.password == nil</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="210">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="211">
          
          
          <code class="ruby">		elsif self.password.length &lt; MIN_PW_LENGTH || self.password.length &gt; MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="212">
          <span class="hits">2</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="213">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="362" data-linenumber="214">
          <span class="hits">362</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="215">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="216">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="217">
          
          
          <code class="ruby">	# Function that generates a new unique_id that is not associated with user in db yet</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="218">
          
          
          <code class="ruby">	# NOT USED in Iteration V1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="219">
          <span class="hits">1</span>
          
          <code class="ruby">	def create_unique_id</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="220">
          
          
          <code class="ruby">		self.unique_id = loop do</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="221">
          
          
          <code class="ruby">			random_token = SecureRandom.urlsafe_base64</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="222">
          
          
          <code class="ruby">			break random_token unless User.exists?(unique_id: random_token)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="223">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="224">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="225">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="cc6c6b538ff992e778ba8bca760950b8fb1e87fc">
  <div class="header">
    <h3>config/application.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>9</b> relevant lines. 
      <span class="green"><b>9</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">require File.expand_path(&#39;../boot&#39;, __FILE__)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># Pick the frameworks you want:</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">require &quot;active_record/railtie&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">require &quot;action_controller/railtie&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">require &quot;action_mailer/railtie&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">require &quot;sprockets/railtie&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby"># require &quot;rails/test_unit/railtie&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby"># Require the gems listed in Gemfile, including any gems</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby"># you&#39;ve limited to :test, :development, or :production.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
          <code class="ruby">Bundler.require(:default, Rails.env)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="14">
          <span class="hits">1</span>
          
          <code class="ruby">module WuffBackend</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="15">
          <span class="hits">1</span>
          
          <code class="ruby">  class Application &lt; Rails::Application</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby">    # Settings in config/environments/* take precedence over those specified here.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="17">
          
          
          <code class="ruby">    # Application configuration should go into files in config/initializers</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">    # -- all .rb files in that directory are automatically loaded.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">    # Set Time.zone default to the specified zone and make Active Record auto-convert to this zone.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="21">
          
          
          <code class="ruby">    # Run &quot;rake -D time&quot; for a list of tasks for finding time zone names. Default is UTC.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby">    # config.time_zone = &#39;Central Time (US &amp; Canada)&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby">    # The default locale is :en and all translations from config/locales/*.rb,yml are auto loaded.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby">    # config.i18n.load_path += Dir[Rails.root.join(&#39;my&#39;, &#39;locales&#39;, &#39;*.{rb,yml}&#39;).to_s]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby">    # config.i18n.default_locale = :de</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby">    # Always force SSL connection as countermeasure for hijacking session cookie</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby">    # config.force_ssl = true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="31">
          <span class="hits">1</span>
          
          <code class="ruby">    config.autoload_paths &lt;&lt; File.join(Rails.root, &quot;app&quot;, &quot;classes&quot;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="32">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="bb789ee7477c134792e8e1ad1517c4cc012ddea4">
  <div class="header">
    <h3>config/boot.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>2</b> relevant lines. 
      <span class="green"><b>2</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Set up gems listed in the Gemfile.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">ENV[&#39;BUNDLE_GEMFILE&#39;] ||= File.expand_path(&#39;../../Gemfile&#39;, __FILE__)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;bundler/setup&#39; if File.exists?(ENV[&#39;BUNDLE_GEMFILE&#39;])</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="6d51b1599b346a386756e3e336ca92b9d3c937a8">
  <div class="header">
    <h3>config/environment.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>2</b> relevant lines. 
      <span class="green"><b>2</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Load the Rails application.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require File.expand_path(&#39;../application&#39;, __FILE__)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># Initialize the Rails application.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">WuffBackend::Application.initialize!</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="d4a1a6fd6d6a26d59a669fb30140d71bd4f988a5">
  <div class="header">
    <h3>config/environments/test.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>11</b> relevant lines. 
      <span class="green"><b>11</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
>>>>>>> master
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
<<<<<<< HEAD
=======
          
          <code class="ruby">WuffBackend::Application.configure do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby">  # Settings specified here will take precedence over those in config/application.rb.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby">  # The test environment is used exclusively to run your application&#39;s</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby">  # test suite. You never need to work with it otherwise. Remember that</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">  # your test database is &quot;scratch space&quot; for the test suite and is wiped</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby">  # and recreated between test runs. Don&#39;t rely on the data there!</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="8">
          <span class="hits">1</span>
          
          <code class="ruby">  config.cache_classes = true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">  # Do not eager load code on boot. This avoids loading your whole application</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby">  # just for the purpose of running a single test. If you are using a tool that</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="12">
          
          
          <code class="ruby">  # preloads Rails for running tests, you may have to set it to true.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="13">
          <span class="hits">1</span>
          
          <code class="ruby">  config.eager_load = false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby">  # Configure static asset server for tests with Cache-Control for performance.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="16">
          <span class="hits">1</span>
          
          <code class="ruby">  config.serve_static_assets  = true</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="17">
          <span class="hits">1</span>
          
          <code class="ruby">  config.static_cache_control = &quot;public, max-age=3600&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">  # Show full error reports and disable caching.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="20">
          <span class="hits">1</span>
          
          <code class="ruby">  config.consider_all_requests_local       = true</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">  config.action_controller.perform_caching = false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby">  # Raise exceptions instead of rendering exception templates.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="24">
          <span class="hits">1</span>
          
          <code class="ruby">  config.action_dispatch.show_exceptions = false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby">  # Disable request forgery protection in test environment.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="27">
          <span class="hits">1</span>
          
          <code class="ruby">  config.action_controller.allow_forgery_protection = false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby">  # Tell Action Mailer not to deliver emails to the real world.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby">  # The :test delivery method accumulates sent emails in the</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="31">
          
          
          <code class="ruby">  # ActionMailer::Base.deliveries array.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="32">
          <span class="hits">1</span>
          
          <code class="ruby">  config.action_mailer.delivery_method = :test</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
          
          
          <code class="ruby">  # Print deprecation notices to the stderr.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="35">
          <span class="hits">1</span>
          
          <code class="ruby">  config.active_support.deprecation = :stderr</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="36">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="369a557d96ee71aff7fa64d909f1c00aed926f38">
  <div class="header">
    <h3>config/initializers/backtrace_silencers.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>0</b> relevant lines. 
      <span class="green"><b>0</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># You can add backtrace silencers for libraries that you&#39;re using but don&#39;t wish to see in your backtraces.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># Rails.backtrace_cleaner.add_silencer { |line| line =~ /my_noisy_library/ }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby"># You can also remove all the silencers if you&#39;re trying to debug a problem that might stem from framework code.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby"># Rails.backtrace_cleaner.remove_silencers!</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="03cd13f62300d1960ff51c6ed2edae2b1d2a1d4d">
  <div class="header">
    <h3>config/initializers/facebook.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>2</b> relevant lines. 
      <span class="green"><b>2</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Wuff&#39;s Facebook Client ID</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">CLIENT_ID = &#39;483469725088597&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># Wuff&#39;s Facebook Client Secret</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">CLIENT_SECRET = &#39;5710f90232192d0533cca6680166cf41&#39;</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="2a80c9a3a2feef2782a1d505914c9a3937981858">
  <div class="header">
    <h3>config/initializers/filter_parameter_logging.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># Configure sensitive parameters which will be filtered from the log file.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">Rails.application.config.filter_parameters += [:password]</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="4e93607b242eb9b8e6c06c9c7131aa3aeb179d5f">
  <div class="header">
    <h3>config/initializers/global_constants.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>25</b> relevant lines. 
      <span class="green"><b>25</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Success return code</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">SUCCESS = 1</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># Invalid name: Name must exist and have max length MAX_NAME_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_INVALID_NAME = -1 </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"># Invalid time: Time must be a valid time</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_INVALID_TIME = -10</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby"># Invalid field: Generic, one of the fields is invalid. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="8">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_INVALID_FIELD = -6</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby"># Generic error for an unsuccessful action</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="10">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_UNSUCCESSFUL = -7</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby"># Invalid email: must be VALID_EMAIL_REGEX format; cannot be empty; cannot be longer than MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_INVALID_EMAIL = -2</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
          
          
          <code class="ruby"># Password cannot be longer than MAX_CREDENTIAL_LENGTH or shorter than MIN_PW_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="14">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_INVALID_PASSWORD = -3</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby"># Email is not unique (i.e. exists already in database)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="16">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_EMAIL_TAKEN = -4</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="17">
          
          
          <code class="ruby"># Cannot find the email/password pair in the database (i.e. login fail)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="18">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_BAD_CREDENTIALS = -5</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby"># Error when session token doesn’t match a valid logged in session. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="20">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_INVALID_SESSION = -11 </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="21">
          
          
          <code class="ruby"># Error when you don&#39;t have permission to do something </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby"># (i.e. you try to delete an event you don&#39;t own</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="23">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_INVALID_PERMISSIONS = -12</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby"># Possible user statuses in respect to an event. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="26">
          <span class="hits">1</span>
          
          <code class="ruby">STATUS_NO_RESPONSE = 0</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="27">
          <span class="hits">1</span>
          
          <code class="ruby">STATUS_ATTENDING = 1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="28">
          <span class="hits">1</span>
          
          <code class="ruby">STATUS_NOT_ATTENDING = -1</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby"># Event notification types</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="31">
          <span class="hits">1</span>
          
          <code class="ruby">NOTIF_NEW_EVENT = 1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="32">
          <span class="hits">1</span>
          
          <code class="ruby">NOTIF_DELETE_EVENT = 2</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="33">
          <span class="hits">1</span>
          
          <code class="ruby">NOTIF_EDIT_EVENT = 3</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="34">
          <span class="hits">1</span>
          
          <code class="ruby">NOTIF_FRIEND_ADD = 4</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="35">
          <span class="hits">1</span>
          
          <code class="ruby">NOTIF_COND_MET = 5</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="36">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="37">
          
          
          <code class="ruby"># Condition types</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="38">
          
          
          <code class="ruby"># No condition set. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="39">
          <span class="hits">1</span>
          
          <code class="ruby">COND_NONE = 0</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="40">
          
          
          <code class="ruby"># At least a certain number of other people will be attending the event</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="41">
          <span class="hits">1</span>
          
          <code class="ruby">COND_NUM_ATTENDING = 1</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="42">
          
          
          <code class="ruby"># Any one of the users specified are attending the event.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="43">
          <span class="hits">1</span>
          
          <code class="ruby">COND_USER_ATTENDING_ANY = 2</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="44">
          
          
          <code class="ruby"># All of the users specified will be attending the event.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="45">
          <span class="hits">1</span>
          
          <code class="ruby">COND_USER_ATTENDING_ALL = 3</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="46">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="47">
          
          
          <code class="ruby"># The condition has been met. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="48">
          <span class="hits">1</span>
          
          <code class="ruby">COND_MET = 0 </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="49">
          
          
          <code class="ruby"># The condition has not been met.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="50">
          <span class="hits">1</span>
          
          <code class="ruby">COND_NOT_MET = 1</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="88635b51e8839fd1f1325658d978acac27850feb">
  <div class="header">
    <h3>config/initializers/inflections.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>0</b> relevant lines. 
      <span class="green"><b>0</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># Add new inflection rules using the following format. Inflections</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># are locale specific, and you may define rules for as many different</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"># locales as you wish. All of these examples are active by default:</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby"># ActiveSupport::Inflector.inflections(:en) do |inflect|</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby">#   inflect.plural /^(ox)$/i, &#39;\1en&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby">#   inflect.singular /^(ox)en/i, &#39;\1&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby">#   inflect.irregular &#39;person&#39;, &#39;people&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">#   inflect.uncountable %w( fish sheep )</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby"># end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="12">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
          
          
          <code class="ruby"># These inflection rules are supported but not enabled by default:</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby"># ActiveSupport::Inflector.inflections(:en) do |inflect|</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby">#   inflect.acronym &#39;RESTful&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby"># end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="4eb9fee4984bb02e61950be5aaed8bff02134bc4">
  <div class="header">
    <h3>config/initializers/mime_types.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>0</b> relevant lines. 
      <span class="green"><b>0</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># Add new mime types for use in respond_to blocks:</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># Mime::Type.register &quot;text/richtext&quot;, :rtf</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"># Mime::Type.register_alias &quot;text/html&quot;, :iphone</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="412f1199097bc9185ac7e5ef5496ce65a817a5be">
  <div class="header">
    <h3>config/initializers/push_setup.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>2</b> relevant lines. 
      <span class="green"><b>2</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">APNS.host = &#39;gateway.sandbox.push.apple.com&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># This is the default, used for development. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby"># APNS.host = &#39;gateway.push.apple.com&#39; </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby"># This is the production server.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="9">
          <span class="hits">1</span>
          
          <code class="ruby">APNS.pem  = Rails.root.join(&#39;push&#39;, &#39;wuffkey.pem&#39;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby"># Path to the .pem file containing private key for our server</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="a408052bb2ff5b00b0cdf1d9cbff0d1f132f0fa1">
  <div class="header">
    <h3>config/initializers/secret_token.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># Your secret key is used for verifying the integrity of signed cookies.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># If you change this key, all old signed cookies will become invalid!</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby"># Make sure the secret is at least 30 characters and all random,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby"># no regular words or you&#39;ll be exposed to dictionary attacks.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby"># You can use `rake secret` to generate a secure secret key.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby"># Make sure your secret_key_base is kept private</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby"># if you&#39;re sharing your code publicly.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
          <code class="ruby">WuffBackend::Application.config.secret_key_base = &#39;fd297fd240011365b5da1836058b36a8c60b622eee14eac045c14564596f296d40446c3965371a504352cf981cc1aa28816cb9a979b72497b5ad506bf9be4f31&#39;</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="4c34c26ea384f12aaf3e1eeb71f21d3af8b2e657">
  <div class="header">
    <h3>config/initializers/session_store.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">WuffBackend::Application.config.session_store :cookie_store, key: &#39;_wuff_backend_session&#39;</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="3fe2494a5a3cafca22ea7227bf85206c2aa46016">
  <div class="header">
    <h3>config/initializers/wrap_parameters.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>2</b> relevant lines. 
      <span class="green"><b>2</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># This file contains settings for ActionController::ParamsWrapper which</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># is enabled by default.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby"># Enable parameter wrapping for JSON. You can disable this by setting :format to an empty array.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">ActiveSupport.on_load(:action_controller) do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="8">
          <span class="hits">1</span>
          
          <code class="ruby">  wrap_parameters format: [:json] if respond_to?(:wrap_parameters)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby">end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby"># To enable root element in JSON for ActiveRecord objects.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="12">
          
          
          <code class="ruby"># ActiveSupport.on_load(:active_record) do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
          
          
          <code class="ruby">#  self.include_root_in_json = true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby"># end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="679814302cc4026285b8e05c03333830819e2824">
  <div class="header">
    <h3>config/routes.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>30</b> relevant lines. 
      <span class="green"><b>30</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">WuffBackend::Application.routes.draw do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">  resources :users</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/user/add_user&#39;, to: &#39;users#add_user&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/user/login_user&#39;, to: &#39;users#login_user&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">	delete &#39;/user/logout_user&#39;, to: &#39;users#logout_user&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/user/auth_facebook&#39;, to: &#39;users#auth_facebook&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="8">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/user/get_profile_pic&#39;, to: &#39;users#get_profile_pic&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="9">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/user/add_friend&#39;, to: &#39;users#add_friend&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="10">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/user/delete_friend&#39;, to: &#39;users#delete_friend&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="11">
          <span class="hits">1</span>
          
          <code class="ruby">	get &#39;/user/get_events&#39;, to: &#39;users#get_events&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
          <code class="ruby">	get &#39;/user/get_groups&#39;, to: &#39;users#get_groups&#39;	</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="13">
          <span class="hits">1</span>
          
          <code class="ruby">	get &#39;/user/get_friends&#39;, to: &#39;users#get_friends&#39;		</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="14">
          <span class="hits">1</span>
          
          <code class="ruby">	get &#39;/user/has_notifications&#39;, to: &#39;users#has_notifications?&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="15">
          <span class="hits">1</span>
          
          <code class="ruby">	get &#39;/user/get_notifications&#39;, to: &#39;users#get_notifications&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="16">
          <span class="hits">1</span>
          
          <code class="ruby">	delete &#39;/user/clear_notifications&#39;, to: &#39;users#clear_notifications&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="17">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/user/get_all_users&#39;, to: &#39;users#get_all_users&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="19">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/update_user_status&#39;, to: &#39;events#update_user_status&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="20">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/invite_users&#39;, to: &#39;events#invite_users&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/create_event&#39;, to: &#39;events#create_event&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="22">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/view&#39;, to: &#39;events#view&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="23">
          <span class="hits">1</span>
          
          <code class="ruby">	delete &#39;/event/remove_user&#39;, to: &#39;events#remove_user&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="24">
          <span class="hits">1</span>
          
          <code class="ruby">	delete &#39;/event/cancel_event&#39;, to: &#39;events#cancel_event&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="25">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/edit_event&#39;, to: &#39;events#edit_event&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="26">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/add_conditional_acceptance&#39;, to: &#39;events#add_cond_acceptance&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="28">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/group/add_users&#39;, to: &#39;groups#add_users&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="29">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/group/create_group&#39;, to: &#39;groups#create_group&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="30">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/group/view&#39;, to: &#39;groups#view&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="31">
          <span class="hits">1</span>
          
          <code class="ruby">	delete &#39;/group/remove_user&#39;, to: &#39;groups#remove_user&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="32">
          <span class="hits">1</span>
          
          <code class="ruby">	delete &#39;/group/delete_group&#39;, to: &#39;groups#delete_group&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="33">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/group/edit_group&#39;, to: &#39;groups#edit_group&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="087435c4762a9d30b060a1102147666bdb948a10">
  <div class="header">
    <h3>spec/classes/notification_spec.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>32</b> relevant lines. 
      <span class="green"><b>32</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;spec_helper&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;EventNotification&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;FriendNotification&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;ConditionNotification&#39; </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">describe EventNotification do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby">	</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="9">
          <span class="hits">1</span>
          
          <code class="ruby">	before do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="10">
          <span class="hits">1</span>
          
          <code class="ruby">		user = User.new(name: &quot;Test User&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby">			password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
          <code class="ruby">		user.add</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="13">
          <span class="hits">1</span>
          
          <code class="ruby">		@event = Event.create(name: &quot;My event!&quot;, admin: user.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby">			party_list: { 2 =&gt; {status: STATUS_ATTENDING} }, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby">			time: DateTime.current.to_i + 10) </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="17">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="18">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when creating notification for a new event&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="19">
          <span class="hits">2</span>
          
          <code class="ruby">		before { @notif = EventNotification.new(NOTIF_NEW_EVENT, @event) }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="20">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should return proper notification&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">			n_hash = @notif.get_hash</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="22">
          <span class="hits">1</span>
          
          <code class="ruby">			n_hash[:notif_type].should eq(NOTIF_NEW_EVENT)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="23">
          <span class="hits">1</span>
          
          <code class="ruby">			n_hash[:event].should eq(@event.id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="24">
          <span class="hits">1</span>
          
          <code class="ruby">			n_hash[:name].should eq(@event.name)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="25">
          <span class="hits">1</span>
          
          <code class="ruby">			n_hash[:creator][:name].should eq(&quot;Test User&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="26">
          <span class="hits">1</span>
          
          <code class="ruby">			n_hash[:creator][:email].should eq(&quot;test@example.com&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="27">
          <span class="hits">1</span>
          
          <code class="ruby">			curr_time = DateTime.current.to_i</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby">			# Allow a one-second difference in case the time changed</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="29">
          <span class="hits">1</span>
          
          <code class="ruby">			((n_hash[:notif_time] == curr_time) || (n_hash[:notif_time] == curr_time - 1)).should be_true</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="30">
          <span class="hits">1</span>
          
          <code class="ruby">			n_hash[:location].should eq(@event.location)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="31">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="32">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby">end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="35">
          <span class="hits">1</span>
          
          <code class="ruby">describe FriendNotification do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="36">
          
          
          <code class="ruby">	</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="37">
          <span class="hits">2</span>
          
          <code class="ruby">	before { @user = User.create(name: &quot;My Friend&quot;, email: &quot;friend@example.com&quot;) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="38">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="39">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when creating notification for a new friend add&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="40">
          <span class="hits">2</span>
          
          <code class="ruby">		before { @notif = FriendNotification.new(@user) }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="41">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should return proper notification&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="42">
          <span class="hits">1</span>
          
          <code class="ruby">			n_hash = @notif.get_hash</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="43">
          <span class="hits">1</span>
          
          <code class="ruby">			n_hash[:notif_type].should eq(NOTIF_FRIEND_ADD)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="44">
          <span class="hits">1</span>
          
          <code class="ruby">			n_hash[:friend_name].should eq(@user.name)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="45">
          <span class="hits">1</span>
          
          <code class="ruby">			n_hash[:friend_email].should eq(@user.email)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="46">
          <span class="hits">1</span>
          
          <code class="ruby">			curr_time = DateTime.current.to_i</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="47">
          
          
          <code class="ruby">			# Allow a one-second difference in case the time changed</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="48">
          <span class="hits">1</span>
          
          <code class="ruby">			((n_hash[:notif_time] == curr_time) || (n_hash[:notif_time] == curr_time - 1)).should be_true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="49">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="50">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="51">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="3aead1a14cd70516a9265a56103a31397f9043d1">
  <div class="header">
    <h3>spec/controllers/events_controller_spec.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>372</b> relevant lines. 
      <span class="green"><b>372</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;spec_helper&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;json&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">describe EventsController do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby">	</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when creating an event (event/create_event)&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="8">
          <span class="hits">10</span>
          
          <code class="ruby">			@user = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="10">
          <span class="hits">10</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="11">
          <span class="hits">10</span>
          
          <code class="ruby">			@token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="12">
          <span class="hits">10</span>
          
          <code class="ruby">			@user.update_attribute(:remember_token, User.hash(@token))</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="13">
          <span class="hits">10</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="16">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with valid inputs&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="17">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="18">
          <span class="hits">3</span>
          
          <code class="ruby">				@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">					password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="20">
          <span class="hits">3</span>
          
          <code class="ruby">				@other.add</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="21">
          <span class="hits">3</span>
          
          <code class="ruby">				post &#39;create_event&#39;, { format: &#39;json&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby">					user_list: &quot;#{@user.email},#{@other.email}&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby">					title: &quot;Test Event&quot;, time: DateTime.current.to_i + 10}</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="24">
          <span class="hits">3</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="25">
          <span class="hits">3</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="26">
          <span class="hits">3</span>
          
          <code class="ruby">				@event_id = JSON.parse(response.body)[&#39;event&#39;]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="29">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="31">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;the event_list of the users involved&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="32">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { @user.event_list.should include(@event_id) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="33">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { @other.event_list.should include(@event_id) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="35">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="36">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="37">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;while not logged in&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="38">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @request.cookies[&#39;current_user_token&#39;] = &#39;invalid token&#39; }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="39">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="40">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should return err_code of ERR_INVALID_SESSION&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="41">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;create_event&#39;, { format: &#39;json&#39;, user_list: @user.email,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="42">
          
          
          <code class="ruby">					title: &quot;Test Event&quot;, time: DateTime.current.to_i + 10}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="43">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="44">
          <span class="hits">1</span>
          
          <code class="ruby">				response.status.should eq 200</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="45">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_SESSION</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="46">
          <span class="hits">1</span>
          
          <code class="ruby">				Event.find_by(name: &quot;Test Event&quot;).should eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="47">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="48">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="49">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="50">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with invalid/missing inputs&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="51">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - missing name&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="52">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;create_event&#39;, { format: &#39;json&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="53">
          
          
          <code class="ruby">					user_list: @user.email, time: DateTime.current.to_i} }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="54">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_NAME }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="55">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="56">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - missing user_list&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="57">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;create_event&#39;, { format: &#39;json&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="58">
          
          
          <code class="ruby">					title: &quot;Test Event&quot;, time: DateTime.current.to_i} }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="59">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="60">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="61">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - invalid user_list 1&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="62">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;create_event&#39;, { format: &#39;json&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="63">
          
          
          <code class="ruby">					title: &quot;Test Event&quot;, time: DateTime.current.to_i,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="64">
          
          
          <code class="ruby">					user_list: &quot;userid&quot;} }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="65">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="66">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="67">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - invalid user_list 2&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="68">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;create_event&#39;, { format: &#39;json&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="69">
          
          
          <code class="ruby">					title: &quot;Test Event&quot;, time: DateTime.current.to_i,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="70">
          
          
          <code class="ruby">					user_list: &quot;#{@user.email},userid&quot;} }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="71">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="72">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="73">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - missing time&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="74">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;create_event&#39;, { format: &#39;json&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="75">
          
          
          <code class="ruby">					title: &quot;Test Event&quot;, user_list: @user.email } }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="76">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_TIME }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="77">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="78">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - time in the past&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="79">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;create_event&#39;, { format: &#39;json&#39;, time: DateTime.current.to_i - 50, title: &quot;Test Event&quot;, user_list: @user.email} }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="80">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_TIME }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="81">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="82">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="83">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="84">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="85">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when inviting new users (event/invite_users)&quot; do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="86">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="87">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="88">
          <span class="hits">5</span>
          
          <code class="ruby">			@admin = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="89">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="90">
          <span class="hits">5</span>
          
          <code class="ruby">			@admin.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="91">
          <span class="hits">5</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="92">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="93">
          <span class="hits">5</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="94">
          <span class="hits">5</span>
          
          <code class="ruby">			@event_id = Event.add_event(&quot;Test Event&quot;, @admin.id, DateTime.current.to_i + 10, [@admin.id, @other.id])</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="95">
          <span class="hits">5</span>
          
          <code class="ruby">			@event = Event.find(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="96">
          <span class="hits">5</span>
          
          <code class="ruby">			@admin_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="97">
          <span class="hits">5</span>
          
          <code class="ruby">			@other_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="98">
          <span class="hits">5</span>
          
          <code class="ruby">			@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="99">
          <span class="hits">5</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="100">
          <span class="hits">5</span>
          
          <code class="ruby">			@admin.update_attribute(:remember_token, User.hash(@admin_token))</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="101">
          <span class="hits">5</span>
          
          <code class="ruby">			@other.update_attribute(:remember_token, User.hash(@other_token))</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="102">
          <span class="hits">5</span>
          
          <code class="ruby">			@new_user1 = User.new(name: &quot;Friend One&quot;, email: &quot;friend1@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="103">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="104">
          <span class="hits">5</span>
          
          <code class="ruby">			@new_user1.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="105">
          <span class="hits">5</span>
          
          <code class="ruby">			@new_user2 = User.new(name: &quot;Friend Two&quot;, email: &quot;friend2@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="106">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="107">
          <span class="hits">5</span>
          
          <code class="ruby">			@new_user2.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="108">
          <span class="hits">5</span>
          
          <code class="ruby">			@new_user1.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="109">
          <span class="hits">5</span>
          
          <code class="ruby">			@new_user2.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="110">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="111">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="112">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;when adding as admin&quot; do</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="113">
          <span class="hits">4</span>
          
          <code class="ruby">			before { @request.cookies[&#39;current_user_token&#39;] = @admin_token }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="114">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;with all valid users&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="115">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="116">
          <span class="hits">1</span>
          
          <code class="ruby">					post &#39;invite_users&#39;, { format: &#39;json&#39;, event: @event_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="117">
          
          
          <code class="ruby">						user_list: &quot;friend1@example.com,friend2@example.com&quot; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="118">
          <span class="hits">1</span>
          
          <code class="ruby">					@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="119">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="120">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user1.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="121">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="122">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="123">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should be successful&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="124">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="125">
          <span class="hits">1</span>
          
          <code class="ruby">					@admin.event_list.should include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="126">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.event_list.should include(@event_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="127">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user1.event_list.should include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="128">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.event_list.should include(@event_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="129">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user1.notification_list.should have(1).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="130">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.notification_list.should have(1).items </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="131">
          <span class="hits">1</span>
          
          <code class="ruby">					@admin.notification_list.should have(0).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="132">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.notification_list.should have(1).items </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="133">
          <span class="hits">1</span>
          
          <code class="ruby">					@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="134">
          <span class="hits">1</span>
          
          <code class="ruby">					@event.get_user_status(@new_user1.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="135">
          <span class="hits">1</span>
          
          <code class="ruby">					@event.get_user_status(@new_user2.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="136">
          
          
          <code class="ruby">				end				 </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="137">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="138">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="139">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;with an invalid user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="140">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="141">
          <span class="hits">1</span>
          
          <code class="ruby">					post &#39;invite_users&#39;, { format: &#39;json&#39;, event: @event_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="142">
          
          
          <code class="ruby">						user_list: &quot;ran_email_bad@example.com,friend2@example.com&quot; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="143">
          <span class="hits">1</span>
          
          <code class="ruby">					@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="144">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="145">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user1.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="146">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="147">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="148">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should return an error&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="149">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="150">
          <span class="hits">1</span>
          
          <code class="ruby">					@admin.event_list.should include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="151">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.event_list.should include(@event_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="152">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user1.event_list.should_not include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="153">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.event_list.should_not include(@event_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="154">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user1.notification_list.should have(0).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="155">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.notification_list.should have(0).items </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="156">
          <span class="hits">1</span>
          
          <code class="ruby">					@admin.notification_list.should have(0).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="157">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.notification_list.should have(1).items </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="158">
          <span class="hits">1</span>
          
          <code class="ruby">					@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="159">
          <span class="hits">1</span>
          
          <code class="ruby">					@event.get_user_status(@new_user1.id).should eq nil</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="160">
          <span class="hits">1</span>
          
          <code class="ruby">					@event.get_user_status(@new_user2.id).should eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="161">
          
          
          <code class="ruby">				end	</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="162">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="163">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="164">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;with a duplicate user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="165">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="166">
          <span class="hits">1</span>
          
          <code class="ruby">					@event.set_user_status(@other.id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="167">
          <span class="hits">1</span>
          
          <code class="ruby">					post &#39;invite_users&#39;, { format: &#39;json&#39;, event: @event_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="168">
          
          
          <code class="ruby">						user_list: &quot;t_other@example.com,friend2@example.com&quot; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="169">
          <span class="hits">1</span>
          
          <code class="ruby">					@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="170">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="171">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user1.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="172">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="173">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="174">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should be successful but ignore duplicate&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="175">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="176">
          <span class="hits">1</span>
          
          <code class="ruby">					@admin.event_list.should include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="177">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.event_list.should include(@event_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="178">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.event_list.should include(@event_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="179">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.notification_list.should have(1).items </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="180">
          <span class="hits">1</span>
          
          <code class="ruby">					@admin.notification_list.should have(0).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="181">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.notification_list.should have(1).items </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="182">
          <span class="hits">1</span>
          
          <code class="ruby">					@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="183">
          <span class="hits">1</span>
          
          <code class="ruby">					@event.get_user_status(@other.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="184">
          <span class="hits">1</span>
          
          <code class="ruby">					@event.get_user_status(@new_user2.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="185">
          
          
          <code class="ruby">				end	</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="186">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="187">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="188">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="189">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;when adding as a non-admin&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="190">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="191">
          <span class="hits">1</span>
          
          <code class="ruby">				@request.cookies[&#39;current_user_token&#39;] = @other_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="192">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;invite_users&#39;, { format: &#39;json&#39;, event: @event_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="193">
          
          
          <code class="ruby">					user_list: &quot;friend1@example.com,friend2@example.com&quot; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="194">
          <span class="hits">1</span>
          
          <code class="ruby">				@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="195">
          <span class="hits">1</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="196">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user1.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="197">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user2.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="198">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="199">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should fail with an error&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="200">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="201">
          <span class="hits">1</span>
          
          <code class="ruby">				@admin.event_list.should include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="202">
          <span class="hits">1</span>
          
          <code class="ruby">				@other.event_list.should include(@event_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="203">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user1.event_list.should_not include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="204">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user2.event_list.should_not include(@event_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="205">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user1.notification_list.should have(0).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="206">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user2.notification_list.should have(0).items </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="207">
          <span class="hits">1</span>
          
          <code class="ruby">				@admin.notification_list.should have(0).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="208">
          <span class="hits">1</span>
          
          <code class="ruby">				@other.notification_list.should have(1).items </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="209">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="210">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@new_user1.id).should eq nil</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="211">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@new_user2.id).should eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="212">
          
          
          <code class="ruby">			end	</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="213">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="214">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="215">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;when adding to an invalid event&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="216">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="217">
          <span class="hits">1</span>
          
          <code class="ruby">				@request.cookies[&#39;current_user_token&#39;] = @admin_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="218">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;invite_users&#39;, { format: &#39;json&#39;, event: 93452345,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="219">
          
          
          <code class="ruby">					user_list: &quot;friend1@example.com,friend2@example.com&quot; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="220">
          <span class="hits">1</span>
          
          <code class="ruby">				@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="221">
          <span class="hits">1</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="222">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user1.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="223">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user2.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="224">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="225">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should fail with an error&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="226">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="227">
          <span class="hits">1</span>
          
          <code class="ruby">				@admin.event_list.should include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="228">
          <span class="hits">1</span>
          
          <code class="ruby">				@other.event_list.should include(@event_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="229">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user1.event_list.should_not include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="230">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user2.event_list.should_not include(@event_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="231">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user1.notification_list.should have(0).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="232">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user2.notification_list.should have(0).items </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="233">
          <span class="hits">1</span>
          
          <code class="ruby">				@admin.notification_list.should have(0).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="234">
          <span class="hits">1</span>
          
          <code class="ruby">				@other.notification_list.should have(1).items </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="235">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="236">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@new_user1.id).should eq nil</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="237">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@new_user2.id).should eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="238">
          
          
          <code class="ruby">			end	</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="239">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="240">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="241">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="242">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when updating an existing user&#39;s status&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="243">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="244">
          <span class="hits">4</span>
          
          <code class="ruby">			@admin = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="245">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="246">
          <span class="hits">4</span>
          
          <code class="ruby">			@admin.add</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="247">
          <span class="hits">4</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="248">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="249">
          <span class="hits">4</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="250">
          <span class="hits">4</span>
          
          <code class="ruby">			@event_id = Event.add_event(&quot;Test Event&quot;, @admin.id, DateTime.current.to_i + 10, [@admin.id, @other.id])</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="251">
          <span class="hits">4</span>
          
          <code class="ruby">			@event = Event.find(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="252">
          <span class="hits">4</span>
          
          <code class="ruby">			@admin_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="253">
          <span class="hits">4</span>
          
          <code class="ruby">			@other_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="254">
          <span class="hits">4</span>
          
          <code class="ruby">			@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="255">
          <span class="hits">4</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="256">
          <span class="hits">4</span>
          
          <code class="ruby">			@admin.update_attribute(:remember_token, User.hash(@admin_token))</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="257">
          <span class="hits">4</span>
          
          <code class="ruby">			@other.update_attribute(:remember_token, User.hash(@other_token))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="258">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="259">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="260">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should fail if the user isn&#39;t signed in&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="261">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = &#39;aBdsfg135_123&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="262">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;update_user_status&#39;, { format: &#39;json&#39;, event: @event_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="263">
          
          
          <code class="ruby">				status: STATUS_NOT_ATTENDING }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="264">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_SESSION</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="265">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="266">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="267">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should fail if the event ID isn&#39;t valid&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="268">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @admin_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="269">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;update_user_status&#39;, { format: &#39;json&#39;, event: 234525731,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="270">
          
          
          <code class="ruby">				status: STATUS_NOT_ATTENDING }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="271">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="272">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="273">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="274">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should change the admin&#39;s status&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="275">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @admin_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="276">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;update_user_status&#39;, { format: &#39;json&#39;, event: @event_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="277">
          
          
          <code class="ruby">				status: STATUS_NOT_ATTENDING }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="278">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="279">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="280">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@admin.id).should eq STATUS_NOT_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="281">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@other.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="282">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="283">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="284">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should change the other user&#39;s status&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="285">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @other_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="286">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;update_user_status&#39;, { format: &#39;json&#39;, event: @event_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="287">
          
          
          <code class="ruby">				status: STATUS_ATTENDING }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="288">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="289">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="290">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@other.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="291">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@admin.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="292">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="293">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="294">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="295">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when viewing an event (event/view)&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="296">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="297">
          <span class="hits">4</span>
          
          <code class="ruby">			@admin = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="298">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="299">
          <span class="hits">4</span>
          
          <code class="ruby">			@admin.add</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="300">
          <span class="hits">4</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="301">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="302">
          <span class="hits">4</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="303">
          <span class="hits">4</span>
          
          <code class="ruby">			@event_id = Event.add_event(&quot;Test Event&quot;, @admin.id, DateTime.current.to_i + 10, [@admin.id, @other.id], &quot;Testing Event&quot;, &quot;A Test Facility&quot;)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="304">
          <span class="hits">4</span>
          
          <code class="ruby">			@event = Event.find(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="305">
          <span class="hits">4</span>
          
          <code class="ruby">			@admin_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="306">
          <span class="hits">4</span>
          
          <code class="ruby">			@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="307">
          <span class="hits">4</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="308">
          <span class="hits">4</span>
          
          <code class="ruby">			@admin.update_attribute(:remember_token, User.hash(@admin_token))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="309">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="310">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="311">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should fail if the user isn&#39;t signed in&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="312">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = &#39;aBdsfg135_123&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="313">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;view&#39;, { format: &#39;json&#39;, event: @event_id }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="314">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_SESSION</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="315">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="316">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="317">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should fail if requested from a nonmember&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="318">
          <span class="hits">1</span>
          
          <code class="ruby">			user2 = User.new(name: &quot;User Two&quot;, email: &quot;user2@example.com&quot;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="319">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="320">
          <span class="hits">1</span>
          
          <code class="ruby">			user2_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="321">
          <span class="hits">1</span>
          
          <code class="ruby">			user2.update_attribute(:remember_token, User.hash(user2_token))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="322">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = user2_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="323">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;view&#39;, { format: &#39;json&#39;, event: @event_id }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="324">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="325">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="326">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="327">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should fail if the event ID isn&#39;t valid&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="328">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @admin_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="329">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;view&#39;, { format: &#39;json&#39;, event: 234525731 }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="330">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="331">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="332">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="333">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should return the correct fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="334">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @admin_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="335">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;view&#39;, { format: &#39;json&#39;, event: @event_id }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="336">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="337">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;event&#39;].should eq @event_id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="338">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;title&#39;].should eq &quot;Test Event&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="339">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;creator&#39;].should eq @admin.id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="340">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;time&#39;].should eq @event.time</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="341">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;location&#39;].should eq &quot;A Test Facility&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="342">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;users&#39;][&#39;user_count&#39;].should eq 2</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="343">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;description&#39;].should eq &quot;Testing Event&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="344">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="345">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="346">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="347">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when removing a user (event/remove_user)&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="348">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="349">
          <span class="hits">3</span>
          
          <code class="ruby">			@admin = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="350">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="351">
          <span class="hits">3</span>
          
          <code class="ruby">			@admin.add</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="352">
          <span class="hits">3</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="353">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="354">
          <span class="hits">3</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="355">
          <span class="hits">3</span>
          
          <code class="ruby">			@event_id = Event.add_event(&quot;Test Event&quot;, @admin.id, DateTime.current.to_i + 10, [@admin.id, @other.id], &quot;Testing Event&quot;, &quot;A Test Facility&quot;)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="356">
          <span class="hits">3</span>
          
          <code class="ruby">			@event = Event.find(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="357">
          <span class="hits">3</span>
          
          <code class="ruby">			@admin_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="358">
          <span class="hits">3</span>
          
          <code class="ruby">			@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="359">
          <span class="hits">3</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="360">
          <span class="hits">3</span>
          
          <code class="ruby">			@admin.update_attribute(:remember_token, User.hash(@admin_token))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="361">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="362">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="363">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should do nothing if the admin removes himself&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="364">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @admin_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="365">
          <span class="hits">1</span>
          
          <code class="ruby">			delete &#39;remove_user&#39;, { format: &#39;json&#39;, event: @event_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="366">
          
          
          <code class="ruby">				user_remove: @admin.email }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="367">
          <span class="hits">1</span>
          
          <code class="ruby">			@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="368">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="369">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="370">
          <span class="hits">1</span>
          
          <code class="ruby">			@admin.event_list.should include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="371">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@admin.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="372">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="373">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="374">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should do nothing if attempting to remove a user not in the event&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="375">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user = User.new(name: &quot;Test Other&quot;, email: &quot;test99@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="376">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="377">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user.add</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="378">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @admin_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="379">
          <span class="hits">1</span>
          
          <code class="ruby">			delete &#39;remove_user&#39;, { format: &#39;json&#39;, event: @event_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="380">
          
          
          <code class="ruby">				user_remove: new_user.email }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="381">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="382">
          <span class="hits">1</span>
          
          <code class="ruby">			@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="383">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="384">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="385">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@admin.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="386">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@other.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="387">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="388">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="389">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should properly remove a valid user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="390">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @admin_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="391">
          <span class="hits">1</span>
          
          <code class="ruby">			delete &#39;remove_user&#39;, { format: &#39;json&#39;, event: @event_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="392">
          
          
          <code class="ruby">				user_remove: @other.email }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="393">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="394">
          <span class="hits">1</span>
          
          <code class="ruby">			@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="395">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="396">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="397">
          <span class="hits">1</span>
          
          <code class="ruby">			@admin.event_list.should include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="398">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@admin.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="399">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="400">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@other.id).should eq nil</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="401">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.event_list.should_not include(@event_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="402">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="403">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="404">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="405">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when cancelling an event (event/cancel_event)&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="406">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="407">
          <span class="hits">2</span>
          
          <code class="ruby">			@admin = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="408">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="409">
          <span class="hits">2</span>
          
          <code class="ruby">			@admin.add</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="410">
          <span class="hits">2</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="411">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="412">
          <span class="hits">2</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="413">
          <span class="hits">2</span>
          
          <code class="ruby">			@event_id = Event.add_event(&quot;Test Event&quot;, @admin.id, DateTime.current.to_i + 10, [@admin.id, @other.id], &quot;Testing Event&quot;, &quot;A Test Facility&quot;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="414">
          <span class="hits">2</span>
          
          <code class="ruby">			@event = Event.find(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="415">
          <span class="hits">2</span>
          
          <code class="ruby">			@admin_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="416">
          <span class="hits">2</span>
          
          <code class="ruby">			@other_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="417">
          <span class="hits">2</span>
          
          <code class="ruby">			@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="418">
          <span class="hits">2</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="419">
          <span class="hits">2</span>
          
          <code class="ruby">			@admin.update_attribute(:remember_token, User.hash(@admin_token))</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="420">
          <span class="hits">2</span>
          
          <code class="ruby">			@other.update_attribute(:remember_token, User.hash(@other_token))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="421">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="422">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="423">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should do nothing if a nonadmin cancels it&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="424">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @other_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="425">
          <span class="hits">1</span>
          
          <code class="ruby">			delete &#39;cancel_event&#39;, { format: &#39;json&#39;, event: @event_id }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="426">
          <span class="hits">1</span>
          
          <code class="ruby">			@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="427">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="428">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="429">
          <span class="hits">1</span>
          
          <code class="ruby">			@admin.event_list.should include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="430">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@admin.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="431">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.event_list.should include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="432">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@other.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="433">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="434">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="435">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should properly cancel a valid event&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="436">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @admin_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="437">
          <span class="hits">1</span>
          
          <code class="ruby">			delete &#39;cancel_event&#39;, { format: &#39;json&#39;, event: @event_id }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="438">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="439">
          <span class="hits">1</span>
          
          <code class="ruby">			@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="440">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="441">
          <span class="hits">1</span>
          
          <code class="ruby">			@admin.event_list.should_not include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="442">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.event_list.should_not include(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="443">
          <span class="hits">2</span>
          
          <code class="ruby">			expect { Event.find(@event_id) }.to raise_error(ActiveRecord::RecordNotFound)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="444">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="445">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="446">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="447">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when editing an event (event/edit_event)&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="448">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="449">
          <span class="hits">7</span>
          
          <code class="ruby">			@admin = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="450">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="451">
          <span class="hits">7</span>
          
          <code class="ruby">			@admin.add</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="452">
          <span class="hits">7</span>
          
          <code class="ruby">			@admin_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="453">
          <span class="hits">7</span>
          
          <code class="ruby">			@admin.update_attribute(:remember_token, User.hash(@admin_token))</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="454">
          <span class="hits">7</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @admin_token</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="455">
          <span class="hits">7</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="456">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="457">
          <span class="hits">7</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="458">
          <span class="hits">7</span>
          
          <code class="ruby">			@other_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="459">
          <span class="hits">7</span>
          
          <code class="ruby">			@other.update_attribute(:remember_token, User.hash(@other_token))</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="460">
          <span class="hits">7</span>
          
          <code class="ruby">			@event_id = Event.add_event(&quot;Test Event&quot;, @admin.id, DateTime.current.to_i + 10, [@admin.id, @other.id])</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="461">
          <span class="hits">7</span>
          
          <code class="ruby">			@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="462">
          <span class="hits">7</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="463">
          <span class="hits">7</span>
          
          <code class="ruby">			@event = Event.find(@event_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="464">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="465">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="466">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should update the fields if they are all filled out and valid&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="467">
          <span class="hits">1</span>
          
          <code class="ruby">			time = DateTime.current.to_i + 10000</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="468">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;edit_event&#39;, { format: &#39;json&#39;, event: @event_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="469">
          
          
          <code class="ruby">				title: &#39;New Test Title&#39;, time: time, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="470">
          
          
          <code class="ruby">				description: &#39;New testing description&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="471">
          
          
          <code class="ruby">				location: &#39;A new testing facility&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="472">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="473">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.name.should eq &#39;New Test Title&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="474">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.description.should eq &#39;New testing description&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="475">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.location.should eq &#39;A new testing facility&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="476">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.time.should eq time</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="477">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="478">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="479">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should update the filled fields if some are ommitted&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="480">
          <span class="hits">1</span>
          
          <code class="ruby">			time = DateTime.current.to_i + 10000</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="481">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;edit_event&#39;, { format: &#39;json&#39;, event: @event_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="482">
          
          
          <code class="ruby">				location: &#39;A new testing facility&#39;, time: time }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="483">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="484">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.name.should eq &#39;Test Event&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="485">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.description.should eq &#39;&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="486">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.location.should eq &#39;A new testing facility&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="487">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.time.should eq time</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="488">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="489">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="490">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should fail if not an admin&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="491">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @other_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="492">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;edit_event&#39;, { format: &#39;json&#39;, event: @event_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="493">
          
          
          <code class="ruby">				title: &#39;New Test Title&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="494">
          
          
          <code class="ruby">				description: &#39;New testing description&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="495">
          
          
          <code class="ruby">				location: &#39;A new testing facility&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="496">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="497">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="498">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.name.should eq &#39;Test Event&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="499">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.description.should eq &#39;&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="500">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.location.should eq &#39;&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="501">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="502">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="503">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with invalid inputs&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="504">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - name too long&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="505">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;edit_event&#39;, { format: &#39;json&#39;, event: @event_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="506">
          
          
          <code class="ruby">					title: &#39;a&#39; * 60 } }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="507">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_NAME }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="508">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="509">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - blank name&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="510">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;edit_event&#39;, { format: &#39;json&#39;, event: @event_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="511">
          
          
          <code class="ruby">					title: &#39;&#39; } }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="512">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_NAME }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="513">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="514">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - blank time&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="515">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;edit_event&#39;, { format: &#39;json&#39;, event: @event_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="516">
          
          
          <code class="ruby">					time: &#39;&#39; } }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="517">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_TIME }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="518">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="519">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - time in the past&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="520">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;edit_event&#39;, { format: &#39;json&#39;, event: @event_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="521">
          
          
          <code class="ruby">					time: DateTime.current.to_i - 50 } }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="522">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_TIME }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="523">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="524">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="525">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="526">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="474b13d70b0f68357d4d042a2685ca400a9a79da">
  <div class="header">
    <h3>spec/controllers/groups_controller_spec.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>343</b> relevant lines. 
      <span class="green"><b>343</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;spec_helper&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;json&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">describe GroupsController do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when creating a group (group/create_group)&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="15" data-linenumber="8">
          <span class="hits">15</span>
          
          <code class="ruby">			@user = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="15" data-linenumber="10">
          <span class="hits">15</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="covered" data-hits="15" data-linenumber="11">
          <span class="hits">15</span>
          
          <code class="ruby">			@token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="15" data-linenumber="12">
          <span class="hits">15</span>
          
          <code class="ruby">			@user.update_attribute(:remember_token, User.hash(@token))</code>
        </li>
      
        <li class="covered" data-hits="15" data-linenumber="13">
          <span class="hits">15</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="16">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with valid inputs, no description&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="17">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="18">
          <span class="hits">5</span>
          
          <code class="ruby">				@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">					password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="20">
          <span class="hits">5</span>
          
          <code class="ruby">				@other.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="21">
          <span class="hits">5</span>
          
          <code class="ruby">				post &#39;create_group&#39;, { format: &#39;json&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby">					user_list: &quot;#{@user.email},#{@other.email}&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby">					name: &quot;Test Group&quot; }</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="24">
          <span class="hits">5</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="25">
          <span class="hits">5</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="26">
          <span class="hits">5</span>
          
          <code class="ruby">				@group_id = JSON.parse(response.body)[&#39;group&#39;]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="29">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="31">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;the group_list of the users involved&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="32">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { @user.group_list.should include(@group_id) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="33">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { @other.group_list.should include(@group_id) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="35">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="36">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;the created group&quot; do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="37">
          <span class="hits">3</span>
          
          <code class="ruby">				before { @group = Group.find(@group_id) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="38">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { @group.name.should eq &quot;Test Group&quot; }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="39">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { @group.description.should eq &#39;&#39; }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="40">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="41">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="42">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="43">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with valid inputs including description&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="44">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="45">
          <span class="hits">5</span>
          
          <code class="ruby">				@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="46">
          
          
          <code class="ruby">					password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="47">
          <span class="hits">5</span>
          
          <code class="ruby">				@other.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="48">
          <span class="hits">5</span>
          
          <code class="ruby">				post &#39;create_group&#39;, { format: &#39;json&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="49">
          
          
          <code class="ruby">					user_list: &quot;#{@user.email},#{@other.email}&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="50">
          
          
          <code class="ruby">					name: &quot;Test Group&quot;, description: &quot;Test Group Here&quot; }</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="51">
          <span class="hits">5</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="52">
          <span class="hits">5</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="53">
          <span class="hits">5</span>
          
          <code class="ruby">				@group_id = JSON.parse(response.body)[&#39;group&#39;]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="54">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="55">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="56">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="57">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="58">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;the group_list of the users involved&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="59">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { @user.group_list.should include(@group_id) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="60">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { @other.group_list.should include(@group_id) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="61">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="62">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="63">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;the created group&quot; do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="64">
          <span class="hits">3</span>
          
          <code class="ruby">				before { @group = Group.find(@group_id) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="65">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { @group.name.should eq &quot;Test Group&quot; }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="66">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { @group.description.should eq &quot;Test Group Here&quot; }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="67">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="68">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="69">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="70">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;while not logged in&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="71">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @request.cookies[&#39;current_user_token&#39;] = &#39;invalid token&#39; }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="72">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="73">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should return err_code of ERR_INVALID_SESSION&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="74">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;create_group&#39;, { format: &#39;json&#39;, user_list: @user.email,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="75">
          
          
          <code class="ruby">					title: &quot;Test Group&quot; }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="76">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="77">
          <span class="hits">1</span>
          
          <code class="ruby">				response.status.should eq 200</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="78">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_SESSION</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="79">
          <span class="hits">1</span>
          
          <code class="ruby">				Group.find_by(name: &quot;Test Group&quot;).should eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="80">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="81">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="82">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="83">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with invalid/missing inputs&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="84">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - missing name&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="85">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;create_group&#39;, { format: &#39;json&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="86">
          
          
          <code class="ruby">					user_list: @user.email } }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="87">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_NAME }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="88">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="89">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - missing user_list&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="90">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;create_group&#39;, { format: &#39;json&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="91">
          
          
          <code class="ruby">					name: &quot;Test Group&quot; } }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="92">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="93">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="94">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - invalid user_list 1&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="95">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;create_group&#39;, { format: &#39;json&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="96">
          
          
          <code class="ruby">					name: &quot;Test Group&quot;, user_list: &quot;userid&quot;} }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="97">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="98">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="99">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - invalid user_list 2&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="100">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;create_group&#39;, { format: &#39;json&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="101">
          
          
          <code class="ruby">					name: &quot;Test Group&quot;, user_list: &quot;#{@user.email},userid&quot;} }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="102">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="103">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="104">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="105">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="106">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="107">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when adding new users (group/add_users)&quot; do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="108">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="109">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="110">
          <span class="hits">5</span>
          
          <code class="ruby">			@user = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="111">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="112">
          <span class="hits">5</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="113">
          <span class="hits">5</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="114">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="115">
          <span class="hits">5</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="116">
          <span class="hits">5</span>
          
          <code class="ruby">			@group_id = Group.add_group(&quot;Test Group&quot;, [@user.id, @other.id])</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="117">
          <span class="hits">5</span>
          
          <code class="ruby">			@group = Group.find(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="118">
          <span class="hits">5</span>
          
          <code class="ruby">			@user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="119">
          <span class="hits">5</span>
          
          <code class="ruby">			@user.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="120">
          <span class="hits">5</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="121">
          <span class="hits">5</span>
          
          <code class="ruby">			@user.update_attribute(:remember_token, User.hash(@user_token))</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="122">
          <span class="hits">5</span>
          
          <code class="ruby">			@new_user1 = User.new(name: &quot;Friend One&quot;, email: &quot;friend1@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="123">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="124">
          <span class="hits">5</span>
          
          <code class="ruby">			@new_user1.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="125">
          <span class="hits">5</span>
          
          <code class="ruby">			@new_user2 = User.new(name: &quot;Friend Two&quot;, email: &quot;friend2@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="126">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="127">
          <span class="hits">5</span>
          
          <code class="ruby">			@new_user2.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="128">
          <span class="hits">5</span>
          
          <code class="ruby">			@new_user1.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="129">
          <span class="hits">5</span>
          
          <code class="ruby">			@new_user2.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="130">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="131">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="132">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;when adding as member of the group&quot; do</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="133">
          <span class="hits">4</span>
          
          <code class="ruby">			before { @request.cookies[&#39;current_user_token&#39;] = @user_token }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="134">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;with all valid users&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="135">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="136">
          <span class="hits">1</span>
          
          <code class="ruby">					post &#39;add_users&#39;, { format: &#39;json&#39;, group: @group_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="137">
          
          
          <code class="ruby">						user_list: &quot;friend1@example.com,friend2@example.com&quot; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="138">
          <span class="hits">1</span>
          
          <code class="ruby">					@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="139">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="140">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user1.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="141">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="142">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="143">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should be successful&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="144">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="145">
          <span class="hits">1</span>
          
          <code class="ruby">					@user.group_list.should include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="146">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.group_list.should include(@group_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="147">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user1.group_list.should include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="148">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.group_list.should include(@group_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="149">
          <span class="hits">1</span>
          
          <code class="ruby">					@group.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="150">
          <span class="hits">1</span>
          
          <code class="ruby">					@group.user_list.should include(@new_user1.id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="151">
          <span class="hits">1</span>
          
          <code class="ruby">					@group.user_list.should include(@new_user2.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="152">
          
          
          <code class="ruby">				end				 </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="153">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="154">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="155">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;with an invalid user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="156">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="157">
          <span class="hits">1</span>
          
          <code class="ruby">					post &#39;add_users&#39;, { format: &#39;json&#39;, group: @group_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="158">
          
          
          <code class="ruby">						user_list: &quot;ran_email_bad@example.com,friend2@example.com&quot; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="159">
          <span class="hits">1</span>
          
          <code class="ruby">					@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="160">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="161">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user1.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="162">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="163">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="164">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should return an error&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="165">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="166">
          <span class="hits">1</span>
          
          <code class="ruby">					@user.group_list.should include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="167">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.group_list.should include(@group_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="168">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user1.group_list.should_not include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="169">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.group_list.should_not include(@group_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="170">
          <span class="hits">1</span>
          
          <code class="ruby">					@group.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="171">
          <span class="hits">1</span>
          
          <code class="ruby">					@group.user_list.should_not include(@new_user1.id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="172">
          <span class="hits">1</span>
          
          <code class="ruby">					@group.user_list.should_not include(@new_user2.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="173">
          
          
          <code class="ruby">				end	</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="174">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="175">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="176">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;with a duplicate user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="177">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="178">
          <span class="hits">1</span>
          
          <code class="ruby">					post &#39;add_users&#39;, { format: &#39;json&#39;, group: @group_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="179">
          
          
          <code class="ruby">						user_list: &quot;t_other@example.com,friend2@example.com&quot; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="180">
          <span class="hits">1</span>
          
          <code class="ruby">					@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="181">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="182">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user1.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="183">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="184">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="185">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should be successful but ignore duplicate&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="186">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="187">
          <span class="hits">1</span>
          
          <code class="ruby">					@user.group_list.should include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="188">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.group_list.should include(@group_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="189">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.group_list.should have(1).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="190">
          <span class="hits">1</span>
          
          <code class="ruby">					@new_user2.group_list.should include(@group_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="191">
          <span class="hits">1</span>
          
          <code class="ruby">					@group.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="192">
          <span class="hits">1</span>
          
          <code class="ruby">					@group.user_list.should have(3).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="193">
          <span class="hits">1</span>
          
          <code class="ruby">					@group.user_list.should include(@new_user2.id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="194">
          <span class="hits">1</span>
          
          <code class="ruby">					@group.user_list.should_not include(@new_user1.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="195">
          
          
          <code class="ruby">				end	</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="196">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="197">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="198">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="199">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;when adding as a non-member&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="200">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="201">
          <span class="hits">1</span>
          
          <code class="ruby">				new_user1_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="202">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user1.update_attribute(:remember_token, User.hash(new_user1_token))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="203">
          <span class="hits">1</span>
          
          <code class="ruby">				@request.cookies[&#39;current_user_token&#39;] = new_user1_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="204">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;add_users&#39;, { format: &#39;json&#39;, group: @group_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="205">
          
          
          <code class="ruby">					user_list: &quot;friend1@example.com,friend2@example.com&quot; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="206">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="207">
          <span class="hits">1</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="208">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user1.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="209">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user2.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="210">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="211">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should fail with an error&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="212">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="213">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.group_list.should include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="214">
          <span class="hits">1</span>
          
          <code class="ruby">				@other.group_list.should include(@group_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="215">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user1.group_list.should_not include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="216">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user2.group_list.should_not include(@group_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="217">
          <span class="hits">1</span>
          
          <code class="ruby">				@group.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="218">
          <span class="hits">1</span>
          
          <code class="ruby">				@group.user_list.should_not include(@new_user1.id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="219">
          <span class="hits">1</span>
          
          <code class="ruby">				@group.user_list.should_not include(@new_user2.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="220">
          
          
          <code class="ruby">			end	</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="221">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="222">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="223">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;when adding to an invalid group&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="224">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="225">
          <span class="hits">1</span>
          
          <code class="ruby">				@request.cookies[&#39;current_user_token&#39;] = @user_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="226">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;add_users&#39;, { format: &#39;json&#39;, group: 93452345,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="227">
          
          
          <code class="ruby">					user_list: &quot;friend1@example.com,friend2@example.com&quot; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="228">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="229">
          <span class="hits">1</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="230">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user1.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="231">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user2.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="232">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="233">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should fail with an error&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="234">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="235">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.group_list.should include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="236">
          <span class="hits">1</span>
          
          <code class="ruby">				@other.group_list.should include(@group_id) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="237">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user1.group_list.should_not include(93452345)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="238">
          <span class="hits">1</span>
          
          <code class="ruby">				@new_user2.group_list.should_not include(93452345) </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="239">
          <span class="hits">1</span>
          
          <code class="ruby">				@group.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="240">
          
          
          <code class="ruby">			end	</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="241">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="242">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="243">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="244">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when viewing a group (group/view)&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="245">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="246">
          <span class="hits">5</span>
          
          <code class="ruby">			@user = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="247">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="248">
          <span class="hits">5</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="249">
          <span class="hits">5</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="250">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="251">
          <span class="hits">5</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="252">
          <span class="hits">5</span>
          
          <code class="ruby">			@group1_id = Group.add_group(&quot;Test Group 1&quot;, [@user.id, @other.id], &quot;Testing Group&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="253">
          <span class="hits">5</span>
          
          <code class="ruby">			@group1 = Group.find(@group1_id)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="254">
          <span class="hits">5</span>
          
          <code class="ruby">			@group2_id = Group.add_group(&quot;Test Group 2&quot;, [@user.id, @other.id])</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="255">
          <span class="hits">5</span>
          
          <code class="ruby">			@group2 = Group.find(@group2_id)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="256">
          <span class="hits">5</span>
          
          <code class="ruby">			@user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="257">
          <span class="hits">5</span>
          
          <code class="ruby">			@user.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="258">
          <span class="hits">5</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="259">
          <span class="hits">5</span>
          
          <code class="ruby">			@user.update_attribute(:remember_token, User.hash(@user_token))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="260">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="261">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="262">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should fail if the user isn&#39;t signed in&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="263">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = &#39;aBdsfg135_123&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="264">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;view&#39;, { format: &#39;json&#39;, group: @group1_id }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="265">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_SESSION</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="266">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="267">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="268">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should fail if requested from a nonmember&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="269">
          <span class="hits">1</span>
          
          <code class="ruby">			user2 = User.new(name: &quot;User Two&quot;, email: &quot;user2@example.com&quot;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="270">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="271">
          <span class="hits">1</span>
          
          <code class="ruby">			user2_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="272">
          <span class="hits">1</span>
          
          <code class="ruby">			user2.update_attribute(:remember_token, User.hash(user2_token))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="273">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = user2_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="274">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;view&#39;, { format: &#39;json&#39;, group: @group1_id }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="275">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="276">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="277">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="278">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should fail if the group ID isn&#39;t valid&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="279">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @user_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="280">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;view&#39;, { format: &#39;json&#39;, group: 234525731 }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="281">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_FIELD</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="282">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="283">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="284">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should return the correct fields for group 1&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="285">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @user_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="286">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;view&#39;, { format: &#39;json&#39;, group: @group1_id }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="287">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="288">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;group&#39;].should eq @group1_id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="289">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;name&#39;].should eq &quot;Test Group 1&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="290">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;users&#39;][&#39;user_count&#39;].should eq 2</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="291">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;description&#39;].should eq &quot;Testing Group&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="292">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="293">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="294">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should return the correct fields for group 2&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="295">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @user_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="296">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;view&#39;, { format: &#39;json&#39;, group: @group2_id }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="297">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="298">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;group&#39;].should eq @group2_id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="299">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;name&#39;].should eq &quot;Test Group 2&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="300">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;users&#39;][&#39;user_count&#39;].should eq 2</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="301">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;description&#39;].should eq &quot;&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="302">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="303">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="304">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="305">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when removing a user (group/remove_user)&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="306">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="307">
          <span class="hits">4</span>
          
          <code class="ruby">			@user = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="308">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="309">
          <span class="hits">4</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="310">
          <span class="hits">4</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="311">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="312">
          <span class="hits">4</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="313">
          <span class="hits">4</span>
          
          <code class="ruby">			@group_id = Group.add_group(&quot;Test Group&quot;, [@user.id, @other.id])</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="314">
          <span class="hits">4</span>
          
          <code class="ruby">			@group = Group.find(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="315">
          <span class="hits">4</span>
          
          <code class="ruby">			@user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="316">
          <span class="hits">4</span>
          
          <code class="ruby">			@user.reload</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="317">
          <span class="hits">4</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="318">
          <span class="hits">4</span>
          
          <code class="ruby">			@user.update_attribute(:remember_token, User.hash(@user_token))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="319">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="320">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="321">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should do nothing if attempted by a user not in the group&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="322">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user = User.new(name: &quot;Test Other&quot;, email: &quot;test99@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="323">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="324">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user.add</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="325">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="326">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user.update_attribute(:remember_token, User.hash(new_user_token))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="327">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = new_user_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="328">
          <span class="hits">1</span>
          
          <code class="ruby">			delete &#39;remove_user&#39;, { format: &#39;json&#39;, group: @group_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="329">
          
          
          <code class="ruby">				user_remove: @user.email }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="330">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="331">
          <span class="hits">1</span>
          
          <code class="ruby">			@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="332">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="333">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="334">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.user_list.should include(@user.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="335">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="336">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="337">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should do nothing if attempting to remove a user not in the group&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="338">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user = User.new(name: &quot;Test Other&quot;, email: &quot;test99@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="339">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="340">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user.add</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="341">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @user_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="342">
          <span class="hits">1</span>
          
          <code class="ruby">			delete &#39;remove_user&#39;, { format: &#39;json&#39;, group: @group_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="343">
          
          
          <code class="ruby">				user_remove: new_user.email }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="344">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="345">
          <span class="hits">1</span>
          
          <code class="ruby">			@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="346">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="347">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="348">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.user_list.should include(@user.id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="349">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.user_list.should include(@other.id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="350">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.user_list.should_not include(new_user.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="351">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="352">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="353">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should properly remove a valid other user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="354">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @user_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="355">
          <span class="hits">1</span>
          
          <code class="ruby">			delete &#39;remove_user&#39;, { format: &#39;json&#39;, group: @group_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="356">
          
          
          <code class="ruby">				user_remove: @other.email }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="357">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="358">
          <span class="hits">1</span>
          
          <code class="ruby">			@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="359">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="360">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="361">
          <span class="hits">1</span>
          
          <code class="ruby">			@user.group_list.should include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="362">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.user_list.should include(@user.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="363">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="364">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.user_list.should_not include(@other.id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="365">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.group_list.should_not include(@group_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="366">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="367">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="368">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should properly remove itself if valid user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="369">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @user_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="370">
          <span class="hits">1</span>
          
          <code class="ruby">			delete &#39;remove_user&#39;, { format: &#39;json&#39;, group: @group_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="371">
          
          
          <code class="ruby">				user_remove: @user.email }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="372">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="373">
          <span class="hits">1</span>
          
          <code class="ruby">			@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="374">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="375">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="376">
          <span class="hits">1</span>
          
          <code class="ruby">			@user.group_list.should_not include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="377">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.user_list.should_not include(@user.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="378">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="379">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.user_list.should include(@other.id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="380">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.group_list.should include(@group_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="381">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="382">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="383">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="384">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when deleting a group (group/delete_group)&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="385">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="386">
          <span class="hits">2</span>
          
          <code class="ruby">			@user = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="387">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="388">
          <span class="hits">2</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="389">
          <span class="hits">2</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="390">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="391">
          <span class="hits">2</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="392">
          <span class="hits">2</span>
          
          <code class="ruby">			@group_id = Group.add_group(&quot;Test Group&quot;, [@user.id, @other.id], &quot;Testing Group&quot;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="393">
          <span class="hits">2</span>
          
          <code class="ruby">			@group = Group.find(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="394">
          <span class="hits">2</span>
          
          <code class="ruby">			@user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="395">
          <span class="hits">2</span>
          
          <code class="ruby">			@user.reload</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="396">
          <span class="hits">2</span>
          
          <code class="ruby">			@user.update_attribute(:remember_token, User.hash(@user_token))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="397">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="398">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="399">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should do nothing if a nonmember cancels it&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="400">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user = User.new(name: &quot;New User&quot;, email: &quot;new@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="401">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="402">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user.add</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="403">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="404">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user.update_attribute(:remember_token, User.hash(new_user_token))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="405">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = new_user_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="406">
          <span class="hits">1</span>
          
          <code class="ruby">			delete &#39;delete_group&#39;, { format: &#39;json&#39;, group: @group_id }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="407">
          <span class="hits">1</span>
          
          <code class="ruby">			@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="408">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="409">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="410">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="411">
          <span class="hits">1</span>
          
          <code class="ruby">			@user.group_list.should include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="412">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.group_list.should include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="413">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.user_list.should include(@user.id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="414">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.user_list.should include(@other.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="415">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="416">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="417">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should properly cancel a valid group&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="418">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @user_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="419">
          <span class="hits">1</span>
          
          <code class="ruby">			delete &#39;delete_group&#39;, { format: &#39;json&#39;, group: @group_id }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="420">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="421">
          <span class="hits">1</span>
          
          <code class="ruby">			@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="422">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="423">
          <span class="hits">1</span>
          
          <code class="ruby">			@user.group_list.should_not include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="424">
          <span class="hits">1</span>
          
          <code class="ruby">			@other.group_list.should_not include(@group_id)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="425">
          <span class="hits">2</span>
          
          <code class="ruby">			expect { Group.find(@group_id) }.to raise_error(ActiveRecord::RecordNotFound)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="426">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="427">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="428">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="429">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when editing a group (group/edit_group)&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="430">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="431">
          <span class="hits">5</span>
          
          <code class="ruby">			@user = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="432">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="433">
          <span class="hits">5</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="434">
          <span class="hits">5</span>
          
          <code class="ruby">			@user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="435">
          <span class="hits">5</span>
          
          <code class="ruby">			@user.update_attribute(:remember_token, User.hash(@user_token))</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="436">
          <span class="hits">5</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = @user_token</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="437">
          <span class="hits">5</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="438">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="439">
          <span class="hits">5</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="440">
          <span class="hits">5</span>
          
          <code class="ruby">			@group_id = Group.add_group(&quot;Test Group&quot;, [@user.id, @other.id])</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="441">
          <span class="hits">5</span>
          
          <code class="ruby">			@user.reload</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="442">
          <span class="hits">5</span>
          
          <code class="ruby">			@group = Group.find(@group_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="443">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="444">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="445">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should update the fields if they are all filled out and valid&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="446">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;edit_group&#39;, { format: &#39;json&#39;, group: @group_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="447">
          
          
          <code class="ruby">				name: &#39;New Test Title&#39;, description: &#39;New testing description&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="448">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="449">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.name.should eq &#39;New Test Title&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="450">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.description.should eq &#39;New testing description&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="451">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="452">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="453">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should update the filled fields if some are ommitted&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="454">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;edit_group&#39;, { format: &#39;json&#39;, group: @group_id, name: &#39;New Test Title&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="455">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="456">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.name.should eq &#39;New Test Title&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="457">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.description.should eq &#39;&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="458">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="459">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="460">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should fail if not a member&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="461">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user = User.new(name: &quot;New User&quot;, email: &quot;new@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="462">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="463">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user.add</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="464">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="465">
          <span class="hits">1</span>
          
          <code class="ruby">			new_user.update_attribute(:remember_token, User.hash(new_user_token))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="466">
          <span class="hits">1</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] = new_user_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="467">
          <span class="hits">1</span>
          
          <code class="ruby">			post &#39;edit_group&#39;, { format: &#39;json&#39;, group: @group_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="468">
          
          
          <code class="ruby">				name: &#39;New Test Title&#39;, description: &#39;New testing description&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="469">
          <span class="hits">1</span>
          
          <code class="ruby">			JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_PERMISSIONS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="470">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="471">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.name.should eq &#39;Test Group&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="472">
          <span class="hits">1</span>
          
          <code class="ruby">			@group.description.should eq &#39;&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="473">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="474">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="475">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with invalid inputs&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="476">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - name too long&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="477">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;edit_group&#39;, { format: &#39;json&#39;, group: @group_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="478">
          
          
          <code class="ruby">					name: &#39;a&#39; * 60 } }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="479">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_NAME }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="480">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="481">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot; - blank name&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="482">
          <span class="hits">2</span>
          
          <code class="ruby">				before { post &#39;edit_group&#39;, { format: &#39;json&#39;, group: @group_id,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="483">
          
          
          <code class="ruby">					name: &#39;&#39; } }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="484">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_NAME }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="485">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="486">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="487">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="488">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="875787c2ee5540cb68a15eb05b7c9c81aa32c834">
  <div class="header">
    <h3>spec/controllers/users_controller_spec.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>411</b> relevant lines. 
      <span class="green"><b>411</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;spec_helper&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;json&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">describe UsersController do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;add_user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="8">
          <span class="hits">3</span>
          
          <code class="ruby">			@user = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;, password: &quot;nopassword&quot;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="11">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with valid login credentials&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should return { err_code: SUCCESS, id: user_id }&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="13">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;add_user&#39;, { format: &#39;json&#39;, name: &#39;Test Name&#39;, email: &#39;test@example.com&#39;, password: &#39;nopassword&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="14">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="15">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;user_id&#39;].should_not eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="17">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="19">
          <span class="hits">1</span>
          
          <code class="ruby">		describe  &quot;with invalid login credentials&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="20">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should return { err_code: ERR_INVALID_NAME}&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;add_user&#39;, { format: &#39;json&#39;, name: &#39; Test Name&#39;, email: &#39;test@example.com&#39;, password: &#39;nopassword&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="22">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_INVALID_NAME</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="23">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;user_id&#39;].should eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="26">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should return { err_code: ERR_EMAIL_TAKEN}&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="27">
          <span class="hits">1</span>
          
          <code class="ruby">				User.new(name: &#39;Dummy&#39;, email: &#39;test@example.com&#39;, password: &#39;password&#39;).add</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="28">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;add_user&#39;, { format: &#39;json&#39;, name: &#39;Test Name&#39;, email: &#39;test@example.com&#39;, password: &#39;nopassword&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="29">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_EMAIL_TAKEN</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="30">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;user_id&#39;].should eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="31">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="32">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="35">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;login_user, logout_user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="36">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="37">
          <span class="hits">4</span>
          
          <code class="ruby">			@user = User.new(name: &#39;Test Name&#39;, email: &#39;test@example.com&#39;, password: &#39;nopassword&#39;)</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="38">
          <span class="hits">4</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="39">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="40">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="41">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;login with proper credentials&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="42">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should return SUCCESS, and change remember_token of user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="43">
          <span class="hits">1</span>
          
          <code class="ruby">				old_token = @user.remember_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="44">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;login_user&#39;, { format: &#39;json&#39;, email: &#39;test@example.com&#39;, password: &#39;nopassword&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="45">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="46">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;user_id&#39;].should eq @user.id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="47">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;name&#39;].should eq @user.name</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="48">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;email&#39;].should eq @user.email</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="49">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="50">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.remember_token.should_not eq old_token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="51">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="52">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="53">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="54">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;login with improper credentials&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="55">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should return ERR_BAD_CREDENTIALS, and change remember_token of user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="56">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;login_user&#39;, { format: &#39;json&#39;, email: &#39;test@example.com&#39;, password: &#39;yespassword&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="57">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_BAD_CREDENTIALS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="58">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="59">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="60">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="61">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;login with a device token&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="62">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should have user[device_token] not nil&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="63">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.device_tokens.empty?.should eq true</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="64">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;login_user&#39;, { format: &#39;json&#39;, email: &#39;test@example.com&#39;, password: &#39;nopassword&#39;, device_token: &#39;0000&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="65">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="66">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.device_tokens.empty?.should eq false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="67">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="68">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="69">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="70">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;logout user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="71">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should reset remember_token = nil&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="72">
          <span class="hits">1</span>
          
          <code class="ruby">				@user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="73">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.update_attribute(:remember_token, User.hash(@user_token))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="74">
          <span class="hits">1</span>
          
          <code class="ruby">				@request.cookies[&#39;current_user_token&#39;] =  @user_token</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="75">
          <span class="hits">1</span>
          
          <code class="ruby">				delete &#39;logout_user&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="76">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="77">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.remember_token.should_not eq User.hash(@user_token)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="78">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="79">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="80">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="81">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="82">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;auth_facebook&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="83">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="84">
          
          
          <code class="ruby">			# token may need to be refreshed with FB Graph API Explorer</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="85">
          <span class="hits">2</span>
          
          <code class="ruby">			@token = &#39;CAAG3tpE5O1UBAKl31Y80KmStU0azLLZBIgZAjJZCwvAH6EaXNDtXk9hcQVQYbioMNrb3YVsoqmTGENOO4F7zyLwYAr5ZAlJkm47TEWpETS7QZCVR5UpH9DS6eNMESHhhZAmW789KnuqDqz39ZCITQRKkpgfnLPXmSHEuQPqSDbNZCZBpSLzA9O1bxTjS9i2HuvJ9iACygNsGmiNxCeqimZBtyd&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="86">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="87">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="88">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;authenticate w/o token&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="89">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should return ERR_BAD_CREDENTIALS&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="90">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;auth_facebook&#39;, { format: &#39;json&#39;, facebook_id: &#39;xxxxxxxxxx&#39;, facebook_token: &#39;&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="91">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_BAD_CREDENTIALS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="92">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="93">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="94">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="95">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;autenticate w/ proper token, email not in db&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="96">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should create new user with fb_id in database&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="97">
          <span class="hits">1</span>
          
          <code class="ruby">				User.find_by(email: &#39;wufftest@gmail.com&#39;).should eq nil</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="98">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;auth_facebook&#39;, { format: &#39;json&#39;, facebook_id: &#39;100008122715374&#39;, facebook_token: @token }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="99">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="100">
          <span class="hits">1</span>
          
          <code class="ruby">				User.find_by(fb_id: &#39;100008122715374&#39;).should_not eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="101">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="102">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="103">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="104">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="105">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;get_profile_pic&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="106">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="107">
          <span class="hits">3</span>
          
          <code class="ruby">			@user = User.new(name: &#39;Test Name&#39;, email: &#39;test@example.com&#39;, password: &#39;nopassword&#39;)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="108">
          <span class="hits">3</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="109">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="110">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="111">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;try to get profile_pic without facebook_id associated with user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="112">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should return ERR_UNSUCCESSFUL&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="113">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;get_profile_pic&#39;, { format: &#39;json&#39;, email: &#39;test@example.com&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="114">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_UNSUCCESSFUL</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="115">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="116">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="117">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="118">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;try to get profile_pic given email&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="119">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should return url to profile_pic&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="120">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.update_attribute(:fb_id, &#39;517267866&#39;);</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="121">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="122">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;get_profile_pic&#39;, { format: &#39;json&#39;, email: &#39;test@example.com&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="123">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="124">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;pic_url&#39;].should_not eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="125">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="126">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="127">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="128">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;try to get profile_pic given id&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="129">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should return url to profile_pic&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="130">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.update_attribute(:fb_id, &#39;517267866&#39;);</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="131">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="132">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;get_profile_pic&#39;, { format: &#39;json&#39;, user_id: @user.id }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="133">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="134">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;pic_url&#39;].should_not eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="135">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="136">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="137">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="138">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="139">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;add_friend, delete_friend&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="140">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="141">
          <span class="hits">3</span>
          
          <code class="ruby">			@user = User.new(name: &#39;Test Name&#39;, email: &#39;test@example.com&#39;, password: &#39;nopassword&#39;)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="142">
          <span class="hits">3</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="143">
          <span class="hits">3</span>
          
          <code class="ruby">			@user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="144">
          <span class="hits">3</span>
          
          <code class="ruby">			@user.update_attribute(:remember_token, User.hash(@user_token))</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="145">
          <span class="hits">3</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="146">
          
          
          <code class="ruby">					password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="147">
          <span class="hits">3</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="148">
          <span class="hits">3</span>
          
          <code class="ruby">			@other_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="149">
          <span class="hits">3</span>
          
          <code class="ruby">			@other.update_attribute(:remember_token, User.hash(@other_token))</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="150">
          <span class="hits">3</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] =  @user_token </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="151">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="152">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="153">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;add_friend with valid friend user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="154">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;successfully calls User#concat_friend, which is unit tested&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="155">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;add_friend&#39;, { format: &#39;json&#39;, friend_email: &#39;t_other@example.com&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="156">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="157">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="158">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="159">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="160">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;add_friend with invalid friend user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="161">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;err_code = ERR_UNSUCCESSFUL&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="162">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;add_friend&#39;, { format: &#39;json&#39;, friend_email: &#39;tttt_other@example.com&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="163">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq ERR_UNSUCCESSFUL</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="164">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="165">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="166">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="167">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;delete_friend deletes user correlated with friend_email if user exists, else nothing happens&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="168">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;successfully calls User#remobe_friend, which is unit tested&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="169">
          <span class="hits">1</span>
          
          <code class="ruby">				post &#39;delete_friend&#39;, { format: &#39;json&#39;, friend_email: &#39;t_other@example,com&#39; }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="170">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="171">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="172">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="173">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="174">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="175">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;has_notifications, get_notifications, clear_notifications&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="176">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="177">
          <span class="hits">5</span>
          
          <code class="ruby">			@user = User.new(name: &#39;Test Name&#39;, email: &#39;test@example.com&#39;, password: &#39;nopassword&#39;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="178">
          <span class="hits">5</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="179">
          <span class="hits">5</span>
          
          <code class="ruby">			@user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="180">
          <span class="hits">5</span>
          
          <code class="ruby">			@user.update_attribute(:remember_token, User.hash(@user_token))</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="181">
          <span class="hits">5</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="182">
          
          
          <code class="ruby">					password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="183">
          <span class="hits">5</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="184">
          <span class="hits">5</span>
          
          <code class="ruby">			@other_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="185">
          <span class="hits">5</span>
          
          <code class="ruby">			@other.update_attribute(:remember_token, User.hash(@other_token))</code>
        </li>
      
        <li class="covered" data-hits="5" data-linenumber="186">
          <span class="hits">5</span>
          
          <code class="ruby">			@request.cookies[&#39;current_user_token&#39;] =  @user_token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="187">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="188">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="189">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;has_notifications returns bool&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="190">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;returns false when notif list empty&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="191">
          <span class="hits">1</span>
          
          <code class="ruby">				get &#39;has_notifications?&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="192">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;notif&#39;].should eq false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="193">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="194">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="195">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;returns true when notif list not 0&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="196">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.post_notification(FriendNotification.new(@other))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="197">
          <span class="hits">1</span>
          
          <code class="ruby">				get &#39;has_notifications?&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="198">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;notif&#39;].should eq true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="199">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="200">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="201">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="202">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;get_notifications returns JSON dictionary of count of notif and each key(notif) = count #&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="203">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;returns 0 count&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="204">
          <span class="hits">1</span>
          
          <code class="ruby">				get &#39;get_notifications&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="205">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;notif_count&#39;].should eq 0</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="206">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="207">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="208">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;returns 1 count after adding one notification and response[1] != nil&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="209">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.post_notification(FriendNotification.new(@other))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="210">
          <span class="hits">1</span>
          
          <code class="ruby">				get &#39;get_notifications&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="211">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;notif_count&#39;].should eq 1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="212">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;1&#39;].should_not eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="213">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="214">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="215">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="216">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;clear_notifications returns SUCCESS and clears notification_list&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="217">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;returns SUCCESS&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="218">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.post_notification(FriendNotification.new(@other))</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="219">
          <span class="hits">1</span>
          
          <code class="ruby">				delete &#39;clear_notifications&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="220">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="221">
          <span class="hits">1</span>
          
          <code class="ruby">				@user.notification_list.size.should eq 0</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="222">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="223">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="224">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="225">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="226">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="227">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;get_events&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="228">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="229">
          <span class="hits">14</span>
          
          <code class="ruby">			@user = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="230">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="231">
          <span class="hits">14</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="232">
          <span class="hits">14</span>
          
          <code class="ruby">			@user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="233">
          <span class="hits">14</span>
          
          <code class="ruby">			@user.update_attribute(:remember_token, User.hash(@user_token))</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="234">
          <span class="hits">14</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="235">
          
          
          <code class="ruby">					password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="236">
          <span class="hits">14</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="237">
          <span class="hits">14</span>
          
          <code class="ruby">			@other_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="14" data-linenumber="238">
          <span class="hits">14</span>
          
          <code class="ruby">			@other.update_attribute(:remember_token, User.hash(@other_token))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="239">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="240">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="241">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with a single event&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="242">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="243">
          <span class="hits">4</span>
          
          <code class="ruby">				@event_id = Event.add_event(&quot;Test Event&quot;, @user.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="244">
          
          
          <code class="ruby">					DateTime.current.to_i + 10, [@user.id, @other.id] )</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="245">
          <span class="hits">4</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="246">
          <span class="hits">4</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="247">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="248">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;for the event creator&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="249">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="250">
          <span class="hits">2</span>
          
          <code class="ruby">					@request.cookies[&#39;current_user_token&#39;] =  @user_token </code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="251">
          <span class="hits">2</span>
          
          <code class="ruby">					get &#39;get_events&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="252">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="253">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="254">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="255">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;event_count&#39;].should eq 1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="256">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;1&#39;][&#39;event&#39;].should eq @event_id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="257">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;1&#39;][&#39;title&#39;].should eq &quot;Test Event&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="258">
          <span class="hits">1</span>
          
          <code class="ruby">					users = JSON.parse(response.body)[&#39;1&#39;][&#39;users&#39;]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="259">
          <span class="hits">1</span>
          
          <code class="ruby">					user_count = users[&#39;user_count&#39;]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="260">
          <span class="hits">1</span>
          
          <code class="ruby">					user_count.should eq 2</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="261">
          
          
          <code class="ruby">					# Possible refactoring here</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="262">
          <span class="hits">1</span>
          
          <code class="ruby">					user_names = []</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="263">
          <span class="hits">1</span>
          
          <code class="ruby">					user_email = []</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="264">
          <span class="hits">1</span>
          
          <code class="ruby">					user_status = []</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="265">
          <span class="hits">1</span>
          
          <code class="ruby">					for i in 1..user_count</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="266">
          <span class="hits">2</span>
          
          <code class="ruby">						user_names &lt;&lt;= users[i.to_s][&#39;name&#39;]</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="267">
          <span class="hits">2</span>
          
          <code class="ruby">						user_email &lt;&lt;= users[i.to_s][&#39;email&#39;]</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="268">
          <span class="hits">2</span>
          
          <code class="ruby">						user_status &lt;&lt;= users[i.to_s][&#39;status&#39;]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="269">
          
          
          <code class="ruby">					end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="270">
          <span class="hits">1</span>
          
          <code class="ruby">					user_names.should include(&quot;Test Name&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="271">
          <span class="hits">1</span>
          
          <code class="ruby">					user_names.should include(&quot;Test Other&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="272">
          <span class="hits">1</span>
          
          <code class="ruby">					user_email.should include(&quot;t_other@example.com&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="273">
          <span class="hits">1</span>
          
          <code class="ruby">					user_email.should include(&quot;test@example.com&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="274">
          <span class="hits">1</span>
          
          <code class="ruby">					user_status.should include(STATUS_ATTENDING)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="275">
          <span class="hits">1</span>
          
          <code class="ruby">					user_status.should include(STATUS_NO_RESPONSE)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="276">
          
          
          <code class="ruby">				end				</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="277">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="278">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;for the event invitee&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="279">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="280">
          <span class="hits">2</span>
          
          <code class="ruby">					@request.cookies[&#39;current_user_token&#39;] =  @other_token </code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="281">
          <span class="hits">2</span>
          
          <code class="ruby">					get &#39;get_events&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="282">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="283">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="284">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="285">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;event_count&#39;].should eq 1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="286">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;1&#39;][&#39;event&#39;].should eq @event_id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="287">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;1&#39;][&#39;title&#39;].should eq &quot;Test Event&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="288">
          
          
          <code class="ruby">				end				</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="289">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="290">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="291">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="292">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with multiple events&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="293">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="294">
          <span class="hits">4</span>
          
          <code class="ruby">				@event1_id = Event.add_event(&quot;Test Event #1&quot;, @user.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="295">
          
          
          <code class="ruby">					DateTime.current.to_i + 10, [@user.id, @other.id] )</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="296">
          <span class="hits">4</span>
          
          <code class="ruby">				@event2_id = Event.add_event(&quot;Test Event #2&quot;, @other.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="297">
          
          
          <code class="ruby">					DateTime.current.to_i + 105, [@other.id, @user.id] )</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="298">
          <span class="hits">4</span>
          
          <code class="ruby">				@event3_id = Event.add_event(&quot;Test Event #3&quot;, @other.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="299">
          
          
          <code class="ruby">					DateTime.current.to_i + 990, [@other.id] )</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="300">
          <span class="hits">4</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="301">
          <span class="hits">4</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="302">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="303">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;for the first user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="304">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="305">
          <span class="hits">2</span>
          
          <code class="ruby">					@request.cookies[&#39;current_user_token&#39;] =  @user_token </code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="306">
          <span class="hits">2</span>
          
          <code class="ruby">					get &#39;get_events&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="307">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="308">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="309">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="310">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;event_count&#39;].should eq 2</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="311">
          <span class="hits">1</span>
          
          <code class="ruby">					event_ids = [ JSON.parse(response.body)[&#39;1&#39;][&#39;event&#39;],</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="312">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;2&#39;][&#39;event&#39;] ]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="313">
          <span class="hits">1</span>
          
          <code class="ruby">					event_ids.should include(@event1_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="314">
          <span class="hits">1</span>
          
          <code class="ruby">					event_ids.should include(@event2_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="315">
          <span class="hits">1</span>
          
          <code class="ruby">					event_names = [ JSON.parse(response.body)[&#39;1&#39;][&#39;title&#39;], </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="316">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;2&#39;][&#39;title&#39;] ]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="317">
          <span class="hits">1</span>
          
          <code class="ruby">					event_names.should include(&quot;Test Event #1&quot;)	</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="318">
          <span class="hits">1</span>
          
          <code class="ruby">					event_names.should include(&quot;Test Event #2&quot;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="319">
          
          
          <code class="ruby">				end				</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="320">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="321">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;for the event invitee&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="322">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="323">
          <span class="hits">2</span>
          
          <code class="ruby">					@request.cookies[&#39;current_user_token&#39;] =  @other_token </code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="324">
          <span class="hits">2</span>
          
          <code class="ruby">					get &#39;get_events&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="325">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="326">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="327">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="328">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;event_count&#39;].should eq 3</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="329">
          <span class="hits">1</span>
          
          <code class="ruby">					event_ids = [ JSON.parse(response.body)[&#39;1&#39;][&#39;event&#39;],</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="330">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;2&#39;][&#39;event&#39;], </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="331">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;3&#39;][&#39;event&#39;] ]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="332">
          <span class="hits">1</span>
          
          <code class="ruby">					event_ids.should include(@event1_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="333">
          <span class="hits">1</span>
          
          <code class="ruby">					event_ids.should include(@event2_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="334">
          <span class="hits">1</span>
          
          <code class="ruby">					event_ids.should include(@event3_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="335">
          <span class="hits">1</span>
          
          <code class="ruby">					event_names = [ JSON.parse(response.body)[&#39;1&#39;][&#39;title&#39;], </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="336">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;2&#39;][&#39;title&#39;], </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="337">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;3&#39;][&#39;title&#39;] ]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="338">
          <span class="hits">1</span>
          
          <code class="ruby">					event_names.should include(&quot;Test Event #1&quot;)	</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="339">
          <span class="hits">1</span>
          
          <code class="ruby">					event_names.should include(&quot;Test Event #2&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="340">
          <span class="hits">1</span>
          
          <code class="ruby">					event_names.should include(&quot;Test Event #3&quot;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="341">
          
          
          <code class="ruby">				end								</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="342">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="343">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="344">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="345">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with invalid events in the user&#39;s event_list&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="346">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="347">
          <span class="hits">6</span>
          
          <code class="ruby">				@event1_id = Event.add_event(&quot;Test Event #1&quot;, @user.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="348">
          
          
          <code class="ruby">					DateTime.current.to_i + 10, [@user.id, @other.id] )</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="349">
          <span class="hits">6</span>
          
          <code class="ruby">				@event2_id = Event.add_event(&quot;Test Event #2&quot;, @other.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="350">
          
          
          <code class="ruby">					DateTime.current.to_i + 990, [@other.id] )</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="351">
          <span class="hits">6</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="352">
          <span class="hits">6</span>
          
          <code class="ruby">				@user.update_attribute(:event_list, @user.event_list &lt;&lt; @event3_id)</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="353">
          <span class="hits">6</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="354">
          <span class="hits">6</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="355">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="356">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;for the first user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="357">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="358">
          <span class="hits">3</span>
          
          <code class="ruby">					@request.cookies[&#39;current_user_token&#39;] =  @user_token </code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="359">
          <span class="hits">3</span>
          
          <code class="ruby">					get &#39;get_events&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="360">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="361">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="362">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;valid events should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="363">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;event_count&#39;].should eq 1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="364">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;1&#39;][&#39;event&#39;].should eq @event1_id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="365">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;1&#39;][&#39;title&#39;].should eq &quot;Test Event #1&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="366">
          
          
          <code class="ruby">				end				</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="367">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;invalid events should be removed from event_list&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="368">
          <span class="hits">1</span>
          
          <code class="ruby">					@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="369">
          <span class="hits">1</span>
          
          <code class="ruby">					@user.event_list.should have(1).items</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="370">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="371">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="372">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;for the other user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="373">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="374">
          <span class="hits">3</span>
          
          <code class="ruby">					@request.cookies[&#39;current_user_token&#39;] =  @other_token </code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="375">
          <span class="hits">3</span>
          
          <code class="ruby">					get &#39;get_events&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="376">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="377">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="378">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;valid events should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="379">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;event_count&#39;].should eq 2</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="380">
          <span class="hits">1</span>
          
          <code class="ruby">					event_ids = [ JSON.parse(response.body)[&#39;1&#39;][&#39;event&#39;],</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="381">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;2&#39;][&#39;event&#39;] ]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="382">
          <span class="hits">1</span>
          
          <code class="ruby">					event_ids.should include(@event1_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="383">
          <span class="hits">1</span>
          
          <code class="ruby">					event_ids.should include(@event2_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="384">
          <span class="hits">1</span>
          
          <code class="ruby">					event_names = [ JSON.parse(response.body)[&#39;1&#39;][&#39;title&#39;], </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="385">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;2&#39;][&#39;title&#39;] ]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="386">
          <span class="hits">1</span>
          
          <code class="ruby">					event_names.should include(&quot;Test Event #1&quot;)	</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="387">
          <span class="hits">1</span>
          
          <code class="ruby">					event_names.should include(&quot;Test Event #2&quot;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="388">
          
          
          <code class="ruby">				end				</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="389">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;invalid events should be removed from event_list&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="390">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="391">
          <span class="hits">1</span>
          
          <code class="ruby">					@other.event_list.should have(2).items</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="392">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="393">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="394">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="395">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="396">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="397">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;get_groups&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="398">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="399">
          <span class="hits">9</span>
          
          <code class="ruby">			@user = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="400">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="401">
          <span class="hits">9</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="402">
          <span class="hits">9</span>
          
          <code class="ruby">			@user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="403">
          <span class="hits">9</span>
          
          <code class="ruby">			@user.update_attribute(:remember_token, User.hash(@user_token))</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="404">
          <span class="hits">9</span>
          
          <code class="ruby">			@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="405">
          
          
          <code class="ruby">					password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="406">
          <span class="hits">9</span>
          
          <code class="ruby">			@other.add</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="407">
          <span class="hits">9</span>
          
          <code class="ruby">			@other_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="9" data-linenumber="408">
          <span class="hits">9</span>
          
          <code class="ruby">			@other.update_attribute(:remember_token, User.hash(@other_token))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="409">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="410">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="411">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with a single group&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="412">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="413">
          <span class="hits">2</span>
          
          <code class="ruby">				@group_id = Group.add_group(&quot;Test Group&quot;, [@user.id, @other.id] )</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="414">
          <span class="hits">2</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="415">
          <span class="hits">2</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="416">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="417">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;for the members of the group&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="418">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="419">
          <span class="hits">2</span>
          
          <code class="ruby">					@request.cookies[&#39;current_user_token&#39;] =  @user_token </code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="420">
          <span class="hits">2</span>
          
          <code class="ruby">					get &#39;get_groups&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="421">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="422">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="423">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="424">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;group_count&#39;].should eq 1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="425">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;1&#39;][&#39;group&#39;].should eq @group_id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="426">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;1&#39;][&#39;name&#39;].should eq &quot;Test Group&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="427">
          <span class="hits">1</span>
          
          <code class="ruby">					users = JSON.parse(response.body)[&#39;1&#39;][&#39;users&#39;]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="428">
          <span class="hits">1</span>
          
          <code class="ruby">					user_count = users[&#39;user_count&#39;]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="429">
          <span class="hits">1</span>
          
          <code class="ruby">					user_count.should eq 2</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="430">
          
          
          <code class="ruby">					# Possible refactoring here</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="431">
          <span class="hits">1</span>
          
          <code class="ruby">					user_names = []</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="432">
          <span class="hits">1</span>
          
          <code class="ruby">					user_email = []</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="433">
          <span class="hits">1</span>
          
          <code class="ruby">					for i in 1..user_count</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="434">
          <span class="hits">2</span>
          
          <code class="ruby">						user_names &lt;&lt;= users[i.to_s][&#39;name&#39;]</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="435">
          <span class="hits">2</span>
          
          <code class="ruby">						user_email &lt;&lt;= users[i.to_s][&#39;email&#39;]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="436">
          
          
          <code class="ruby">					end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="437">
          <span class="hits">1</span>
          
          <code class="ruby">					user_names.should include(&quot;Test Name&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="438">
          <span class="hits">1</span>
          
          <code class="ruby">					user_names.should include(&quot;Test Other&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="439">
          <span class="hits">1</span>
          
          <code class="ruby">					user_email.should include(&quot;t_other@example.com&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="440">
          <span class="hits">1</span>
          
          <code class="ruby">					user_email.should include(&quot;test@example.com&quot;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="441">
          
          
          <code class="ruby">				end				</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="442">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="443">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="444">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="445">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with multiple groups&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="446">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="447">
          <span class="hits">4</span>
          
          <code class="ruby">				@group1_id = Group.add_group(&quot;Test Group #1&quot;, [@user.id, @other.id] )</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="448">
          <span class="hits">4</span>
          
          <code class="ruby">				@group2_id = Group.add_group(&quot;Test Group #2&quot;, [@other.id, @user.id] )</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="449">
          <span class="hits">4</span>
          
          <code class="ruby">				@group3_id = Group.add_group(&quot;Test Group #3&quot;, [@other.id] )</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="450">
          <span class="hits">4</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="4" data-linenumber="451">
          <span class="hits">4</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="452">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="453">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;for the first user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="454">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="455">
          <span class="hits">2</span>
          
          <code class="ruby">					@request.cookies[&#39;current_user_token&#39;] =  @user_token </code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="456">
          <span class="hits">2</span>
          
          <code class="ruby">					get &#39;get_groups&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="457">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="458">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="459">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="460">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;group_count&#39;].should eq 2</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="461">
          <span class="hits">1</span>
          
          <code class="ruby">					group_ids = [ JSON.parse(response.body)[&#39;1&#39;][&#39;group&#39;],</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="462">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;2&#39;][&#39;group&#39;] ]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="463">
          <span class="hits">1</span>
          
          <code class="ruby">					group_ids.should include(@group1_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="464">
          <span class="hits">1</span>
          
          <code class="ruby">					group_ids.should include(@group2_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="465">
          <span class="hits">1</span>
          
          <code class="ruby">					group_names = [ JSON.parse(response.body)[&#39;1&#39;][&#39;name&#39;], </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="466">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;2&#39;][&#39;name&#39;] ]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="467">
          <span class="hits">1</span>
          
          <code class="ruby">					group_names.should include(&quot;Test Group #1&quot;)	</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="468">
          <span class="hits">1</span>
          
          <code class="ruby">					group_names.should include(&quot;Test Group #2&quot;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="469">
          
          
          <code class="ruby">				end				</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="470">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="471">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;for the other user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="472">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="473">
          <span class="hits">2</span>
          
          <code class="ruby">					@request.cookies[&#39;current_user_token&#39;] =  @other_token </code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="474">
          <span class="hits">2</span>
          
          <code class="ruby">					get &#39;get_groups&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="475">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="476">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="477">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="478">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;group_count&#39;].should eq 3</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="479">
          <span class="hits">1</span>
          
          <code class="ruby">					group_ids = [ JSON.parse(response.body)[&#39;1&#39;][&#39;group&#39;],</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="480">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;2&#39;][&#39;group&#39;], </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="481">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;3&#39;][&#39;group&#39;] ]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="482">
          <span class="hits">1</span>
          
          <code class="ruby">					group_ids.should include(@group1_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="483">
          <span class="hits">1</span>
          
          <code class="ruby">					group_ids.should include(@group2_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="484">
          <span class="hits">1</span>
          
          <code class="ruby">					group_ids.should include(@group3_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="485">
          <span class="hits">1</span>
          
          <code class="ruby">					group_names = [ JSON.parse(response.body)[&#39;1&#39;][&#39;name&#39;], </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="486">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;2&#39;][&#39;name&#39;],</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="487">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;3&#39;][&#39;name&#39;]  ]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="488">
          <span class="hits">1</span>
          
          <code class="ruby">					group_names.should include(&quot;Test Group #1&quot;)	</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="489">
          <span class="hits">1</span>
          
          <code class="ruby">					group_names.should include(&quot;Test Group #2&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="490">
          <span class="hits">1</span>
          
          <code class="ruby">					group_names.should include(&quot;Test Group #3&quot;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="491">
          
          
          <code class="ruby">				end								</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="492">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="493">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="494">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="495">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with invalid groups in the user&#39;s group_list&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="496">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="497">
          <span class="hits">3</span>
          
          <code class="ruby">				@group1_id = Group.add_group(&quot;Test Group #1&quot;, [@user.id, @other.id] )</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="498">
          <span class="hits">3</span>
          
          <code class="ruby">				@group2_id = Group.add_group(&quot;Test Group #2&quot;, [@other.id] )</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="499">
          <span class="hits">3</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="500">
          <span class="hits">3</span>
          
          <code class="ruby">				@user.update_attribute(:group_list, @user.group_list &lt;&lt; 23452345)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="501">
          <span class="hits">3</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="502">
          <span class="hits">3</span>
          
          <code class="ruby">				@other.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="503">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="504">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;for the first user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="505">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="506">
          <span class="hits">3</span>
          
          <code class="ruby">					@request.cookies[&#39;current_user_token&#39;] =  @user_token </code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="507">
          <span class="hits">3</span>
          
          <code class="ruby">					get &#39;get_groups&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="508">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="509">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="510">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;valid groups should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="511">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;group_count&#39;].should eq 1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="512">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;1&#39;][&#39;group&#39;].should eq @group1_id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="513">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;1&#39;][&#39;name&#39;].should eq &quot;Test Group #1&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="514">
          
          
          <code class="ruby">				end				</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="515">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;invalid groups should be removed from group_list&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="516">
          <span class="hits">1</span>
          
          <code class="ruby">					@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="517">
          <span class="hits">1</span>
          
          <code class="ruby">					@user.group_list.should have(1).items</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="518">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="519">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="520">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="521">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="522">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="523">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;get_friend&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="524">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="525">
          <span class="hits">7</span>
          
          <code class="ruby">			@user = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="526">
          
          
          <code class="ruby">				password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="527">
          <span class="hits">7</span>
          
          <code class="ruby">			@user.add</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="528">
          <span class="hits">7</span>
          
          <code class="ruby">			@user_token = User.new_token</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="529">
          <span class="hits">7</span>
          
          <code class="ruby">			@user.update_attribute(:remember_token, User.hash(@user_token))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="530">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="531">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="532">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with no friends&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="533">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="534">
          <span class="hits">2</span>
          
          <code class="ruby">				@request.cookies[&#39;current_user_token&#39;] =  @user_token </code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="535">
          <span class="hits">2</span>
          
          <code class="ruby">				get &#39;get_friends&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="536">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="537">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="538">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="539">
          <span class="hits">1</span>
          
          <code class="ruby">				JSON.parse(response.body)[&#39;friend_count&#39;].should eq 0</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="540">
          
          
          <code class="ruby">			end			</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="541">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="542">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="543">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with multiple friends&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="544">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="545">
          <span class="hits">2</span>
          
          <code class="ruby">				@other = User.new(name: &quot;Test Other&quot;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="546">
          
          
          <code class="ruby">					email: &quot;t_other@example.com&quot;, password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="547">
          <span class="hits">2</span>
          
          <code class="ruby">				@other.add</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="548">
          <span class="hits">2</span>
          
          <code class="ruby">				@other2 = User.new(name: &quot;Test Others&quot;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="549">
          
          
          <code class="ruby">					email: &quot;t_other2@example.com&quot;, password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="550">
          <span class="hits">2</span>
          
          <code class="ruby">				@other2.add</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="551">
          <span class="hits">2</span>
          
          <code class="ruby">				@user.concat_friend(&quot;t_other@example.com&quot;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="552">
          <span class="hits">2</span>
          
          <code class="ruby">				@user.concat_friend(&quot;t_other2@example.com&quot;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="553">
          <span class="hits">2</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="554">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="555">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;for the first user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="556">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="557">
          <span class="hits">2</span>
          
          <code class="ruby">					@request.cookies[&#39;current_user_token&#39;] =  @user_token </code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="558">
          <span class="hits">2</span>
          
          <code class="ruby">					get &#39;get_friends&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="559">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="560">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="561">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="562">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;friend_count&#39;].should eq 2</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="563">
          <span class="hits">1</span>
          
          <code class="ruby">					friend_names = [ JSON.parse(response.body)[&#39;1&#39;][&#39;name&#39;], </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="564">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;2&#39;][&#39;name&#39;] ]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="565">
          <span class="hits">1</span>
          
          <code class="ruby">					friend_names.should include(&quot;Test Other&quot;)	</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="566">
          <span class="hits">1</span>
          
          <code class="ruby">					friend_names.should include(&quot;Test Others&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="567">
          <span class="hits">1</span>
          
          <code class="ruby">					friend_emails = [ JSON.parse(response.body)[&#39;1&#39;][&#39;email&#39;], </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="568">
          
          
          <code class="ruby">						JSON.parse(response.body)[&#39;2&#39;][&#39;email&#39;] ]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="569">
          <span class="hits">1</span>
          
          <code class="ruby">					friend_emails.should include(&quot;t_other@example.com&quot;)	</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="570">
          <span class="hits">1</span>
          
          <code class="ruby">					friend_emails.should include(&quot;t_other2@example.com&quot;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="571">
          
          
          <code class="ruby">				end				</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="572">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="573">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="574">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="575">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;with invalid friends in the user&#39;s friend_list&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="576">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="577">
          <span class="hits">3</span>
          
          <code class="ruby">				@other = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="578">
          
          
          <code class="ruby">						password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="579">
          <span class="hits">3</span>
          
          <code class="ruby">				@other.add</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="580">
          <span class="hits">3</span>
          
          <code class="ruby">				@user.concat_friend(&quot;t_other@example.com&quot;)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="581">
          <span class="hits">3</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="582">
          <span class="hits">3</span>
          
          <code class="ruby">				@user.update_attribute(:friend_list, @user.friend_list &lt;&lt; 345234)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="583">
          <span class="hits">3</span>
          
          <code class="ruby">				@user.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="584">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="585">
          <span class="hits">1</span>
          
          <code class="ruby">			describe &quot;for the user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="586">
          <span class="hits">1</span>
          
          <code class="ruby">				before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="587">
          <span class="hits">3</span>
          
          <code class="ruby">					@request.cookies[&#39;current_user_token&#39;] =  @user_token </code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="588">
          <span class="hits">3</span>
          
          <code class="ruby">					get &#39;get_friends&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="589">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="590">
          <span class="hits">2</span>
          
          <code class="ruby">				specify { JSON.parse(response.body)[&#39;err_code&#39;].should eq SUCCESS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="591">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;valid friends should appear with proper fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="592">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;friend_count&#39;].should eq 1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="593">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;1&#39;][&#39;email&#39;].should eq &quot;t_other@example.com&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="594">
          <span class="hits">1</span>
          
          <code class="ruby">					JSON.parse(response.body)[&#39;1&#39;][&#39;name&#39;].should eq &quot;Test Other&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="595">
          
          
          <code class="ruby">				end				</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="596">
          <span class="hits">1</span>
          
          <code class="ruby">				it &quot;invalid groups should be removed from friend_list&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="597">
          <span class="hits">1</span>
          
          <code class="ruby">					@user.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="598">
          <span class="hits">1</span>
          
          <code class="ruby">					@user.friend_list.should have(1).items</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="599">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="600">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="601">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="602">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="603">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="604">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="cbbbe93cb58e9314f44d6a1f700189bb024eaf48">
  <div class="header">
    <h3>spec/models/event_spec.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>385</b> relevant lines. 
      <span class="green"><b>385</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;spec_helper&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;Condition&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;NoCondition&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;NumberCondition&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;UserCondition&#39; </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">NAME_MAX_LENGTH = 40</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="9">
          <span class="hits">1</span>
          
          <code class="ruby">describe Event, &quot;creation&quot; do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	  </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="11">
          <span class="hits">1</span>
          
          <code class="ruby">  before do</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="12">
          <span class="hits">30</span>
          
          <code class="ruby">  	@admin = User.create(name: &#39;Example User&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
          
          
          <code class="ruby">  		email: &#39;exampleuser@example.com&#39;)</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="14">
          <span class="hits">30</span>
          
          <code class="ruby">  	@admin_id = @admin.id</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="15">
          <span class="hits">30</span>
          
          <code class="ruby">  	@other = User.create(name: &#39;Example Friend&#39;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby">  		email: &#39;examplefriend@example.com&#39;)</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="17">
          <span class="hits">30</span>
          
          <code class="ruby">  	@other_id = @other.id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="20">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when everything is valid&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="13" data-linenumber="22">
          <span class="hits">13</span>
          
          <code class="ruby">			@event_id = Event.add_event(&#39;Example Event&#39;, @admin_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby">  			DateTime.current.to_i + 10, [@admin_id, @other_id])</code>
        </li>
      
        <li class="covered" data-hits="13" data-linenumber="24">
          <span class="hits">13</span>
          
          <code class="ruby">			@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="13" data-linenumber="25">
          <span class="hits">13</span>
          
          <code class="ruby">			@other.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="27">
          <span class="hits">2</span>
          
          <code class="ruby">		specify { @event_id.should be &gt; 0 }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="29">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;the event_list of the users involved&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="30">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @admin.event_list.should include(@event_id) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="31">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @other.event_list.should include(@event_id) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="32">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="34">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;fields within the event&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="35">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event = Event.find(@event_id) }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="36">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should have all valid fields&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="37">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@admin.id][:status].should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="38">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other.id][:status].should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="39">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@admin.id][:condition][:cond_type].should eq COND_NONE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="40">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other.id][:condition][:cond_type].should eq COND_NONE</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="41">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="42">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="43">
          
>>>>>>> master
          
          <code class="ruby">require &#39;EventNotification&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;FriendNotification&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="3">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;ConditionNotification&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;NoCondition&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;NotifyHandler&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">class Event &lt; ActiveRecord::Base</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="9">
          <span class="hits">1</span>
          
          <code class="ruby">	NAME_MAX_LENGTH = 40</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	# Have Rails automatically serialize the hash for storage.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="11">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :party_list, Hash</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="1" data-linenumber="44">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;the notification_list of the users involved&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="45">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @admin.notification_list.size.should eq 0 }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="46">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @other.notification_list.size.should eq 1 }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="47">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @other.notification_list.first[:notif_type].</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="48">
          
          
          <code class="ruby">					should eq NOTIF_NEW_EVENT }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="49">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @other.notification_list.first[:notif_time].should </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="50">
          <span class="hits">1</span>
          
          <code class="ruby">				be_within(1).of(DateTime.current.to_i) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="51">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @other.notification_list.first[:event].should eq @event_id }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="52">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @other.notification_list.first[:name].should eq &quot;Example Event&quot; }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="53">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @other.notification_list.first[:location].should eq &quot;&quot; }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="54">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @other.notification_list.first[:creator][:name].should eq &#39;Example User&#39; }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="55">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @other.notification_list.first[:creator][:email].should eq &#39;exampleuser@example.com&#39; }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="56">
          
>>>>>>> master
          
          <code class="ruby">	validates :name, { presence: true, length: {maximum: NAME_MAX_LENGTH} }</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="13">
          <span class="hits">1</span>
          
          <code class="ruby">	validates :admin, presence: true</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="14">
          <span class="hits">1</span>
          
          <code class="ruby">	validates :party_list, presence: true</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="15">
          <span class="hits">1</span>
          
          <code class="ruby">	validates :time, presence: true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="17">
          
          
          <code class="ruby">	# Validates the event. Checks to ensure that all of the fields of</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">	# the event are valid. Returns SUCCESS if they are. Else, returns</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">	# ERR_INVALID_NAME, ERR_INVALID_TIME, or ERR_INVALID_FIELD.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">	# Time is allowed to be up to 10 minutes in the past. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">	def is_valid?</code>
        </li>
      
        <li class="covered" data-hits="33" data-linenumber="22">
          <span class="hits">33</span>
          
          <code class="ruby">		return ERR_INVALID_NAME if name.blank? || name.length &gt; NAME_MAX_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="32" data-linenumber="23">
          <span class="hits">32</span>
          
          <code class="ruby">		return ERR_INVALID_TIME if time.blank? || (time &lt; DateTime.now.ago(60*15).to_i)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
=======
        <li class="never" data-hits="" data-linenumber="57">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="58">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="59">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when name field&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="60">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;is empty&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="61">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event_id = Event.add_event(&#39;&#39;, @admin_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="62">
          
          
          <code class="ruby">  			DateTime.current.to_i + 10, [@admin_id])}</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="63">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @event_id.should eq ERR_INVALID_NAME }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="64">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="65">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;is too long&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="66">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event_id = Event.add_event(&#39;A&#39; * (NAME_MAX_LENGTH + 1), </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="67">
>>>>>>> master
          
          
          <code class="ruby">				@admin_id, DateTime.current.to_i + 10, [@admin_id]) }</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby">		# NOTE: For future iteration, allow time a few minutes in the past to allow for possible time lags</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="27">
          <span class="hits">30</span>
          
          <code class="ruby">		return ERR_INVALID_FIELD if (admin.blank? || party_list.blank? || !party_list.is_a?(Hash))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
=======
        <li class="covered" data-hits="2" data-linenumber="68">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { @event_id.should eq ERR_INVALID_NAME }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="69">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="70">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="71">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="30" data-linenumber="29">
          <span class="hits">30</span>
          
          <code class="ruby">		return ERR_INVALID_FIELD if not party_list.has_key?(admin)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="31">
          <span class="hits">30</span>
          
          <code class="ruby">		party_list.each do |key, value|</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="32">
          <span class="hits">60</span>
          
          <code class="ruby">				return ERR_INVALID_FIELD if not value.is_a?(Hash)</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="33">
          <span class="hits">60</span>
          
          <code class="ruby">				return ERR_INVALID_FIELD if not value.has_key?(:status)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
=======
        <li class="covered" data-hits="1" data-linenumber="72">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when admin field is empty&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="73">
          <span class="hits">2</span>
          
          <code class="ruby">		before { @event_id = Event.add_event(&#39;Example Event&#39;, 0, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="74">
          
          
          <code class="ruby">  		DateTime.current.to_i + 10, [@admin_id]) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="75">
          <span class="hits">2</span>
          
          <code class="ruby">		specify { expect(@event_id).to eq(ERR_INVALID_FIELD) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="76">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="77">
>>>>>>> master
          
          
          <code class="ruby">		end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="35">
          
          
          <code class="ruby">	</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="36">
          <span class="hits">30</span>
          
          <code class="ruby">		return SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="37">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="38">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="39">
          
          
          <code class="ruby">	# Creates a new event with the given parameters. list_of_users should</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="40">
          
          
          <code class="ruby">	# be a list of integer values corresponding to user IDs. time should</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="41">
          
          
          <code class="ruby">	# be an integer number of seconds since the Unix epoch. Also adds</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="42">
          
          
          <code class="ruby">	# the event to all of the users in list_of_users, and notifies them.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="43">
          
          
          <code class="ruby">	# Schedules a task to notify users 5 minutes before the event starts. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="44">
          
          
          <code class="ruby">	# Returns:</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="45">
          
          
          <code class="ruby">	#  * Error code ( &lt; 0 ) upon failure</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="46">
          
          
          <code class="ruby">	#  * ID of new Event ( &gt; 0 ) upon success</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="47">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="1" data-linenumber="78">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when party list&quot; do</code>
        </li>
      
        <li class="covered" data-hits="7" data-linenumber="79">
          <span class="hits">7</span>
          
          <code class="ruby">		before { @event = Event.new(name: &#39;Example Name&#39;, </code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="80">
          <span class="hits">6</span>
          
          <code class="ruby">			admin: 1, time: (DateTime.current.to_i + 10), </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="81">
          
          
          <code class="ruby">			party_list: { 1 =&gt; { status: STATUS_ATTENDING } }) }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="82">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;is not a hash&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="83">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event.party_list = &#39;&#39; }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="84">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event.is_valid?).to eq(ERR_INVALID_FIELD) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="85">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="86">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;is an empty hash&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="87">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event.party_list = {} }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="88">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event.is_valid?).to eq(ERR_INVALID_FIELD) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="89">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="90">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;does not contain the admin&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="91">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event.party_list = { 2 =&gt; {status: STATUS_ATTENDING} } }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="92">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event.is_valid?).to eq(ERR_INVALID_FIELD) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="93">
          
>>>>>>> master
          
          <code class="ruby">	def self.add_event(name, admin_id, time, user_list, description = &quot;&quot;, location = &quot;&quot;)</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="48">
          
=======
        <li class="covered" data-hits="1" data-linenumber="94">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">		describe &quot;contains the admin and other users&quot; do</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="39" data-linenumber="49">
          <span class="hits">39</span>
          
          <code class="ruby">		return ERR_INVALID_FIELD if not user_list.respond_to?(&#39;each&#39;)</code>
        </li>
      
        <li class="covered" data-hits="39" data-linenumber="50">
          <span class="hits">39</span>
          
          <code class="ruby">		return ERR_INVALID_FIELD if not user_list.include?(admin_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="51">
          
          
          <code class="ruby">		</code>
        </li>
      
        <li class="covered" data-hits="39" data-linenumber="52">
          <span class="hits">39</span>
          
          <code class="ruby">		user_list.each do |user_id|</code>
        </li>
      
        <li class="covered" data-hits="81" data-linenumber="53">
          <span class="hits">81</span>
          
          <code class="ruby">			return ERR_INVALID_FIELD if not is_valid_user_id?(user_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="54">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="55">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="33" data-linenumber="56">
          <span class="hits">33</span>
          
          <code class="ruby">		description = &quot;&quot; if not description </code>
        </li>
      
        <li class="covered" data-hits="33" data-linenumber="57">
          <span class="hits">33</span>
          
          <code class="ruby">		location = &quot;&quot; if not location</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="58">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="33" data-linenumber="59">
          <span class="hits">33</span>
          
          <code class="ruby">		@event = Event.new(name: name, admin: admin_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="60">
          
          
          <code class="ruby">			description: description, location: location, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="61">
          
          
          <code class="ruby">			party_list: {}, time:time)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="62">
          
          
          <code class="ruby">	</code>
        </li>
      
        <li class="covered" data-hits="33" data-linenumber="63">
          <span class="hits">33</span>
          
          <code class="ruby">		@event.add_user_list(user_list, true)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="64">
=======
        <li class="covered" data-hits="1" data-linenumber="95">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="96">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[2] = {status: STATUS_NOT_ATTENDING}</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="97">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[50] = {status: STATUS_NO_RESPONSE }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="98">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="99">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event.is_valid?).to eq(SUCCESS) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="100">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="101">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;doesn&#39;t contain a status hash for any user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="102">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event.party_list = {1 =&gt; STATUS_ATTENDING, 2 =&gt; STATUS_NOT_ATTENDING} }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="103">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event.is_valid?).to eq(ERR_INVALID_FIELD) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="104">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="105">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;doesn&#39;t contain status hash for each user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="106">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event.party_list[2] = STATUS_NO_RESPONSE }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="107">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event.is_valid?).to eq(ERR_INVALID_FIELD) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="108">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="109">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="110">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="33" data-linenumber="65">
          <span class="hits">33</span>
          
          <code class="ruby">		validity = @event.is_valid?</code>
        </li>
      
        <li class="covered" data-hits="33" data-linenumber="66">
          <span class="hits">33</span>
          
          <code class="ruby">		return validity if validity &lt; 0</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="67">
          <span class="hits">30</span>
          
          <code class="ruby">		success = @event.save</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="68">
          <span class="hits">30</span>
          
          <code class="ruby">		return ERR_UNSUCCESSFUL if !success</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="69">
          
          
          <code class="ruby">		</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="70">
          <span class="hits">30</span>
          
          <code class="ruby">		@event.set_user_status(admin_id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="71">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="72">
          <span class="hits">30</span>
          
          <code class="ruby">		@event.add_to_user_event_lists(user_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="73">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="74">
          <span class="hits">30</span>
          
          <code class="ruby">		@event.notify( EventNotification.new(NOTIF_NEW_EVENT, @event),</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="75">
          
          
          <code class="ruby">			user_list )</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="76">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="77">
          
          
          <code class="ruby">		# Schedule a notification only if the event is starting more than 10</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="78">
          
          
          <code class="ruby">		# minutes from now. </code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="79">
          <span class="hits">30</span>
          
          <code class="ruby">		if  (time &gt; (DateTime.now.to_i + 10*60))</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="80">
          
          
          <code class="ruby">			time_string = Time.at(time).to_datetime.to_formatted_s(:rfc822)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="81">
          
          
          <code class="ruby">			notify_job_id = NotifyHandler.task_scheduler.in time_string, NotifyHandler</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="82">
          
          
          <code class="ruby">			NotifyHandler.add_job_mapping(notify_job_id, @event.id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="83">
          
          
          <code class="ruby">			self.scheduler_job_id = notify_job_id</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="84">
          
          
          <code class="ruby">			self.update_attribute(:scheduler_job_id, self.scheduler_job_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="85">
          
          
          <code class="ruby">		else</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="86">
          <span class="hits">30</span>
          
          <code class="ruby">			self.scheduler_job_id = -1</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="87">
          
          
          <code class="ruby">			self.update_attribute(:scheduler_job_id, -1)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="88">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="89">
          
          
          <code class="ruby">		</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="90">
          
          
          <code class="ruby">		return @event.id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="91">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="92">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="93">
          
          
          <code class="ruby">	# Edits self, according to the new information given in event_info_hash. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="94">
          
          
          <code class="ruby">	# Valid keys are :name, :time, :description, :location.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="95">
          
          
          <code class="ruby">	# Returns ERR_INVALID_NAME or ERR_INVALID_TIME if those fields</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="96">
          
          
          <code class="ruby">	# are invalid, else returns SUCCESS.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="97">
          <span class="hits">1</span>
          
          <code class="ruby">	def edit_event(event_info_hash) </code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="98">
          
          
          <code class="ruby">		if event_info_hash.has_key?(:name)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="99">
          
          
          <code class="ruby">			new_name = event_info_hash[:name]</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="100">
          
          
          <code class="ruby">			return ERR_INVALID_NAME if new_name.blank? || new_name.length &gt; NAME_MAX_LENGTH</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="101">
          
          
          <code class="ruby">			self.name = new_name</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="102">
          
          
          <code class="ruby">			self.update_attribute(:name, new_name)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="103">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="104">
          
          
          <code class="ruby">		if event_info_hash.has_key?(:time)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="105">
          
          
          <code class="ruby">			new_time = event_info_hash[:time].to_i</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="106">
          
          
          <code class="ruby">			return ERR_INVALID_TIME if new_time.blank? || Time.at(new_time).to_datetime.past?</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="107">
          
          
          <code class="ruby">			self.time = new_time</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="108">
          
          
          <code class="ruby">			self.update_attribute(:time, new_time)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="109">
          
          
          <code class="ruby">			NotifyHandler.task_scheduler.unschedule(self.scheduler_job_id) if self.scheduler_job_id != -1</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="110">
          
          
          <code class="ruby">			# Schedule a notification only if the event is starting more than 10</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="111">
          
          
          <code class="ruby">			# minutes from now. </code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="112">
=======
        <li class="covered" data-hits="1" data-linenumber="111">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when list_of_users&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="112">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;is not an array&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="113">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event_id = Event.add_event(&#39;Example Event&#39;, @admin_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="114">
          
          
          <code class="ruby">  			DateTime.current.to_i + 10, &#39;&#39;) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="115">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event_id).to eq(ERR_INVALID_FIELD) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="116">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="117">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;is an empty array&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="118">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event_id = Event.add_event(&#39;Example Event&#39;, @admin_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="119">
          
          
          <code class="ruby">  			DateTime.current.to_i + 10, []) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="120">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event_id).to eq(ERR_INVALID_FIELD) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="121">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="122">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;does not contain the admin&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="123">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event_id = Event.add_event(&#39;Example Event&#39;, @admin_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="124">
          
          
          <code class="ruby">  			DateTime.current.to_i + 10, [@other_id]) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="125">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event_id).to eq(ERR_INVALID_FIELD) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="126">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="127">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;contains the admin and other users&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="128">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event_id = Event.add_event(&#39;Example Event&#39;, @admin_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="129">
          
          
          <code class="ruby">  			DateTime.current.to_i + 10, [@admin_id, @other_id]) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="130">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event_id).to be &gt; 0 }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="131">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="132">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="133">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="134">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when time&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="135">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;is far in the future&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="136">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event_id = Event.add_event(&#39;Example Event&#39;, @admin_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="137">
          
          
          <code class="ruby">  			DateTime.current.to_i + 1000000, [@admin_id]) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="138">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event_id).to be &gt; 0}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="139">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="140">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;is in the past&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="141">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event_id = Event.add_event(&#39;Example Event&#39;, @admin_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="142">
          
          
          <code class="ruby">  			DateTime.current.to_i - 30, [@admin_id]) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="143">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event_id).to eq(ERR_INVALID_TIME) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="144">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="145">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;is negative&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="146">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event_id = Event.add_event(&#39;Example Event&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="147">
          
          
          <code class="ruby">				@admin_id, -50, [@admin_id]) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="148">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event_id).to eq(ERR_INVALID_TIME) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="149">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="150">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;is zero&quot; do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="151">
          <span class="hits">2</span>
          
          <code class="ruby">			before { @event_id = Event.add_event(&#39;Example Event&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="152">
          
          
          <code class="ruby">				@admin_id, 0, [@admin_id]) }</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="153">
          <span class="hits">2</span>
          
          <code class="ruby">			specify { expect(@event_id).to eq(ERR_INVALID_TIME) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="154">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="155">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="156">
          
          
          <code class="ruby">end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="157">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="158">
          <span class="hits">1</span>
          
          <code class="ruby">describe Event, &quot;misc&quot; do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="159">
>>>>>>> master
          
          
          <code class="ruby">			if  (self.time &gt; (DateTime.now.to_i + 10*60))</code>
        </li>
      
<<<<<<< HEAD
        <li class="missed" data-hits="0" data-linenumber="113">
          
          
          <code class="ruby">				time_string = Time.at(self.time).to_datetime.to_formatted_s(:rfc822)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="114">
          
          
          <code class="ruby">				notify_job_id = NotifyHandler.task_scheduler.in time_string, NotifyHandler</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="115">
          
          
          <code class="ruby">				NotifyHandler.add_job_mapping(notify_job_id, @event.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="116">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="117">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="118">
          
          
          <code class="ruby">		if event_info_hash.has_key?(:description)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="119">
          
          
          <code class="ruby">			self.description = event_info_hash[:description]</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="120">
          
          
          <code class="ruby">			self.update_attribute(:description, self.description)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="121">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="122">
          
          
          <code class="ruby">		if event_info_hash.has_key?(:location)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="123">
          
          
          <code class="ruby">			self.location = event_info_hash[:location]</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="124">
          
          
          <code class="ruby">			self.update_attribute(:location, self.location)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="125">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="126">
          
          
          <code class="ruby">		return SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="127">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="128">
=======
        <li class="covered" data-hits="1" data-linenumber="160">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;#get_user_status, #set_user_status&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="161">
          <span class="hits">1</span>
          
          <code class="ruby">	 	before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="162">
          <span class="hits">3</span>
          
          <code class="ruby">	  	@admin = User.create(name: &#39;Example User&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="163">
          
          
          <code class="ruby">	  		email: &#39;exampleuser@example.com&#39;)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="164">
          <span class="hits">3</span>
          
          <code class="ruby">	  	@admin_id = @admin.id</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="165">
          <span class="hits">3</span>
          
          <code class="ruby">	  	@other = User.create(name: &#39;Example Friend&#39;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="166">
          
          
          <code class="ruby">	  		email: &#39;examplefriend@example.com&#39;)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="167">
          <span class="hits">3</span>
          
          <code class="ruby">	  	@other_id = @other.id</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="168">
          <span class="hits">3</span>
          
          <code class="ruby">	  	@event_id = Event.add_event(&#39;Example Event&#39;, @admin_id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="169">
          
          
          <code class="ruby">	  		DateTime.current.to_i + 10, [@admin_id, @other_id])</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="170">
          <span class="hits">3</span>
          
          <code class="ruby">	  	@event = Event.find(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="171">
          <span class="hits">3</span>
          
          <code class="ruby">	  	@admin.reload</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="172">
          <span class="hits">3</span>
          
          <code class="ruby">	  	@other.reload</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="173">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="174">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="129">
          
          
          <code class="ruby">	# Should be called 5 minutes before the event is starting.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="130">
          
          
          <code class="ruby">	# Notifies users whose status is STATUS_ATTENDING that</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="131">
          
          
          <code class="ruby">	# the event is about to start. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="132">
          <span class="hits">1</span>
          
          <code class="ruby">	def notify_starting</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="133">
          
          
          <code class="ruby">		user_list = []</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="134">
          
          
          <code class="ruby">		party_list.each do |uid, uhash|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="135">
          
          
          <code class="ruby">			user_list &lt;&lt;= uid if uhash[:status] == STATUS_ATTENDING			</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="136">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="137">
          
          
          <code class="ruby">		notification = EventNotification.new(NOTIF_EVENT_STARTING, self)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="138">
          
          
          <code class="ruby">		notify(notification, user_list, false)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="139">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="140">
=======
        <li class="covered" data-hits="1" data-linenumber="175">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;when accessing status initially&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="176">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should be correct for admin and nonadmin&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="177">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@admin_id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="178">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other_id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="179">
          
          
          <code class="ruby">			end	</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="180">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="181">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="182">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;when changing and accessing status&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="183">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should be correct for admin and nonadmin&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="184">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.set_user_status(@admin_id, STATUS_NOT_ATTENDING)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="185">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@admin_id).should eq STATUS_NOT_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="186">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">				@event.set_user_status(@other_id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="187">
          <span class="hits">1</span>
          
<<<<<<< HEAD
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="141">
=======
          <code class="ruby">				@event.get_user_status(@other_id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="188">
>>>>>>> master
          
          
          <code class="ruby">	# Checks if the user is listed as an admin for this event.</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="142">
          <span class="hits">1</span>
          
          <code class="ruby">	def is_admin?(user_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="143">
          
          
          <code class="ruby">		return admin == user_id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="144">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="145">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="146">
          
          
          <code class="ruby">	# Adds user_list to the party_list for this event.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="147">
          
          
          <code class="ruby">	# If skip_attribute_update = true, doesn&#39;t update the attribute</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="148">
          
          
          <code class="ruby">	# within the databse (should probably only be used in add_event)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="149">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_user_list(user_list, skip_attribute_update = false)</code>
        </li>
      
        <li class="covered" data-hits="33" data-linenumber="150">
          <span class="hits">33</span>
          
          <code class="ruby">		user_hash = {}</code>
        </li>
      
        <li class="covered" data-hits="33" data-linenumber="151">
          <span class="hits">33</span>
=======
        <li class="never" data-hits="" data-linenumber="189">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="190">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="191">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;when attempting to change status for a user that isn&#39;t in the event&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="192">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should do nothing&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="193">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.set_user_status(234573456, STATUS_ATTENDING)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="194">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(234573456).should eq nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="195">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="196">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="197">
>>>>>>> master
          
          <code class="ruby">		user_list.each do |user_id|</code>
        </li>
      
        <li class="covered" data-hits="63" data-linenumber="152">
          <span class="hits">63</span>
          
<<<<<<< HEAD
          <code class="ruby">			user_hash[user_id] = { status: STATUS_NO_RESPONSE, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="153">
          
          
          <code class="ruby">				condition: NoCondition.new.get_hash }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="154">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="33" data-linenumber="155">
          <span class="hits">33</span>
          
          <code class="ruby">		self.party_list.merge!(user_hash) { |key, old, new| old }</code>
        </li>
      
        <li class="covered" data-hits="33" data-linenumber="156">
          <span class="hits">33</span>
          
          <code class="ruby">		self.update_attribute(:party_list, self.party_list) if !skip_attribute_update</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="157">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="158">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="159">
          
          
          <code class="ruby">	# Add this event to the user list of all users in user_list</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="160">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_to_user_event_lists(user_list)</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="161">
          <span class="hits">30</span>
          
          <code class="ruby">		user_list.each do |users_id| </code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="162">
          <span class="hits">60</span>
          
          <code class="ruby">			user = User.find(users_id)</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="163">
          <span class="hits">60</span>
          
          <code class="ruby">			user.add_event(self.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="164">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="165">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="166">
          
=======
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="198">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="199">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;#get_hash&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="200">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="201">
          <span class="hits">2</span>
          
          <code class="ruby">	  	@admin = User.create(name: &#39;Example User&#39;, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="202">
          
          
          <code class="ruby">	  		email: &#39;exampleuser@example.com&#39;)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="203">
          <span class="hits">2</span>
          
          <code class="ruby">	  	@other = User.create(name: &#39;Example Friend&#39;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="204">
          
          
          <code class="ruby">	  		email: &#39;examplefriend@example.com&#39;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="205">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="206">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="207">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should match the hash data 1&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="208">
          <span class="hits">1</span>
          
          <code class="ruby">			@event_id = Event.add_event(&#39;Example Event&#39;, @admin.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="209">
          
          
          <code class="ruby">	  		DateTime.current.to_i + 10, [@admin.id, @other.id])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="210">
          <span class="hits">1</span>
          
          <code class="ruby">	  	@event = Event.find(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="211">
          <span class="hits">1</span>
          
          <code class="ruby">			hash = @event.get_hash</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="212">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">			hash[:event].should eq @event_id</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="167">
          
          
          <code class="ruby">	# Checks if there are currently any conditions which have been met.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="168">
          
          
          <code class="ruby">	# If there are, and the user is currently not attending, their status</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="169">
          
          
          <code class="ruby">	# is changed to attending and they are notified of the change.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="170">
          <span class="hits">1</span>
          
          <code class="ruby">	def check_conditions</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="171">
          <span class="hits">30</span>
          
          <code class="ruby">		clauses = Array.new</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="172">
          <span class="hits">30</span>
          
          <code class="ruby">		party_list.each do |uid, hash|</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="173">
          <span class="hits">60</span>
          
          <code class="ruby">			cond = hash[:condition]</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="174">
          <span class="hits">60</span>
          
          <code class="ruby">			if cond[:cond_type] != COND_NONE &amp;&amp; cond[:cond_met] == COND_MET</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="175">
          
          
          <code class="ruby">				clauses.push({ operands: false, value: uid })</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="176">
          
          
          <code class="ruby">			elsif cond[:cond_type] == COND_NUM_ATTENDING</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="177">
          
          
          <code class="ruby">				clauses.push({ operands: cond[:num_users], value: uid })</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="178">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="179">
          
          
          <code class="ruby">			elsif cond[:cond_type] == COND_USER_ATTENDING_ANY</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="180">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="181">
          
          
          <code class="ruby">				oper = Array.new</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="182">
          
          
          <code class="ruby">				cond[:id_list].each { |id| oper.push(id)}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="183">
          
          
          <code class="ruby">				#cond[:user_list].each { |key, value| oper.push(value[:uid]) }</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="184">
          
          
          <code class="ruby">				clauses.push({ operands: oper, value: uid })</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="185">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="186">
          
          
          <code class="ruby">			elsif cond[:cond_type] == COND_USER_ATTENDING_ALL</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="187">
          
          
          <code class="ruby">				#cond[:user_list].each do |count, table|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="188">
          
          
          <code class="ruby">				cond[:id_list].each do |id|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="189">
          
          
          <code class="ruby">					clauses.push({ operands: [id], value: uid})</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="190">
          
          
          <code class="ruby">					#clauses.push({ operands: [table[:uid]], value: uid })</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="191">
          
=======
        <li class="covered" data-hits="1" data-linenumber="213">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:title].should eq &#39;Example Event&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="214">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:creator].should eq @admin.id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="215">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:time].should eq @event.time</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="216">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:location].should be_blank</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="217">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:description].should be_blank</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="218">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:users].should have(3).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="219">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:users][:user_count].should eq 2</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="220">
          <span class="hits">1</span>
          
          <code class="ruby">			user_names = [ hash[:users][1][:name], hash[:users][2][:name]]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="221">
          <span class="hits">1</span>
          
          <code class="ruby">			user_emails = [ hash[:users][1][:email], hash[:users][2][:email]]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="222">
          <span class="hits">1</span>
          
          <code class="ruby">			user_status = [ hash[:users][1][:status], hash[:users][2][:status]]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="223">
          <span class="hits">1</span>
          
          <code class="ruby">			user_names.should include(&quot;Example User&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="224">
          <span class="hits">1</span>
          
          <code class="ruby">			user_names.should include(&quot;Example Friend&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="225">
          <span class="hits">1</span>
          
          <code class="ruby">			user_emails.should include(&quot;exampleuser@example.com&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="226">
          <span class="hits">1</span>
          
          <code class="ruby">			user_emails.should include(&quot;examplefriend@example.com&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="227">
          <span class="hits">1</span>
          
          <code class="ruby">			user_status.should include(STATUS_NO_RESPONSE)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="228">
          <span class="hits">1</span>
          
          <code class="ruby">			user_status.should include(STATUS_ATTENDING)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="229">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="230">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="231">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="232">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should match the hash data 2&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="233">
          <span class="hits">1</span>
          
          <code class="ruby">			@event_id = Event.add_event(&#39;Example Event&#39;, @admin.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="234">
          
          
          <code class="ruby">	  		DateTime.current.to_i + 10, [@admin.id, @other.id], &quot;This is the description of an example event!&quot;, &quot;In an example area&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="235">
          <span class="hits">1</span>
          
          <code class="ruby">	  	@event = Event.find(@event_id)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="236">
          <span class="hits">1</span>
          
          <code class="ruby">			hash = @event.get_hash</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="237">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:event].should eq @event_id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="238">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">			hash[:title].should eq &#39;Example Event&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="192">
          
          
          <code class="ruby">			else</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="193">
          <span class="hits">60</span>
          
          <code class="ruby">				if hash[:status] == STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="194">
          <span class="hits">30</span>
          
          <code class="ruby">					clauses.push({ operands: false, value: uid})</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="195">
          
          
          <code class="ruby">				else</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="196">
          <span class="hits">30</span>
          
          <code class="ruby">					clauses.push({ operands: true, value: uid})</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="197">
          
=======
        <li class="covered" data-hits="1" data-linenumber="239">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:creator].should eq @admin.id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="240">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:time].should eq @event.time</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="241">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:location].should eq &quot;In an example area&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="242">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:description].should eq &quot;This is the description of an example event!&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="243">
          <span class="hits">1</span>
          
          <code class="ruby">			hash[:users].should have(3).items</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="244">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">			hash[:users][:user_count].should eq 2</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="198">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="199">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="200">
          <span class="hits">30</span>
          
          <code class="ruby">		result = Event.compute_horn_formula(clauses)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="201">
=======
        <li class="covered" data-hits="1" data-linenumber="245">
          <span class="hits">1</span>
          
          <code class="ruby">			user_names = [ hash[:users][1][:name], hash[:users][2][:name]]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="246">
          <span class="hits">1</span>
          
          <code class="ruby">			user_emails = [ hash[:users][1][:email], hash[:users][2][:email]]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="247">
          <span class="hits">1</span>
          
          <code class="ruby">			user_status = [ hash[:users][1][:status], hash[:users][2][:status]]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="248">
          <span class="hits">1</span>
          
          <code class="ruby">			user_names.should include(&quot;Example User&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="249">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">			user_names.should include(&quot;Example Friend&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="250">
          <span class="hits">1</span>
          
<<<<<<< HEAD
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="202">
          <span class="hits">30</span>
          
          <code class="ruby">		result.each do |uid, value|</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="203">
          <span class="hits">60</span>
          
          <code class="ruby">			if party_list[uid][:condition][:cond_met] == COND_NOT_MET &amp;&amp; party_list[uid][:condition][:cond_type] != COND_NONE</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="204">
          
          
          <code class="ruby">				complete_condition(uid, Condition.create_from_hash(party_list[uid][:condition])) if !value</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="205">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="206">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="207">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="208">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="209">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="210">
          
          
          <code class="ruby">	# solves horn formula</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="211">
          
          
          <code class="ruby">	# input clauses = [ { operands: [uid] || count, value: uid } ]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="212">
          
          
          <code class="ruby">	# returns hash of each value assigned to a satisfying boolean value</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="213">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.compute_horn_formula(clauses)</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="214">
          <span class="hits">30</span>
          
          <code class="ruby">		lookup = Hash.new</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="215">
          <span class="hits">30</span>
          
          <code class="ruby">		clauses.each do |clause| </code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="216">
          <span class="hits">60</span>
          
          <code class="ruby">			lookup[clause[:value]] = false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="217">
=======
          <code class="ruby">			user_emails.should include(&quot;exampleuser@example.com&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="251">
          <span class="hits">1</span>
          
          <code class="ruby">			user_emails.should include(&quot;examplefriend@example.com&quot;)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="252">
          <span class="hits">1</span>
          
          <code class="ruby">			user_status.should include(STATUS_NO_RESPONSE)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="253">
          <span class="hits">1</span>
          
          <code class="ruby">			user_status.should include(STATUS_ATTENDING)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="254">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="255">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="256">
          
          
          <code class="ruby">end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="257">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="258">
          <span class="hits">1</span>
          
          <code class="ruby">describe Event, &quot;compute_horn_formula&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="259">
          <span class="hits">1</span>
          
          <code class="ruby">	it &quot;should all be false&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="260">
          <span class="hits">1</span>
          
          <code class="ruby">		clauses = [{operands: 2, value: 0}, {operands: false, value: 1}]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="261">
          <span class="hits">1</span>
          
          <code class="ruby">		result = Event.compute_horn_formula(clauses)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="262">
          <span class="hits">1</span>
          
          <code class="ruby">		result.kind_of?(Hash).should eq true</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="263">
          <span class="hits">1</span>
          
          <code class="ruby">		result[0].should eq false</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="264">
          <span class="hits">1</span>
          
          <code class="ruby">		result[1].should eq false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="265">
>>>>>>> master
          
          
          <code class="ruby">		end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="218">
=======
        <li class="never" data-hits="" data-linenumber="266">
>>>>>>> master
          
          
          <code class="ruby">end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="219">
          
          
          <code class="ruby">		begin</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="220">
          <span class="hits">60</span>
          
          <code class="ruby">			changed = false</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="221">
          <span class="hits">60</span>
          
          <code class="ruby">			falses = 0</code>
        </li>
      
        <li class="covered" data-hits="180" data-linenumber="222">
          <span class="hits">180</span>
          
          <code class="ruby">			lookup.each { |key, value| falses += 1 if !value}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="223">
=======
        <li class="never" data-hits="" data-linenumber="267">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="268">
          <span class="hits">1</span>
          
          <code class="ruby">describe Event, &quot;conditional acceptances&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="269">
          <span class="hits">1</span>
          
          <code class="ruby">	before do</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="270">
          <span class="hits">16</span>
          
          <code class="ruby">		@admin = User.new(name: &quot;Test Name&quot;, email: &quot;test@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="271">
>>>>>>> master
          
          
          <code class="ruby">			password: &quot;test_password&quot;)</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="60" data-linenumber="224">
          <span class="hits">60</span>
          
          <code class="ruby">			clauses.each do |clause|</code>
        </li>
      
        <li class="covered" data-hits="120" data-linenumber="225">
          <span class="hits">120</span>
          
          <code class="ruby">				if lookup[clause[:value]]</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="226">
          <span class="hits">30</span>
          
          <code class="ruby">					next</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="227">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="228">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="90" data-linenumber="229">
          <span class="hits">90</span>
          
          <code class="ruby">				if clause[:operands].kind_of?(Integer)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="230">
          
          
          <code class="ruby">					lhs = (falses &lt; clause[:operands])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="231">
          
          
          <code class="ruby">				elsif clause[:operands].kind_of?(Array)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="232">
          
          
          <code class="ruby">					lhs = true</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="233">
=======
        <li class="covered" data-hits="16" data-linenumber="272">
          <span class="hits">16</span>
          
          <code class="ruby">		@admin.add</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="273">
          <span class="hits">16</span>
          
          <code class="ruby">		@other1 = User.new(name: &quot;Test Other&quot;, email: &quot;t_other@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="274">
          
          
          <code class="ruby">			password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="275">
          <span class="hits">16</span>
          
          <code class="ruby">		@other1.add</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="276">
          <span class="hits">16</span>
          
          <code class="ruby">		@other2 = User.new(name: &quot;Test Second&quot;, email: &quot;t_other2@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="277">
          
          
          <code class="ruby">			password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="278">
          <span class="hits">16</span>
          
          <code class="ruby">		@other2.add</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="279">
          <span class="hits">16</span>
          
          <code class="ruby">		@event_id = Event.add_event(&quot;Test Event&quot;, @admin.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="280">
          
          
          <code class="ruby">			DateTime.current.to_i + 10, [@admin.id, @other1.id])</code>
        </li>
      
        <li class="covered" data-hits="16" data-linenumber="281">
          <span class="hits">16</span>
          
          <code class="ruby">		@event = Event.find(@event_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="282">
>>>>>>> master
          
          
          <code class="ruby">					clause[:operands].each { |operand| lhs = lhs &amp;&amp; lookup[operand] }</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="234">
=======
        <li class="covered" data-hits="1" data-linenumber="283">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">	describe &quot;when adding a conditional acceptance&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="284">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="235">
          
          
          <code class="ruby">				else</code>
        </li>
      
        <li class="covered" data-hits="90" data-linenumber="236">
          <span class="hits">90</span>
          
          <code class="ruby">					lhs = clause[:operands]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="237">
=======
        <li class="covered" data-hits="1" data-linenumber="285">
          <span class="hits">1</span>
          
          <code class="ruby">			cond = NumberCondition.new(3)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="286">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.add_condition(@other1.id, cond)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="287">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="288">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">		it &quot;should appear in the party_list but not change status&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="289">
          <span class="hits">1</span>
          
<<<<<<< HEAD
          <code class="ruby">				end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="238">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="90" data-linenumber="239">
          <span class="hits">90</span>
          
          <code class="ruby">				if lhs != lookup[clause[:value]]</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="240">
          <span class="hits">30</span>
=======
          <code class="ruby">			@event.party_list[@other1.id][:condition][:cond_type].should eq COND_NUM_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="290">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.party_list[@other1.id][:condition][:num_users].should eq 3</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="291">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.party_list[@other1.id][:condition][:cond_met].should eq COND_NOT_MET</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="292">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@other1.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="293">
>>>>>>> master
          
          <code class="ruby">					lookup[clause[:value]] = lhs</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="30" data-linenumber="241">
          <span class="hits">30</span>
          
          <code class="ruby">					changed = true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="242">
=======
        <li class="never" data-hits="" data-linenumber="294">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="295">
>>>>>>> master
          
          
          <code class="ruby">				end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="243">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="244">
          <span class="hits">30</span>
          
          <code class="ruby">		end while changed</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="245">
          <span class="hits">30</span>
          
          <code class="ruby">		return lookup</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="246">
=======
        <li class="covered" data-hits="1" data-linenumber="296">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when removing a conditional acceptance&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="297">
          <span class="hits">1</span>
          
          <code class="ruby">		before do</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="298">
          <span class="hits">2</span>
          
          <code class="ruby">			cond = NumberCondition.new(3)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="299">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">			@event.add_condition(@other1.id, cond)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="300">
          <span class="hits">2</span>
          
<<<<<<< HEAD
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="247">
=======
          <code class="ruby">			@event.remove_condition(@other1.id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="301">
>>>>>>> master
          
          
          <code class="ruby">		end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="248">
          
          
          <code class="ruby">	# Add a conditional acceptance for the given user.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="249">
          
          
          <code class="ruby">	# Does nothing if the user is not a member of this event.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="250">
          
          
          <code class="ruby">	# After adding the condition, checks if any conditions have been met</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="251">
          
          
          <code class="ruby">	# and takes appropriate action. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="252">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_condition(user_id, condition)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="253">
          
          
          <code class="ruby">		return if not party_list.has_key?(user_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="254">
          
          
          <code class="ruby">		party_list[user_id][:condition] = condition.get_hash</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="255">
          
          
          <code class="ruby">		update_attribute(:party_list, party_list)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="256">
          
          
          <code class="ruby">		check_conditions</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="257">
          
=======
        <li class="covered" data-hits="1" data-linenumber="302">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should have no condition&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="303">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.party_list[@other1.id][:condition][:cond_type].should eq COND_NONE</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="304">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="305">
          <span class="hits">1</span>
          
          <code class="ruby">		it &quot;should no longer do anything when the condition is met&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="306">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.add_user_list([@other2.id])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="307">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.add_to_user_event_lists([@other2.id])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="308">
          <span class="hits">1</span>
          
          <code class="ruby">			@event.get_user_status(@other1.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="309">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="310">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="311">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="312">
          <span class="hits">1</span>
          
          <code class="ruby">	describe &quot;when a conditional acceptance is met&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="313">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;ensure that it is detected&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="314">
          <span class="hits">1</span>
          
          <code class="ruby">			before do </code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="315">
          <span class="hits">10</span>
>>>>>>> master
          
          <code class="ruby">				@other3 = User.new(name: &quot;Test Third&quot;, email: &quot;t_other3@example.com&quot;,</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="258">
=======
        <li class="never" data-hits="" data-linenumber="316">
>>>>>>> master
          
          
          <code class="ruby">					password: &quot;test_password&quot;)</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="259">
          
          
          <code class="ruby">	# Removes the current conditional acceptance from this user.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="260">
          
          
          <code class="ruby">	# Does nothing if the user is not a member of the event or </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="261">
          
          
          <code class="ruby">	# if the user doesn&#39;t currently have any conditions.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="262">
          <span class="hits">1</span>
          
          <code class="ruby">	def remove_condition(user_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="263">
          
          
          <code class="ruby">		return if not party_list.has_key?(user_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="264">
          
          
          <code class="ruby">		party_list[user_id][:condition] = NoCondition.new.get_hash</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="265">
          
          
          <code class="ruby">		update_attribute(:party_list, party_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="266">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="267">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="268">
          
          
          <code class="ruby">	# Cancels this event, removing it from all of it&#39;s associated</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="269">
          
          
          <code class="ruby">	# users. Also removes any scheduled tasks to notify users of the event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="270">
=======
        <li class="covered" data-hits="10" data-linenumber="317">
          <span class="hits">10</span>
          
          <code class="ruby">				@other3.add</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="318">
          <span class="hits">10</span>
          
          <code class="ruby">				@other4 = User.new(name: &quot;Test Fourth&quot;, email: &quot;t_other4@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="319">
          
          
          <code class="ruby">					password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="320">
          <span class="hits">10</span>
          
          <code class="ruby">				@other4.add</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="321">
          <span class="hits">10</span>
          
          <code class="ruby">				@other5 = User.new(name: &quot;Test Fifth&quot;, email: &quot;t_other5@example.com&quot;,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="322">
          
          
          <code class="ruby">					password: &quot;test_password&quot;)</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="323">
          <span class="hits">10</span>
          
          <code class="ruby">				@other5.add</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="324">
          <span class="hits">10</span>
          
          <code class="ruby">				@event.add_user_list([@other2.id, @other3.id, @other4.id])</code>
        </li>
      
        <li class="covered" data-hits="10" data-linenumber="325">
          <span class="hits">10</span>
          
          <code class="ruby">				@event.add_to_user_event_lists([@other2.id, @other3.id, @other4.id])</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="326">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="327">
          
          
          <code class="ruby">			# Starting state of event: @admin is attending. @other1-4 are</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="328">
          
          
          <code class="ruby">			# invited but haven&#39;t responded. @other5 isn&#39;t invited.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="329">
>>>>>>> master
          
          
          <code class="ruby">	# starting soon. Does not actually delete the event -- should subsequently</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="271">
          
          
          <code class="ruby">	# call event.destroy to remove it from the database. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="272">
          <span class="hits">1</span>
          
          <code class="ruby">	def cancel_self</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="273">
          
          
          <code class="ruby">		NotifyHandler.task_scheduler.unschedule(self.scheduler_job_id) if self.scheduler_job_id != -1</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="274">
          
          
          <code class="ruby">		party_list.each_key { |user_id| User.find(user_id).delete_event(self.id) }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="275">
          
=======
        <li class="covered" data-hits="1" data-linenumber="330">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should detect when enough other users are attending&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="331">
          <span class="hits">1</span>
          
          <code class="ruby">				cond = NumberCondition.new(5)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="332">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other4.id, cond)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="333">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.set_user_status(@other1.id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="334">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">				@event.set_user_status(@other2.id, STATUS_ATTENDING)</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="276">
=======
        <li class="never" data-hits="" data-linenumber="335">
>>>>>>> master
          
          
          <code class="ruby">				#@event.get_user_status(@other4.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="277">
          
          
          <code class="ruby">	# Removes user_id from the event. Does nothing if </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="278">
          
          
          <code class="ruby">	# the user isn&#39;t currently in the event, or if</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="279">
          
          
          <code class="ruby">	# the admin attempts to remove itself. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="280">
          <span class="hits">1</span>
          
          <code class="ruby">	def remove_user(user_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="281">
          
          
          <code class="ruby">		return if is_admin?(user_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="282">
          
          
          <code class="ruby">		party_list.delete(user_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="283">
          
          
          <code class="ruby">		self.update_attribute(:party_list, party_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="284">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="285">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="286">
          
          
          <code class="ruby">	# Returns the user&#39;s status for this event: STATUS_ATTENDING,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="287">
          
          
          <code class="ruby">	# STATUS_NOT_ATTENDING, STATUS_NO_RESPONSE. Returns nil</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="288">
          
          
          <code class="ruby">	# if the user is not a part of this event.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="289">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_user_status(user_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="290">
          
          
          <code class="ruby">		return nil if not party_list[user_id]</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="291">
          
          
          <code class="ruby">		return party_list[user_id][:status]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="292">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="293">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="294">
          
          
          <code class="ruby">	# Sets the user&#39;s status for this event. Does nothing if user_id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="295">
          
          
          <code class="ruby">	# is not a member of this event. Triggers a rechecking of all</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="296">
          
          
          <code class="ruby">	# user conditions to check if any new conditions are met as a result</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="297">
          
          
          <code class="ruby">	# of this status change. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="298">
          <span class="hits">1</span>
          
          <code class="ruby">	def set_user_status(user_id, new_status)</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="299">
          <span class="hits">30</span>
          
          <code class="ruby">		party_list[user_id][:status] = new_status if party_list.has_key?(user_id)</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="300">
          <span class="hits">30</span>
          
          <code class="ruby">		self.update_attribute(:party_list, party_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="301">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="302">
          <span class="hits">30</span>
          
          <code class="ruby">		check_conditions</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="303">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="304">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="305">
          
          
          <code class="ruby">	# Notifies the users within user_list using NOTIFICATION. </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="306">
          
          
          <code class="ruby">	# If user_list isn&#39;t specified, uses party_list (all users).</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="307">
          
          
          <code class="ruby">	# Skips the admin either way (any notification should be generated</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="308">
          
          
          <code class="ruby">	# by the admin), unless skip_admin is explicitly set to false. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="309">
          <span class="hits">1</span>
          
          <code class="ruby">	def notify(notification, user_list = nil, skip_admin = true)</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="310">
          <span class="hits">30</span>
          
          <code class="ruby">		if not user_list</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="311">
          
          
          <code class="ruby">			party_list.each_key do |key|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="312">
          
          
          <code class="ruby">				next if key == admin &amp;&amp; skip_admin</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="313">
=======
        <li class="covered" data-hits="1" data-linenumber="336">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.set_user_status(@other3.id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="337">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="338">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other4.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="339">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="340">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should detect when enough other users have number-of-users conditions all with the same number&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="341">
          <span class="hits">1</span>
          
          <code class="ruby">				cond1 = NumberCondition.new(5)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="342">
          <span class="hits">1</span>
          
          <code class="ruby">				cond2 = NumberCondition.new(5)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="343">
          <span class="hits">1</span>
          
          <code class="ruby">				cond3 = NumberCondition.new(5)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="344">
          <span class="hits">1</span>
          
          <code class="ruby">				cond4 = NumberCondition.new(5)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="345">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other1.id, cond1)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="346">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other2.id, cond2)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="347">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other3.id, cond3)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="348">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other1.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="349">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other2.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="350">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="351">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="352">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other4.id, cond4)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="353">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other1.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="354">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other2.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="355">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="356">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="357">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other4.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="358">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="359">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should detect when enough other users have number-of-users conditions all with different numbers&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="360">
          <span class="hits">1</span>
          
          <code class="ruby">				cond1 = NumberCondition.new(4)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="361">
          <span class="hits">1</span>
          
          <code class="ruby">				cond2 = NumberCondition.new(6)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="362">
          <span class="hits">1</span>
          
          <code class="ruby">				cond3 = NumberCondition.new(3)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="363">
          <span class="hits">1</span>
          
          <code class="ruby">				cond4 = NumberCondition.new(4)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="364">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other1.id, cond1)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="365">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other2.id, cond2)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="366">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other3.id, cond3)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="367">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other1.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="368">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other2.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="369">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="370">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="371">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other4.id, cond4)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="372">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other1.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="373">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other2.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="374">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="375">
          <span class="hits">1</span>
          
<<<<<<< HEAD
          <code class="ruby">				begin </code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="314">
          
          
          <code class="ruby">					user = User.find(key)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="315">
          
          
          <code class="ruby">				rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="316">
          
          
          <code class="ruby">					next</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="317">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="318">
          
          
          <code class="ruby">				notification.send_push(user)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="319">
=======
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="376">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other4.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="377">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other2.id][:condition][:cond_met].should eq COND_NOT_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="378">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="379">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should detect when any of the users join for an any-user-type condition&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="380">
          <span class="hits">1</span>
          
          <code class="ruby">				cond = UserCondition.new(COND_USER_ATTENDING_ANY, [ @other4.id, @other2.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="381">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other3.id, cond)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="382">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="383">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">				@event.set_user_status(@other2.id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="384">
          <span class="hits">1</span>
          
<<<<<<< HEAD
          <code class="ruby">				user.post_notification(notification)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="320">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="321">
          
          
          <code class="ruby">		else</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="322">
          <span class="hits">30</span>
          
          <code class="ruby">			user_list.each do |key|</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="323">
          <span class="hits">60</span>
          
          <code class="ruby">				next if key == admin &amp;&amp; skip_admin</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="324">
          <span class="hits">30</span>
          
          <code class="ruby">				begin </code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="325">
          <span class="hits">30</span>
          
          <code class="ruby">					user = User.find(key)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="326">
          
          
          <code class="ruby">				rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="327">
          
          
          <code class="ruby">					next</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="328">
          
          
          <code class="ruby">				end</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="329">
          <span class="hits">30</span>
          
          <code class="ruby">				notification.send_push(user)</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="330">
          <span class="hits">30</span>
          
          <code class="ruby">				user.post_notification(notification)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="331">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="332">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="333">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="334">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="335">
          
          
          <code class="ruby">	# Returns a hash with all of the relevant information for this event.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="336">
          
          
          <code class="ruby">	# { $event: eventID, $title: event_name, $creator: event_creator,  </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="337">
          
          
          <code class="ruby">	#   $time: time, $location: location, $description: description,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="338">
          
          
          <code class="ruby">	#   $users: user_list }  </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="339">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="340">
          
          
          <code class="ruby">		user_list = {}</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="341">
          
          
          <code class="ruby">		user_count = 0</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="342">
          
          
          <code class="ruby">		party_list.each do |key, value|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="343">
          
          
          <code class="ruby">			user_count += 1</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="344">
          
          
          <code class="ruby">			curr_user = User.find(key)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="345">
          
          
          <code class="ruby">			user_list[user_count] = { name: curr_user.name,</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="346">
          
          
          <code class="ruby">					email: curr_user.email, status: value[:status] }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="347">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="348">
          
          
          <code class="ruby">		user_list[:user_count] = user_count</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="349">
          
          
          <code class="ruby">		{ event: self.id, title: name, creator: admin, </code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="350">
          
          
          <code class="ruby">			time: time, location: location, users: user_list, description: description}</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="351">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="352">
          
=======
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="385">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other3.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="386">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="387">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should detect when all of the users join for an all-user-type condition&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="388">
          <span class="hits">1</span>
          
          <code class="ruby">				cond = UserCondition.new(COND_USER_ATTENDING_ALL, [ @other4.id, @other2.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="389">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other3.id, cond)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="390">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="391">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.set_user_status(@other2.id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="392">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="393">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other3.id][:condition][:cond_met].should eq COND_NOT_MET</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="394">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.set_user_status(@other4.id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="395">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="396">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other3.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="397">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="398">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should detect a two-person cycle of any-user-type conditions&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="399">
          <span class="hits">1</span>
          
          <code class="ruby">				cond1 = UserCondition.new(COND_USER_ATTENDING_ANY, [ @other4.id, @other2.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="400">
          <span class="hits">1</span>
          
          <code class="ruby">				cond2 = UserCondition.new(COND_USER_ATTENDING_ANY, [ @other3.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="401">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other3.id, cond1)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="402">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="403">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_NO_RESPONSE				</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="404">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other4.id, cond2)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="405">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="406">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="407">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other4.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="408">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other3.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="409">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="410">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should detect a cyclic mix of any- and all-user-type conditions when satisfied by a final condition&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="411">
          <span class="hits">1</span>
          
          <code class="ruby">				cond1 = UserCondition.new(COND_USER_ATTENDING_ALL, [ @other4.id, @other2.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="412">
          <span class="hits">1</span>
          
          <code class="ruby">				cond2 = UserCondition.new(COND_USER_ATTENDING_ANY, [ @other3.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="413">
          <span class="hits">1</span>
          
          <code class="ruby">				cond3 = UserCondition.new(COND_USER_ATTENDING_ALL, [ @other4.id, @other3.id, @other1.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="414">
          <span class="hits">1</span>
          
          <code class="ruby">				cond4 = UserCondition.new(COND_USER_ATTENDING_ANY, [ @other2.id, @other3.id, @other4.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="415">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other3.id, cond1)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="416">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="417">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_NO_RESPONSE				</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="353">
          <span class="hits">1</span>
          
          <code class="ruby">	private</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="354">
          
=======
        <li class="covered" data-hits="1" data-linenumber="418">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other4.id, cond2)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="419">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="355">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="356">
          
          
          <code class="ruby">	# Method to change a user&#39;s status to STATUS_ATTENDING in this event</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="357">
          
          
          <code class="ruby">	# due to an acceptance resulting from condition. Changes their status, sets</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="358">
          
          
          <code class="ruby">	# the condition as met, and notifies the user of the change. For internal </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="359">
          
          
          <code class="ruby">	# use by check_conditions to act on users whose conditions are met.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="360">
          
          
          <code class="ruby">	# Does nothing if the user&#39;s status was already STATUS_ATTENDING or</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="361">
          
          
          <code class="ruby">	# if the user is not present in the party_list</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="362">
          <span class="hits">1</span>
          
          <code class="ruby">	def complete_condition(user_id, condition)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="363">
          
          
          <code class="ruby">		return if not party_list.has_key?(user_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="364">
          
          
          <code class="ruby">		return if get_user_status(user_id) == STATUS_ATTENDING</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="365">
          
          
          <code class="ruby">		set_user_status(user_id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="366">
=======
        <li class="covered" data-hits="1" data-linenumber="420">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="421">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other2.id, cond3)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="422">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="423">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="424">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other2.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="425">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other1.id, cond4)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="426">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other1.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="427">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other2.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="428">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="429">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="430">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other4.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="431">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other3.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="432">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="433">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">			it &quot;should detect a cyclic mix of any- and all-user-type conditions when satisfied by a user joining&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="434">
          <span class="hits">1</span>
          
<<<<<<< HEAD
          <code class="ruby">		condition.met</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="367">
=======
          <code class="ruby">				cond1 = UserCondition.new(COND_USER_ATTENDING_ALL, [ @other4.id, @other2.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="435">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">				cond2 = UserCondition.new(COND_USER_ATTENDING_ANY, [ @other3.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="436">
          <span class="hits">1</span>
          
<<<<<<< HEAD
          <code class="ruby">		notif = ConditionNotification.new(NOTIF_COND_MET, self, condition)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="368">
          
          
          <code class="ruby">		notify(notif, [ user_id ])</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="369">
          
          
          <code class="ruby">		party_list[user_id][:condition][:cond_met] = COND_MET</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="370">
          
          
          <code class="ruby">		update_attribute(:party_list, party_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="371">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="372">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="373">
          
          
          <code class="ruby">	# Takes in a string, USER_ID, and checks if it is a valid </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="374">
          
          
          <code class="ruby">	# user id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="375">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.is_valid_user_id?(user_id)</code>
        </li>
      
        <li class="covered" data-hits="81" data-linenumber="376">
          <span class="hits">81</span>
          
          <code class="ruby">		begin </code>
        </li>
      
        <li class="covered" data-hits="81" data-linenumber="377">
          <span class="hits">81</span>
          
          <code class="ruby">			User.find(user_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="378">
          
          
          <code class="ruby">		rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="379">
          <span class="hits">6</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="380">
          
          
          <code class="ruby">		end		</code>
        </li>
      
        <li class="covered" data-hits="75" data-linenumber="381">
          <span class="hits">75</span>
=======
          <code class="ruby">				cond3 = UserCondition.new(COND_USER_ATTENDING_ALL, [ @other4.id, @other3.id, @other1.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="437">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other3.id, cond1)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="438">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="439">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other4.id, cond2)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="440">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="441">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other2.id, cond3)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="442">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="443">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.set_user_status(@other1.id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="444">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other1.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="445">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other2.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="446">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="447">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="448">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other4.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="449">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other3.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="450">
          
>>>>>>> master
          
          <code class="ruby">		return true</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="382">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="383">
          
=======
        <li class="covered" data-hits="1" data-linenumber="451">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should detect a longer cycle of any-user-type conditions&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="452">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">				cond1 = UserCondition.new(COND_USER_ATTENDING_ANY, [ @other2.id ])</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="384">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="f1fba9c8e71d8d07e5b92b181191fe7faa7f0572">
  <div class="header">
    <h3>app/models/user.rb</h3>
    <h4><span class="red">61.11 %</span> covered</h4>
    <div>
      <b>108</b> relevant lines. 
      <span class="green"><b>66</b> lines covered</span> and
      <span class="red"><b>42</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;EventNotification&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;FriendNotification&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># Class for modeling the user of app</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">class User &lt; ActiveRecord::Base</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">	# callback to force email to lowercase for uniqueness</code>
        </li>
      
        <li class="covered" data-hits="194" data-linenumber="7">
          <span class="hits">194</span>
          
          <code class="ruby">	before_save { self.email = email.downcase }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby">	# validates the uniqueness of the email address, disregarding lettercase</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="9">
          <span class="hits">1</span>
          
          <code class="ruby">	validates :email, uniqueness: { case_sensitive: false }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">	# method call to return hashed password_digest from password to be stored in db</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby">	#     validation off for empty password and password_confirmation (password_confirmation designed to be done in frontend)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
          <code class="ruby">	has_secure_password validations: false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
          
=======
        <li class="covered" data-hits="1" data-linenumber="453">
          <span class="hits">1</span>
          
          <code class="ruby">				cond2 = UserCondition.new(COND_USER_ATTENDING_ANY, [ @other3.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="454">
          <span class="hits">1</span>
          
          <code class="ruby">				cond3 = UserCondition.new(COND_USER_ATTENDING_ALL, [ @other4.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="455">
          <span class="hits">1</span>
          
          <code class="ruby">				cond4 = UserCondition.new(COND_USER_ATTENDING_ALL, [ @other1.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="456">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other1.id, cond1)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="457">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other2.id, cond2)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="458">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other3.id, cond3)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="459">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other1.id).should eq STATUS_NO_RESPONSE				</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="460">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other2.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="461">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="462">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="463">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other4.id, cond4)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="464">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other1.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="465">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other2.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="466">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="467">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="468">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby">				@event.party_list[@other4.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby">	# Serialize friend_list (array) for easy storage.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="15">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :friend_list, Array</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby">	# Serialize event_list (array) for easy storage.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="17">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :event_list, Array</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">	# Serialize notification_list (array of hashes) for easy storage.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="19">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :notification_list, Array</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">	# Serialize group list (array) for easy storage.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :group_list, Array</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby">	# Serialize the list of device_tokens (array) for easy storage</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="23">
          <span class="hits">1</span>
          
          <code class="ruby">	serialize :device_tokens, Array</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby"> 	# The maximum length of any user credential field</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="26">
          <span class="hits">1</span>
          
          <code class="ruby">  	MAX_CREDENTIAL_LENGTH = 128</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby">  	# The minimum length of password field</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="28">
          <span class="hits">1</span>
          
          <code class="ruby">  	MIN_PW_LENGTH = 6</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby">  	# name format only contains letter or whitespace characters</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="30">
          <span class="hits">1</span>
          
          <code class="ruby">	VALID_NAME_REGEX = /\A[a-zA-z\.&#39;]+(\s[a-zA-z\.&#39;]+)*\z/</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="31">
          
          
          <code class="ruby">	# email format is [word characters and dashes][@][domain]</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="32">
          <span class="hits">1</span>
          
          <code class="ruby">	VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
          
          
          <code class="ruby">	# Function checks that the user does not exist, the user name, email, and password format is correct</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="35">
=======
        <li class="covered" data-hits="1" data-linenumber="469">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other3.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="470">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="471">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should detect a cyclic mix of number-of-users and any-user-type conditions&quot; do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="472">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="473">
          <span class="hits">1</span>
          
          <code class="ruby">				cond1 = UserCondition.new(COND_USER_ATTENDING_ANY, [ @other2.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="474">
          <span class="hits">1</span>
          
          <code class="ruby">				cond2 = UserCondition.new(COND_USER_ATTENDING_ANY, [ @other3.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="475">
          <span class="hits">1</span>
          
          <code class="ruby">				cond3 = UserCondition.new(COND_USER_ATTENDING_ALL, [ @other4.id ])</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="476">
          <span class="hits">1</span>
          
          <code class="ruby">				cond4 = NumberCondition.new(5)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="477">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other1.id, cond1)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="478">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other2.id, cond2)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="479">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other3.id, cond3)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="480">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other1.id).should eq STATUS_NO_RESPONSE				</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="481">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other2.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="482">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="483">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_NO_RESPONSE</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="484">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.add_condition(@other4.id, cond4)</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="485">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other1.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="486">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other2.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="487">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other3.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="488">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other4.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="489">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other4.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="490">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other3.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="491">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="492">
>>>>>>> master
          
          
          <code class="ruby">	# * On success the function generates unique_id and remember_token</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="36">
=======
        <li class="never" data-hits="" data-linenumber="493">
>>>>>>> master
          
          
          <code class="ruby">	# * On success the function adds a row to the DB</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="37">
          
          
          <code class="ruby">	# * On success return code SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="38">
          
          
          <code class="ruby">	# * On failure return an error code (&lt;0): ERR_INVALID_NAME, ERR_INVALID_EMAIL, ERR_EMAIL_TAKEN, ERR_INVALID_PASSWORD</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="39">
          <span class="hits">1</span>
          
          <code class="ruby">	def add</code>
        </li>
      
        <li class="covered" data-hits="85" data-linenumber="40">
          <span class="hits">85</span>
          
          <code class="ruby">		return ERR_INVALID_NAME if not name_valid?</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="41">
          <span class="hits">79</span>
          
          <code class="ruby">		return ERR_INVALID_EMAIL if not email_valid?</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="42">
          <span class="hits">79</span>
          
          <code class="ruby">		return ERR_INVALID_PASSWORD if not password_valid?</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="43">
          <span class="hits">79</span>
          
          <code class="ruby">		return ERR_EMAIL_TAKEN if not email_available?</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="44">
          <span class="hits">79</span>
          
          <code class="ruby">		create_remember_token</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="45">
          <span class="hits">79</span>
          
          <code class="ruby">		self.friend_list = Array.new</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="46">
          <span class="hits">79</span>
          
          <code class="ruby">		self.event_list = Array.new</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="47">
          <span class="hits">79</span>
          
          <code class="ruby">		self.notification_list = Array.new</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="48">
          <span class="hits">79</span>
          
          <code class="ruby">		self.save</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="49">
          <span class="hits">79</span>
          
          <code class="ruby">		SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="50">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="51">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="52">
          
          
          <code class="ruby">	# Function that checks if user :email is in db, then authenticates user: password against db password_digest</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="53">
          
          
          <code class="ruby">	# * On success returns { err_code: SUCCESS, user: db_result }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="54">
          
          
          <code class="ruby">	# * On failture returns { err_code: ERR_BAD_CREDENTIALS }</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="55">
          <span class="hits">1</span>
          
          <code class="ruby">	def login</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="56">
          
          
          <code class="ruby">		db_result = self.class.find_by(email: self.email.downcase)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="57">
          
          
          <code class="ruby">		return { err_code: ERR_BAD_CREDENTIALS } if db_result == nil || !db_result.authenticate(self.password)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="58">
          
          
          <code class="ruby">		{ err_code: SUCCESS, user: db_result }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="59">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="60">
=======
        <li class="covered" data-hits="1" data-linenumber="494">
          <span class="hits">1</span>
          
          <code class="ruby">		describe &quot;proper actions should result&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="495">
          <span class="hits">1</span>
          
          <code class="ruby">			before do</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="496">
          <span class="hits">3</span>
          
          <code class="ruby">				@cond = NumberCondition.new(3)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="497">
          <span class="hits">3</span>
          
          <code class="ruby">				@event.add_condition(@other1.id, @cond)</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="498">
          <span class="hits">3</span>
          
          <code class="ruby">				@event.add_user_list([@other2.id])</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="499">
          <span class="hits">3</span>
          
          <code class="ruby">				@event.add_to_user_event_lists([@other2.id])</code>
        </li>
      
        <li class="covered" data-hits="3" data-linenumber="500">
          <span class="hits">3</span>
          
          <code class="ruby">				@event.set_user_status(@other2.id, STATUS_ATTENDING)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="501">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="502">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="503">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should notify the user&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="504">
          <span class="hits">1</span>
          
          <code class="ruby">				@other1.reload</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="505">
          <span class="hits">1</span>
          
          <code class="ruby">				@other1.notification_list[1][:notif_type].should eq NOTIF_COND_MET</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="506">
          <span class="hits">1</span>
          
          <code class="ruby">				@other1.notification_list[1][:event].should eq @event_id</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="507">
          <span class="hits">1</span>
          
          <code class="ruby">				@other1.notification_list[1][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="508">
          <span class="hits">1</span>
          
          <code class="ruby">				@other1.notification_list[1][:condition][:cond_type].should eq COND_NUM_ATTENDING</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="509">
          <span class="hits">1</span>
          
          <code class="ruby">				@other1.notification_list[1][:condition][:num_users].should eq 3</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="510">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="511">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="512">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should change that user&#39;s status to STATUS_ATTENDING&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="513">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.get_user_status(@other2.id).should eq STATUS_ATTENDING</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="514">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="515">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="516">
          <span class="hits">1</span>
          
          <code class="ruby">			it &quot;should change the status of the condition to COND_MET&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="517">
          <span class="hits">1</span>
          
          <code class="ruby">				@event.party_list[@other1.id][:condition][:cond_met].should eq COND_MET</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="518">
          
          
          <code class="ruby">			end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="519">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="61">
=======
        <li class="never" data-hits="" data-linenumber="520">
>>>>>>> master
          
          
          <code class="ruby">	# Finds user Friend via friend_email. If valid, adds Friend.id to self.friend_list and sorts the friend_list.</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="62">
=======
        <li class="never" data-hits="" data-linenumber="521">
>>>>>>> master
          
          
          <code class="ruby">	# * On success also posts FriendNotification to Friend</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="63">
=======
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="94d1cb6e381e702c98c7a36cd02a0e2823c8107c">
  <div class="header">
    <h3>spec/models/group_spec.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>77</b> relevant lines. 
      <span class="green"><b>77</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	def concat_friend(friend_email)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="64">
          
          
          <code class="ruby">		friend = self.class.find_by(email: friend_email.downcase)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="65">
          
          
          <code class="ruby">		return ERR_UNSUCCESSFUL if friend == nil</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="66">
          
          
          <code class="ruby">		if !self.friend_list.include?(friend.id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="67">
          
          
          <code class="ruby">			self.friend_list = (self.friend_list &lt;&lt; friend.id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="68">
          
          
          <code class="ruby">			self.update_attribute(:friend_list, self.friend_list)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="69">
          
          
          <code class="ruby">			notif = FriendNotification.new(self)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="70">
          
          
          <code class="ruby">			friend.post_notification(notif)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="71">
          
          
          <code class="ruby">			notif.send_push(friend)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="72">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="73">
          
          
          <code class="ruby">		SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="74">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="75">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="76">
          
          
          <code class="ruby">	# Finds user Friend via friend_email. If valid, delete Friend.id in self.friend_list.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="77">
          <span class="hits">1</span>
          
          <code class="ruby">	def remove_friend(friend_email)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="78">
          
          
          <code class="ruby">		friend = self.class.find_by(email: friend_email.downcase)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="79">
          
          
          <code class="ruby">		if friend != nil</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="80">
          
          
          <code class="ruby">			self.friend_list.delete(friend.id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="81">
          
          
          <code class="ruby">			self.update_attribute(:friend_list, self.friend_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="82">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="83">
          
          
          <code class="ruby">		SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="84">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="85">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="86">
          
          
          <code class="ruby">	# Adds event_id into the user&#39;s list of events. Returns </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="87">
          
          
          <code class="ruby">	# ERR_UNSUCCESSFUL if the event is invalid, SUCCESS otherwise. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="88">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_event(event_id)</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="89">
          <span class="hits">60</span>
          
          <code class="ruby">		return ERR_UNSUCCESSFUL if not Event.exists?(event_id)</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="90">
          <span class="hits">60</span>
          
          <code class="ruby">		self.event_list |= [event_id]</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="91">
          <span class="hits">60</span>
          
          <code class="ruby">		self.update_attribute(:event_list, self.event_list)</code>
        </li>
      
        <li class="covered" data-hits="60" data-linenumber="92">
          <span class="hits">60</span>
          
          <code class="ruby">		SUCCESS</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="93">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="94">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="95">
          
          
          <code class="ruby">	# Adds the device_token into the user&#39;s list of devices. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="96">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_device_token(device_token)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="97">
          
          
          <code class="ruby">		self.device_tokens |= [device_token]</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="98">
          
          
          <code class="ruby">		self.update_attribute(:device_tokens, self.device_tokens)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="99">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="100">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="101">
          
          
          <code class="ruby">	# Removes the device_token from the user&#39;s list of devices.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="102">
          
          
          <code class="ruby">	# Does nothing if that device_token isn&#39;t in the list.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="103">
          <span class="hits">1</span>
          
          <code class="ruby">	def remove_device_token(device_token)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="104">
          
          
          <code class="ruby">		self.device_tokens.delete(device_token)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="105">
          
          
          <code class="ruby">		self.update_attribute(:device_tokens, self.device_tokens)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="106">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="107">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="108">
          
          
          <code class="ruby">	# Removes event_id from the user&#39;s list of events.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="109">
          <span class="hits">1</span>
          
          <code class="ruby">	def delete_event(event_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="110">
          
          
          <code class="ruby">		self.event_list.delete(event_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="111">
          
          
          <code class="ruby">		self.update_attribute(:event_list, self.event_list)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="112">
          
          
          <code class="ruby">		self.notification_list.delete_if do |notif|</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="113">
          
          
          <code class="ruby">			notif.has_key?(:event) &amp;&amp; notif[:event] == event_id</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="114">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="115">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="116">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="117">
          
          
          <code class="ruby">	# Adds group_id into the user&#39;s list of groups. Returns </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="118">
          
          
          <code class="ruby">	# ERR_UNSUCCESSFUL if the group is invalid, SUCCESS otherwise. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="119">
          <span class="hits">1</span>
          
          <code class="ruby">	def add_group(group_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="120">
          
          
          <code class="ruby">		</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="121">
          
          
          <code class="ruby">		# ADD ERROR CHECKING HERE FOR INVALID GROUP -&gt; TEST</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="122">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="123">
          
          
          <code class="ruby">		self.group_list |= [group_id]</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="124">
          
          
          <code class="ruby">		self.update_attribute(:group_list, self.group_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="125">
          
          
          <code class="ruby">		</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="126">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="127">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="128">
          
          
          <code class="ruby">	# Removes group_id from the user&#39;s list of groups.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="129">
          <span class="hits">1</span>
          
          <code class="ruby">	def delete_group(group_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="130">
          
          
          <code class="ruby">		self.group_list.delete(group_id)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="131">
          
          
          <code class="ruby">		self.update_attribute(:group_list, self.group_list)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="132">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="133">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="134">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="135">
          
          
          <code class="ruby">	# Changes the user&#39;s status (e.g. attending, declined) </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="136">
          
          
          <code class="ruby">	# within event_id. Does nothing if the event doesn&#39;t exist.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="137">
          <span class="hits">1</span>
          
          <code class="ruby">	def respond_event(event_id, new_status)</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="138">
          
          
          <code class="ruby">		begin</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="139">
          
          
          <code class="ruby">			event = Event.find(event_id)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="140">
          
          
          <code class="ruby">		rescue ActiveRecord::RecordNotFound</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="141">
          
          
          <code class="ruby">			return</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="142">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="143">
          
          
          <code class="ruby">		event.set_user_status(self.id, new_status)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="144">
          
          
          <code class="ruby">	end </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="145">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="146">
          
          
          <code class="ruby">	# Adds NOTIFICATION to the user&#39;s notification_list. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="147">
          <span class="hits">1</span>
          
          <code class="ruby">	def post_notification(notification)</code>
        </li>
      
        <li class="covered" data-hits="30" data-linenumber="148">
          <span class="hits">30</span>
          
          <code class="ruby">		self.update_attribute(:notification_list, self.notification_list &lt;&lt; notification.get_hash)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="149">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="150">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="151">
          
          
          <code class="ruby">	# Returns a hash containing this user&#39;s information: Name and Email.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="152">
          <span class="hits">1</span>
          
          <code class="ruby">	def get_hash</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="153">
          
          
          <code class="ruby">		return { name: self.name, email: self.email }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="154">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="155">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="156">
          
          
          <code class="ruby">	# Function that generates a unique remember_token, random string of base 64</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="157">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.new_token</code>
        </li>
      
        <li class="covered" data-hits="103" data-linenumber="158">
          <span class="hits">103</span>
          
          <code class="ruby">		token = loop do</code>
        </li>
      
        <li class="covered" data-hits="103" data-linenumber="159">
          <span class="hits">103</span>
          
          <code class="ruby">			random_token = SecureRandom.urlsafe_base64</code>
        </li>
      
        <li class="covered" data-hits="103" data-linenumber="160">
          <span class="hits">103</span>
          
          <code class="ruby">			break random_token unless User.exists?(remember_token: User.hash(random_token))</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="161">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="103" data-linenumber="162">
          <span class="hits">103</span>
          
          <code class="ruby">		token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="163">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="164">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="165">
          
          
          <code class="ruby">	# Function that hashes the random token</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="166">
          
          
          <code class="ruby">	# * Param: token </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="167">
          <span class="hits">1</span>
          
          <code class="ruby">	def self.hash(token)</code>
        </li>
      
        <li class="covered" data-hits="225" data-linenumber="168">
          <span class="hits">225</span>
          
          <code class="ruby">		Digest::SHA1.hexdigest(token.to_s)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="169">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="170">
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="171">
          <span class="hits">1</span>
=======
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="a870d1a9199bc2c98f24ed5b27c3cfdf1bdd367f">
  <div class="header">
    <h3>spec/models/user_spec.rb</h3>
    <h4><span class="green">97.89 %</span> covered</h4>
    <div>
      <b>190</b> relevant lines. 
      <span class="green"><b>186</b> lines covered</span> and
      <span class="red"><b>4</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
>>>>>>> master
          
          <code class="ruby">	private</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="172">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="173">
          
          
          <code class="ruby">	# Function that generates a hashed session token for user</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="174">
          <span class="hits">1</span>
          
          <code class="ruby">	def create_remember_token</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="175">
          <span class="hits">79</span>
          
          <code class="ruby">		self.remember_token = self.class.hash(User.new_token)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="176">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="177">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="178">
          
          
          <code class="ruby">  # Function that checks if name is formatted correctly</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="179">
          
          
          <code class="ruby">  # * Return true if name matches VALID_NAME_REGEX, name exists, length non-empty and less than MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="180">
          <span class="hits">1</span>
          
          <code class="ruby">	def name_valid?</code>
        </li>
      
        <li class="covered" data-hits="85" data-linenumber="181">
          <span class="hits">85</span>
          
          <code class="ruby">		if self.name == nil</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="182">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="183">
          
          
          <code class="ruby">		elsif VALID_NAME_REGEX !~ self.name || self.name.empty? || self.name.length &gt; MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="6" data-linenumber="184">
          <span class="hits">6</span>
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="185">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="186">
          <span class="hits">79</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="187">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="188">
          
          
          <code class="ruby">				</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="189">
          
          
          <code class="ruby">	# Function that checks if email is formatted correctly</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="190">
          
          
          <code class="ruby">	# * Return true if email matches VALID_EMAIL_REGEX, email exists, length non-empty and less than MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="191">
          <span class="hits">1</span>
          
          <code class="ruby">	def email_valid?</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="192">
          <span class="hits">79</span>
          
          <code class="ruby">		if self.email == nil</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="193">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="194">
          
          
          <code class="ruby">		elsif VALID_EMAIL_REGEX !~ self.email || self.email.empty? || self.email.length &gt; MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="195">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="196">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="197">
          <span class="hits">79</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="198">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="199">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="200">
          
          
          <code class="ruby">	# Function that checks if email name is unique</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="201">
          
          
          <code class="ruby">	# * Return true if email does not exist in db</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="202">
          <span class="hits">1</span>
          
          <code class="ruby">	def email_available?</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="203">
          <span class="hits">79</span>
          
          <code class="ruby">		self.valid?</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="204">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="205">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="206">
          
          
          <code class="ruby">	# Function that checks if password is formatted correctly</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="207">
          
          
          <code class="ruby">	# * Return truf if password exists, length greater than MIN_PW_LENGTH and less than MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="208">
          <span class="hits">1</span>
          
          <code class="ruby">	def password_valid?</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="209">
          <span class="hits">79</span>
          
          <code class="ruby">		if self.password == nil</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="210">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="211">
          
          
          <code class="ruby">		elsif self.password.length &lt; MIN_PW_LENGTH || self.password.length &gt; MAX_CREDENTIAL_LENGTH</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="212">
          
          
          <code class="ruby">			return false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="213">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="covered" data-hits="79" data-linenumber="214">
          <span class="hits">79</span>
          
          <code class="ruby">		true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="215">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="216">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="217">
          
          
          <code class="ruby">	# Function that generates a new unique_id that is not associated with user in db yet</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="218">
          
          
          <code class="ruby">	# NOT USED in Iteration V1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="219">
          <span class="hits">1</span>
          
          <code class="ruby">	def create_unique_id</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="220">
          
          
          <code class="ruby">		self.unique_id = loop do</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="221">
          
          
          <code class="ruby">			random_token = SecureRandom.urlsafe_base64</code>
        </li>
      
        <li class="missed" data-hits="0" data-linenumber="222">
          
          
          <code class="ruby">			break random_token unless User.exists?(unique_id: random_token)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="223">
          
          
          <code class="ruby">		end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="224">
          
          
          <code class="ruby">	end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="225">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="cc6c6b538ff992e778ba8bca760950b8fb1e87fc">
  <div class="header">
    <h3>config/application.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>9</b> relevant lines. 
      <span class="green"><b>9</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">require File.expand_path(&#39;../boot&#39;, __FILE__)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># Pick the frameworks you want:</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">require &quot;active_record/railtie&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">require &quot;action_controller/railtie&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">require &quot;action_mailer/railtie&quot;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
          
          <code class="ruby">require &quot;sprockets/railtie&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="8">
          
          
          <code class="ruby"># require &quot;rails/test_unit/railtie&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby"># Require the gems listed in Gemfile, including any gems</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby"># you&#39;ve limited to :test, :development, or :production.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
          <code class="ruby">Bundler.require(:default, Rails.env)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="14">
          <span class="hits">1</span>
          
          <code class="ruby">module WuffBackend</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="15">
          <span class="hits">1</span>
          
          <code class="ruby">  class Application &lt; Rails::Application</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby">    # Settings in config/environments/* take precedence over those specified here.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="17">
          
          
          <code class="ruby">    # Application configuration should go into files in config/initializers</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby">    # -- all .rb files in that directory are automatically loaded.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="20">
          
          
          <code class="ruby">    # Set Time.zone default to the specified zone and make Active Record auto-convert to this zone.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="21">
          
          
          <code class="ruby">    # Run &quot;rake -D time&quot; for a list of tasks for finding time zone names. Default is UTC.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby">    # config.time_zone = &#39;Central Time (US &amp; Canada)&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="24">
          
          
          <code class="ruby">    # The default locale is :en and all translations from config/locales/*.rb,yml are auto loaded.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby">    # config.i18n.load_path += Dir[Rails.root.join(&#39;my&#39;, &#39;locales&#39;, &#39;*.{rb,yml}&#39;).to_s]</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby">    # config.i18n.default_locale = :de</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="27">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby">    # Always force SSL connection as countermeasure for hijacking session cookie</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby">    # config.force_ssl = true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="31">
          <span class="hits">1</span>
          
          <code class="ruby">    config.autoload_paths &lt;&lt; File.join(Rails.root, &quot;app&quot;, &quot;classes&quot;)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="32">
          
          
          <code class="ruby">  end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="bb789ee7477c134792e8e1ad1517c4cc012ddea4">
  <div class="header">
    <h3>config/boot.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>2</b> relevant lines. 
      <span class="green"><b>2</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Set up gems listed in the Gemfile.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">ENV[&#39;BUNDLE_GEMFILE&#39;] ||= File.expand_path(&#39;../../Gemfile&#39;, __FILE__)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">require &#39;bundler/setup&#39; if File.exists?(ENV[&#39;BUNDLE_GEMFILE&#39;])</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="6d51b1599b346a386756e3e336ca92b9d3c937a8">
  <div class="header">
    <h3>config/environment.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>2</b> relevant lines. 
      <span class="green"><b>2</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Load the Rails application.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">require File.expand_path(&#39;../application&#39;, __FILE__)</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># Initialize the Rails application.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">WuffBackend::Application.initialize!</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="d4a1a6fd6d6a26d59a669fb30140d71bd4f988a5">
  <div class="header">
    <h3>config/environments/test.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>11</b> relevant lines. 
      <span class="green"><b>11</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
          <span class="hits">1</span>
          
          <code class="ruby">WuffBackend::Application.configure do</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby">  # Settings specified here will take precedence over those in config/application.rb.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby">  # The test environment is used exclusively to run your application&#39;s</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby">  # test suite. You never need to work with it otherwise. Remember that</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby">  # your test database is &quot;scratch space&quot; for the test suite and is wiped</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby">  # and recreated between test runs. Don&#39;t rely on the data there!</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="8">
          <span class="hits">1</span>
          
          <code class="ruby">  config.cache_classes = true</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="10">
          
          
          <code class="ruby">  # Do not eager load code on boot. This avoids loading your whole application</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
          <code class="ruby">  # just for the purpose of running a single test. If you are using a tool that</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="12">
          
          
          <code class="ruby">  # preloads Rails for running tests, you may have to set it to true.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="13">
          <span class="hits">1</span>
          
          <code class="ruby">  config.eager_load = false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="14">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby">  # Configure static asset server for tests with Cache-Control for performance.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="16">
          <span class="hits">1</span>
          
          <code class="ruby">  config.serve_static_assets  = true</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="17">
          <span class="hits">1</span>
          
          <code class="ruby">  config.static_cache_control = &quot;public, max-age=3600&quot;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="18">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="19">
          
          
          <code class="ruby">  # Show full error reports and disable caching.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="20">
          <span class="hits">1</span>
          
          <code class="ruby">  config.consider_all_requests_local       = true</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="21">
          <span class="hits">1</span>
          
          <code class="ruby">  config.action_controller.perform_caching = false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="22">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="23">
          
          
          <code class="ruby">  # Raise exceptions instead of rendering exception templates.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="24">
          <span class="hits">1</span>
          
          <code class="ruby">  config.action_dispatch.show_exceptions = false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="25">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="26">
          
          
          <code class="ruby">  # Disable request forgery protection in test environment.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="27">
          <span class="hits">1</span>
          
          <code class="ruby">  config.action_controller.allow_forgery_protection = false</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="28">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="29">
          
          
          <code class="ruby">  # Tell Action Mailer not to deliver emails to the real world.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="30">
          
          
          <code class="ruby">  # The :test delivery method accumulates sent emails in the</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="31">
          
          
          <code class="ruby">  # ActionMailer::Base.deliveries array.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="32">
          <span class="hits">1</span>
          
          <code class="ruby">  config.action_mailer.delivery_method = :test</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="33">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="34">
          
          
          <code class="ruby">  # Print deprecation notices to the stderr.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="35">
          <span class="hits">1</span>
          
          <code class="ruby">  config.active_support.deprecation = :stderr</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="36">
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="369a557d96ee71aff7fa64d909f1c00aed926f38">
  <div class="header">
    <h3>config/initializers/backtrace_silencers.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>0</b> relevant lines. 
      <span class="green"><b>0</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># You can add backtrace silencers for libraries that you&#39;re using but don&#39;t wish to see in your backtraces.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># Rails.backtrace_cleaner.add_silencer { |line| line =~ /my_noisy_library/ }</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="6">
          
          
          <code class="ruby"># You can also remove all the silencers if you&#39;re trying to debug a problem that might stem from framework code.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby"># Rails.backtrace_cleaner.remove_silencers!</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="03cd13f62300d1960ff51c6ed2edae2b1d2a1d4d">
  <div class="header">
    <h3>config/initializers/facebook.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>2</b> relevant lines. 
      <span class="green"><b>2</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Wuff&#39;s Facebook Client ID</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">CLIENT_ID = &#39;483469725088597&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="4">
          
          
          <code class="ruby"># Wuff&#39;s Facebook Client Secret</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
          
          <code class="ruby">CLIENT_SECRET = &#39;5710f90232192d0533cca6680166cf41&#39;</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="2a80c9a3a2feef2782a1d505914c9a3937981858">
  <div class="header">
    <h3>config/initializers/filter_parameter_logging.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># Configure sensitive parameters which will be filtered from the log file.</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">Rails.application.config.filter_parameters += [:password]</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="4e93607b242eb9b8e6c06c9c7131aa3aeb179d5f">
  <div class="header">
    <h3>config/initializers/global_constants.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>26</b> relevant lines. 
      <span class="green"><b>26</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Success return code</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
          
          <code class="ruby">SUCCESS = 1</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="3">
          
          
          <code class="ruby"># Invalid name: Name must exist and have max length MAX_NAME_LENGTH</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_INVALID_NAME = -1 </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="5">
          
          
          <code class="ruby"># Invalid time: Time must be a valid time</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_INVALID_TIME = -10</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="7">
          
          
          <code class="ruby"># Invalid field: Generic, one of the fields is invalid. </code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="8">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_INVALID_FIELD = -6</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="9">
          
          
          <code class="ruby"># Generic error for an unsuccessful action</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="10">
          <span class="hits">1</span>
          
          <code class="ruby">ERR_UNSUCCESSFUL = -7</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="11">
          
          
<<<<<<< HEAD
          <code class="ruby"># Invalid email: must be VALID_EMAIL_REGEX format; cannot be empty; cannot be longer than MAX_CREDENTIAL_LENGTH</code>
=======
          <code class="ruby"></code>
>>>>>>> master
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
          
<<<<<<< HEAD
          <code class="ruby">ERR_INVALID_EMAIL = -2</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="13">
          
=======
          <code class="ruby">end</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="172">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="173">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"># Password cannot be longer than MAX_CREDENTIAL_LENGTH or shorter than MIN_PW_LENGTH</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="14">
=======
        <li class="covered" data-hits="1" data-linenumber="174">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">ERR_INVALID_PASSWORD = -3</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="15">
=======
        <li class="covered" data-hits="4" data-linenumber="175">
          <span class="hits">4</span>
>>>>>>> master
          
          
          <code class="ruby"># Email is not unique (i.e. exists already in database)</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="16">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="4" data-linenumber="176">
          <span class="hits">4</span>
>>>>>>> master
          
          <code class="ruby">ERR_EMAIL_TAKEN = -4</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="17">
=======
        <li class="covered" data-hits="4" data-linenumber="177">
          <span class="hits">4</span>
>>>>>>> master
          
          
          <code class="ruby"># Cannot find the email/password pair in the database (i.e. login fail)</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="18">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="4" data-linenumber="178">
          <span class="hits">4</span>
>>>>>>> master
          
          <code class="ruby">ERR_BAD_CREDENTIALS = -5</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="19">
=======
        <li class="covered" data-hits="4" data-linenumber="179">
          <span class="hits">4</span>
>>>>>>> master
          
          
          <code class="ruby"># Error when session token doesn’t match a valid logged in session. </code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="20">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="4" data-linenumber="180">
          <span class="hits">4</span>
>>>>>>> master
          
          <code class="ruby">ERR_INVALID_SESSION = -11 </code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="21">
=======
        <li class="covered" data-hits="4" data-linenumber="181">
          <span class="hits">4</span>
>>>>>>> master
          
          
          <code class="ruby"># Error when you don&#39;t have permission to do something </code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="22">
          
=======
        <li class="covered" data-hits="4" data-linenumber="182">
          <span class="hits">4</span>
>>>>>>> master
          
          <code class="ruby"># (i.e. you try to delete an event you don&#39;t own</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="23">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="183">
          
>>>>>>> master
          
          <code class="ruby">ERR_INVALID_PERMISSIONS = -12</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="24">
=======
        <li class="never" data-hits="" data-linenumber="184">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="25">
=======
        <li class="covered" data-hits="1" data-linenumber="185">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"># Possible user statuses in respect to an event. </code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="26">
=======
        <li class="covered" data-hits="1" data-linenumber="186">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">STATUS_NO_RESPONSE = 0</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="27">
=======
        <li class="covered" data-hits="1" data-linenumber="187">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">STATUS_ATTENDING = 1</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="28">
=======
        <li class="covered" data-hits="1" data-linenumber="188">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">STATUS_NOT_ATTENDING = -1</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="29">
=======
        <li class="never" data-hits="" data-linenumber="189">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="30">
=======
        <li class="never" data-hits="" data-linenumber="190">
>>>>>>> master
          
          
          <code class="ruby"># Event notification types</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="31">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="191">
>>>>>>> master
          
          <code class="ruby">NOTIF_NEW_EVENT = 1</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="32">
          <span class="hits">1</span>
          
          <code class="ruby">NOTIF_DELETE_EVENT = 2</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="33">
=======
        <li class="covered" data-hits="1" data-linenumber="192">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">NOTIF_EDIT_EVENT = 3</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="34">
=======
        <li class="covered" data-hits="1" data-linenumber="193">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">NOTIF_FRIEND_ADD = 4</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="35">
=======
        <li class="covered" data-hits="1" data-linenumber="194">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">NOTIF_COND_MET = 5</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="36">
=======
        <li class="covered" data-hits="1" data-linenumber="195">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">NOTIF_EVENT_STARTING = 6</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="37">
=======
        <li class="never" data-hits="" data-linenumber="196">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="38">
=======
        <li class="never" data-hits="" data-linenumber="197">
>>>>>>> master
          
          
          <code class="ruby"># Condition types</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="39">
=======
        <li class="never" data-hits="" data-linenumber="198">
>>>>>>> master
          
          
          <code class="ruby"># No condition set. </code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="40">
=======
        <li class="covered" data-hits="1" data-linenumber="199">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">COND_NONE = 0</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="41">
=======
        <li class="covered" data-hits="1" data-linenumber="200">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"># At least a certain number of other people will be attending the event</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="42">
=======
        <li class="covered" data-hits="1" data-linenumber="201">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">COND_NUM_ATTENDING = 1</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="43">
=======
        <li class="never" data-hits="" data-linenumber="202">
>>>>>>> master
          
          
          <code class="ruby"># Any one of the users specified are attending the event.</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="44">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="203">
          
>>>>>>> master
          
          <code class="ruby">COND_USER_ATTENDING_ANY = 2</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="45">
=======
        <li class="never" data-hits="" data-linenumber="204">
>>>>>>> master
          
          
          <code class="ruby"># All of the users specified will be attending the event.</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="46">
=======
        <li class="covered" data-hits="1" data-linenumber="205">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">COND_USER_ATTENDING_ALL = 3</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="47">
=======
        <li class="covered" data-hits="1" data-linenumber="206">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="48">
=======
        <li class="covered" data-hits="1" data-linenumber="207">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"># The condition has been met. </code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="49">
=======
        <li class="covered" data-hits="1" data-linenumber="208">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">COND_MET = 0 </code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="50">
=======
        <li class="never" data-hits="" data-linenumber="209">
>>>>>>> master
          
          
          <code class="ruby"># The condition has not been met.</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="51">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="210">
          
>>>>>>> master
          
          <code class="ruby">COND_NOT_MET = 1</code>
        </li>
      
<<<<<<< HEAD
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="88635b51e8839fd1f1325658d978acac27850feb">
  <div class="header">
    <h3>config/initializers/inflections.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>0</b> relevant lines. 
      <span class="green"><b>0</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
=======
        <li class="never" data-hits="" data-linenumber="211">
          
          
          <code class="ruby"></code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="212">
>>>>>>> master
          
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="2">
=======
        <li class="never" data-hits="" data-linenumber="213">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="3">
          
=======
        <li class="covered" data-hits="1" data-linenumber="214">
          <span class="hits">1</span>
          
          <code class="ruby">describe User, &quot;#add_event, #delete_event, #post_notification&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="215">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"># Add new inflection rules using the following format. Inflections</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="4">
=======
        <li class="covered" data-hits="2" data-linenumber="216">
          <span class="hits">2</span>
>>>>>>> master
          
          
          <code class="ruby"># are locale specific, and you may define rules for as many different</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="5">
=======
        <li class="never" data-hits="" data-linenumber="217">
>>>>>>> master
          
          
          <code class="ruby"># locales as you wish. All of these examples are active by default:</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="6">
          
=======
        <li class="covered" data-hits="2" data-linenumber="218">
          <span class="hits">2</span>
          
          <code class="ruby">		@user1.add</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="219">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby"># ActiveSupport::Inflector.inflections(:en) do |inflect|</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="7">
=======
        <li class="never" data-hits="" data-linenumber="220">
>>>>>>> master
          
          
          <code class="ruby">#   inflect.plural /^(ox)$/i, &#39;\1en&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="8">
          
=======
        <li class="covered" data-hits="2" data-linenumber="221">
          <span class="hits">2</span>
          
          <code class="ruby">		@user2.add</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="222">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">#   inflect.singular /^(ox)en/i, &#39;\1&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="9">
=======
        <li class="never" data-hits="" data-linenumber="223">
>>>>>>> master
          
          
          <code class="ruby">#   inflect.irregular &#39;person&#39;, &#39;people&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="10">
=======
        <li class="covered" data-hits="2" data-linenumber="224">
          <span class="hits">2</span>
>>>>>>> master
          
          
          <code class="ruby">#   inflect.uncountable %w( fish sheep )</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="11">
=======
        <li class="never" data-hits="" data-linenumber="225">
>>>>>>> master
          
          
          <code class="ruby"># end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="12">
=======
        <li class="never" data-hits="" data-linenumber="226">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="13">
          
=======
        <li class="covered" data-hits="1" data-linenumber="227">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"># These inflection rules are supported but not enabled by default:</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="14">
          
=======
        <li class="covered" data-hits="1" data-linenumber="228">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"># ActiveSupport::Inflector.inflections(:en) do |inflect|</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="15">
          
          
          <code class="ruby">#   inflect.acronym &#39;RESTful&#39;</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="16">
          
          
          <code class="ruby"># end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="4eb9fee4984bb02e61950be5aaed8bff02134bc4">
  <div class="header">
    <h3>config/initializers/mime_types.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>0</b> relevant lines. 
      <span class="green"><b>0</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="2">
          
=======
        <li class="covered" data-hits="2" data-linenumber="229">
          <span class="hits">2</span>
          
          <code class="ruby">			@event1_id = Event.add_event(&quot;Test Event&quot;, @user1.id, </code>
        </li>
      
        <li class="never" data-hits="" data-linenumber="230">
          
          
          <code class="ruby">				DateTime.current.to_i + 10, [@user1.id])</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="231">
          <span class="hits">2</span>
          
          <code class="ruby">			@event1 = Event.find(@event1_id)</code>
        </li>
      
        <li class="covered" data-hits="2" data-linenumber="232">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="3">
          
=======
        <li class="covered" data-hits="2" data-linenumber="233">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby"># Add new mime types for use in respond_to blocks:</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="4">
          
=======
        <li class="covered" data-hits="2" data-linenumber="234">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby"># Mime::Type.register &quot;text/richtext&quot;, :rtf</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="5">
          
=======
        <li class="covered" data-hits="2" data-linenumber="235">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby"># Mime::Type.register_alias &quot;text/html&quot;, :iphone</code>
        </li>
      
<<<<<<< HEAD
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="412f1199097bc9185ac7e5ef5496ce65a817a5be">
  <div class="header">
    <h3>config/initializers/push_setup.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>2</b> relevant lines. 
      <span class="green"><b>2</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
=======
        <li class="covered" data-hits="2" data-linenumber="236">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="2">
=======
        <li class="never" data-hits="" data-linenumber="237">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="3">
=======
        <li class="covered" data-hits="1" data-linenumber="238">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">APNS.host = &#39;gateway.sandbox.push.apple.com&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="4">
=======
        <li class="covered" data-hits="1" data-linenumber="239">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"># This is the default, used for development. </code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="5">
          
=======
        <li class="covered" data-hits="1" data-linenumber="240">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="6">
          
=======
        <li class="covered" data-hits="1" data-linenumber="241">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"># APNS.host = &#39;gateway.push.apple.com&#39; </code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="7">
          
=======
        <li class="covered" data-hits="1" data-linenumber="242">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"># This is the production server.</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="8">
=======
        <li class="covered" data-hits="1" data-linenumber="243">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="9">
=======
        <li class="covered" data-hits="1" data-linenumber="244">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">APNS.pem  = Rails.root.join(&#39;push&#39;, &#39;wuffkey.pem&#39;)</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="10">
=======
        <li class="never" data-hits="" data-linenumber="245">
>>>>>>> master
          
          
          <code class="ruby"># Path to the .pem file containing private key for our server</code>
        </li>
      
<<<<<<< HEAD
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="a408052bb2ff5b00b0cdf1d9cbff0d1f132f0fa1">
  <div class="header">
    <h3>config/initializers/secret_token.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
=======
        <li class="covered" data-hits="1" data-linenumber="246">
          <span class="hits">1</span>
          
          <code class="ruby">			@user2.notification_list.each do |notif|</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="247">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="2">
=======
        <li class="never" data-hits="" data-linenumber="248">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="3">
=======
        <li class="covered" data-hits="1" data-linenumber="249">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"># Your secret key is used for verifying the integrity of signed cookies.</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="4">
=======
        <li class="missed" data-hits="0" data-linenumber="250">
>>>>>>> master
          
          
          <code class="ruby"># If you change this key, all old signed cookies will become invalid!</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="5">
=======
        <li class="never" data-hits="" data-linenumber="251">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="6">
=======
        <li class="covered" data-hits="1" data-linenumber="252">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"># Make sure the secret is at least 30 characters and all random,</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="7">
=======
        <li class="never" data-hits="" data-linenumber="253">
>>>>>>> master
          
          
          <code class="ruby"># no regular words or you&#39;ll be exposed to dictionary attacks.</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="8">
=======
        <li class="covered" data-hits="1" data-linenumber="254">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"># You can use `rake secret` to generate a secure secret key.</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="9">
          
=======
        <li class="covered" data-hits="1" data-linenumber="255">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="10">
          
=======
        <li class="covered" data-hits="1" data-linenumber="256">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"># Make sure your secret_key_base is kept private</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="11">
          
=======
        <li class="covered" data-hits="1" data-linenumber="257">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"># if you&#39;re sharing your code publicly.</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="12">
=======
        <li class="covered" data-hits="1" data-linenumber="258">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">WuffBackend::Application.config.secret_key_base = &#39;fd297fd240011365b5da1836058b36a8c60b622eee14eac045c14564596f296d40446c3965371a504352cf981cc1aa28816cb9a979b72497b5ad506bf9be4f31&#39;</code>
        </li>
      
<<<<<<< HEAD
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="4c34c26ea384f12aaf3e1eeb71f21d3af8b2e657">
  <div class="header">
    <h3>config/initializers/session_store.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>1</b> relevant lines. 
      <span class="green"><b>1</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
=======
        <li class="covered" data-hits="1" data-linenumber="259">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="2">
=======
        <li class="covered" data-hits="1" data-linenumber="260">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="3">
=======
        <li class="covered" data-hits="1" data-linenumber="261">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">WuffBackend::Application.config.session_store :cookie_store, key: &#39;_wuff_backend_session&#39;</code>
        </li>
      
<<<<<<< HEAD
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="3fe2494a5a3cafca22ea7227bf85206c2aa46016">
  <div class="header">
    <h3>config/initializers/wrap_parameters.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>2</b> relevant lines. 
      <span class="green"><b>2</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="never" data-hits="" data-linenumber="1">
          
=======
        <li class="covered" data-hits="1" data-linenumber="262">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"># Be sure to restart your server when you modify this file.</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="2">
=======
        <li class="missed" data-hits="0" data-linenumber="263">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="3">
=======
        <li class="never" data-hits="" data-linenumber="264">
>>>>>>> master
          
          
          <code class="ruby"># This file contains settings for ActionController::ParamsWrapper which</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="4">
          
=======
        <li class="covered" data-hits="1" data-linenumber="265">
          <span class="hits">1</span>
>>>>>>> master
          
          <code class="ruby"># is enabled by default.</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="5">
=======
        <li class="missed" data-hits="0" data-linenumber="266">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="6">
=======
        <li class="never" data-hits="" data-linenumber="267">
>>>>>>> master
          
          
          <code class="ruby"># Enable parameter wrapping for JSON. You can disable this by setting :format to an empty array.</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="7">
=======
        <li class="covered" data-hits="1" data-linenumber="268">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">ActiveSupport.on_load(:action_controller) do</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="8">
          <span class="hits">1</span>
=======
        <li class="missed" data-hits="0" data-linenumber="269">
          
>>>>>>> master
          
          <code class="ruby">  wrap_parameters format: [:json] if respond_to?(:wrap_parameters)</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="9">
=======
        <li class="never" data-hits="" data-linenumber="270">
>>>>>>> master
          
          
          <code class="ruby">end</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="10">
=======
        <li class="covered" data-hits="1" data-linenumber="271">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="11">
=======
        <li class="never" data-hits="" data-linenumber="272">
>>>>>>> master
          
          
          <code class="ruby"># To enable root element in JSON for ActiveRecord objects.</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="12">
=======
        <li class="never" data-hits="" data-linenumber="273">
>>>>>>> master
          
          
          <code class="ruby"># ActiveSupport.on_load(:active_record) do</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="13">
=======
        <li class="never" data-hits="" data-linenumber="274">
>>>>>>> master
          
          
          <code class="ruby">#  self.include_root_in_json = true</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="14">
=======
        <li class="never" data-hits="" data-linenumber="275">
>>>>>>> master
          
          
          <code class="ruby"># end</code>
        </li>
      
<<<<<<< HEAD
    </ol>
  </pre>
</div>
      
        <div class="source_table" id="679814302cc4026285b8e05c03333830819e2824">
  <div class="header">
    <h3>config/routes.rb</h3>
    <h4><span class="green">100.0 %</span> covered</h4>
    <div>
      <b>31</b> relevant lines. 
      <span class="green"><b>31</b> lines covered</span> and
      <span class="red"><b>0</b> lines missed.</span>
    </div>
  </div>
  
  <pre>
    <ol>
      
        <li class="covered" data-hits="1" data-linenumber="1">
=======
        <li class="covered" data-hits="1" data-linenumber="276">
          <span class="hits">1</span>
          
          <code class="ruby">describe User, &quot;#add_group, #delete_group&quot; do</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="277">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">WuffBackend::Application.routes.draw do</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="2">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="2" data-linenumber="278">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">  resources :users</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="3">
=======
        <li class="never" data-hits="" data-linenumber="279">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="4">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="2" data-linenumber="280">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">	post &#39;/user/add_user&#39;, to: &#39;users#add_user&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="5">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="2" data-linenumber="281">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">	post &#39;/user/login_user&#39;, to: &#39;users#login_user&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="6">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="282">
          
>>>>>>> master
          
          <code class="ruby">	delete &#39;/user/logout_user&#39;, to: &#39;users#logout_user&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="7">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="2" data-linenumber="283">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">	post &#39;/user/auth_facebook&#39;, to: &#39;users#auth_facebook&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="8">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="2" data-linenumber="284">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">	post &#39;/user/get_profile_pic&#39;, to: &#39;users#get_profile_pic&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="9">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="285">
          
>>>>>>> master
          
          <code class="ruby">	post &#39;/user/add_friend&#39;, to: &#39;users#add_friend&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="10">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="2" data-linenumber="286">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">	post &#39;/user/delete_friend&#39;, to: &#39;users#delete_friend&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="11">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="287">
          
>>>>>>> master
          
          <code class="ruby">	get &#39;/user/get_events&#39;, to: &#39;users#get_events&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="12">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="288">
          
>>>>>>> master
          
          <code class="ruby">	get &#39;/user/get_groups&#39;, to: &#39;users#get_groups&#39;	</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="13">
=======
        <li class="covered" data-hits="1" data-linenumber="289">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	get &#39;/user/get_friends&#39;, to: &#39;users#get_friends&#39;		</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="14">
=======
        <li class="covered" data-hits="1" data-linenumber="290">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	get &#39;/user/has_notifications&#39;, to: &#39;users#has_notifications?&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="15">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="2" data-linenumber="291">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">	get &#39;/user/get_notifications&#39;, to: &#39;users#get_notifications&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="16">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="2" data-linenumber="292">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">	delete &#39;/user/clear_notifications&#39;, to: &#39;users#clear_notifications&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="17">
          <span class="hits">1</span>
=======
        <li class="covered" data-hits="2" data-linenumber="293">
          <span class="hits">2</span>
>>>>>>> master
          
          <code class="ruby">	post &#39;/user/get_all_users&#39;, to: &#39;users#get_all_users&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="18">
=======
        <li class="never" data-hits="" data-linenumber="294">
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="19">
=======
        <li class="covered" data-hits="1" data-linenumber="295">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/update_user_status&#39;, to: &#39;events#update_user_status&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="20">
=======
        <li class="covered" data-hits="1" data-linenumber="296">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/invite_users&#39;, to: &#39;events#invite_users&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="21">
=======
        <li class="covered" data-hits="1" data-linenumber="297">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/create_event&#39;, to: &#39;events#create_event&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="22">
=======
        <li class="covered" data-hits="1" data-linenumber="298">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/view&#39;, to: &#39;events#view&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="23">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="299">
          
>>>>>>> master
          
          <code class="ruby">	delete &#39;/event/remove_user&#39;, to: &#39;events#remove_user&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="24">
=======
        <li class="covered" data-hits="1" data-linenumber="300">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	delete &#39;/event/cancel_event&#39;, to: &#39;events#cancel_event&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="25">
=======
        <li class="covered" data-hits="1" data-linenumber="301">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/edit_event&#39;, to: &#39;events#edit_event&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="26">
=======
        <li class="covered" data-hits="1" data-linenumber="302">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/add_conditional_acceptance&#39;, to: &#39;events#add_cond_acceptance&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="27">
=======
        <li class="covered" data-hits="1" data-linenumber="303">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/event/invite_group&#39;, to: &#39;events#invite_group&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="28">
=======
        <li class="covered" data-hits="1" data-linenumber="304">
          <span class="hits">1</span>
>>>>>>> master
          
          
          <code class="ruby"></code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="29">
=======
        <li class="covered" data-hits="1" data-linenumber="305">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/group/add_users&#39;, to: &#39;groups#add_users&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="30">
=======
        <li class="covered" data-hits="1" data-linenumber="306">
>>>>>>> master
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/group/create_group&#39;, to: &#39;groups#create_group&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="31">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="307">
>>>>>>> master
          
          <code class="ruby">	post &#39;/group/view&#39;, to: &#39;groups#view&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="32">
          <span class="hits">1</span>
          
          <code class="ruby">	delete &#39;/group/remove_user&#39;, to: &#39;groups#remove_user&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="covered" data-hits="1" data-linenumber="33">
          <span class="hits">1</span>
=======
        <li class="never" data-hits="" data-linenumber="308">
>>>>>>> master
          
          <code class="ruby">	delete &#39;/group/delete_group&#39;, to: &#39;groups#delete_group&#39;</code>
        </li>
      
        <li class="covered" data-hits="1" data-linenumber="34">
          <span class="hits">1</span>
          
          <code class="ruby">	post &#39;/group/edit_group&#39;, to: &#39;groups#edit_group&#39;</code>
        </li>
      
<<<<<<< HEAD
        <li class="never" data-hits="" data-linenumber="35">
=======
        <li class="never" data-hits="" data-linenumber="309">
>>>>>>> master
          
          
          <code class="ruby">end</code>
        </li>
      
    </ol>
  </pre>
</div>
      
      </div>
    </div>
  </body>
</html>
